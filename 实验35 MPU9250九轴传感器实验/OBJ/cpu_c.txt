; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o..\obj\cpu_c.o --asm_dir=..\OBJ\ --list_dir=..\OBJ\ --depend=..\obj\cpu_c.d --cpu=Cortex-M7.fp.dp --apcs=interwork -O0 --diag_suppress=9931 -I..\CORE -I..\OBJ -I..\USER -I..\HALLIB\STM32F7xx_HAL_Driver\Inc -I..\SYSTEM\delay -I..\SYSTEM\sys -I..\SYSTEM\usart -I..\HARDWARE\LED -I..\HARDWARE\KEY -I..\HARDWARE\LCD -I..\HARDWARE\SDRAM -I..\HARDWARE\IIC -I..\HARDWARE\24CXX -I..\HARDWARE\MPU9250 -I..\HARDWARE\DHT11 -I..\HARDWARE\MPU -I..\USMART -I..\DMP\driver\eMPL -I..\DMP\driver\include -I..\DMP\driver\stm32L -I..\DMP\eMPL-hal -I..\DMP\mllite -I..\DMP\mpl -I..\UCOSIII -I..\UCOSIII\UCOS-BSP -I..\UCOSIII\UCOS-CONFIG -I..\UCOSIII\uCOS-III\Source -I..\UCOSIII\uC-CPU\ARM-Cortex-M4\RealView -I..\UCOSIII\uC-LIB\Ports\ARM-Cortex-M4\RealView -I..\UCOSIII\uCOS-III\Ports\ARM-Cortex-M4\Generic\RealView -I..\UCOSIII\uCOS-III\Ports -I..\UCOSIII\uC-LIB -I..\UCOSIII\uC-CPU -I..\HARDWARE\MY_FUNCTION -I..\USER -I..\HARDWARE\CRC -I..\HARDWARE\DMA -I..\HARDWARE\HEART_BEAT -I..\HARDWARE\RECEIVE_ANALYZE -I..\HARDWARE\FEED_BACK -I..\HARDWARE\DATA -I"D:\1111111\32F4\Slam car\实验35 MPU9250九轴传感器实验\USER\RTE" -IF:\Keil_v5\ARM\PACK\Keil\STM32F7xx_DFP\2.7.0 -IF:\Keil_v5\ARM\CMSIS\Include -IF:\Keil_v5\ARM\PACK\Keil\STM32F7xx_DFP\2.7.0\Drivers\CMSIS\Device\ST\STM32F7xx\Include -D__UVISION_VERSION=514 -DSTM32F767xx -DSTM32F767xx -DUSE_HAL_DRIVER -DMPL_LOG_NDEBUG=1 -DEMPL -DMPU9250 -DEMPL_TARGET_STM32F4 --omf_browse=..\obj\cpu_c.crf ..\UCOSIII\uC-CPU\ARM-Cortex-M4\RealView\cpu_c.c]
                          THUMB

                          AREA ||i.CPU_BitBandClr||, CODE, READONLY, ALIGN=2

                  CPU_BitBandClr PROC
;;;137    
;;;138    void  CPU_BitBandClr (CPU_ADDR    addr,
000000  b510              PUSH     {r4,lr}
;;;139                          CPU_INT08U  bit_nbr)
;;;140    {
;;;141        CPU_ADDR  bit_word_off;
;;;142        CPU_ADDR  bit_word_addr;
;;;143    
;;;144    
;;;145        if ((addr >= CPU_BIT_BAND_SRAM_REG_LO) &&
000002  f1b05f00          CMP      r0,#0x20000000
000006  d30a              BCC      |L1.30|
;;;146            (addr <= CPU_BIT_BAND_SRAM_REG_HI)) {
000008  4c0c              LDR      r4,|L1.60|
00000a  42a0              CMP      r0,r4
00000c  d807              BHI      |L1.30|
;;;147            bit_word_off  = ((addr - CPU_BIT_BAND_SRAM_REG_LO  ) * 32) + (bit_nbr * 4);
00000e  0144              LSLS     r4,r0,#5
000010  eb040381          ADD      r3,r4,r1,LSL #2
;;;148            bit_word_addr = CPU_BIT_BAND_SRAM_BASE   + bit_word_off;
000014  f1035208          ADD      r2,r3,#0x22000000
;;;149    
;;;150          *(volatile CPU_INT32U *)(bit_word_addr) = 0;
000018  2400              MOVS     r4,#0
00001a  6014              STR      r4,[r2,#0]
00001c  e00c              B        |L1.56|
                  |L1.30|
;;;151    
;;;152        } else if ((addr >= CPU_BIT_BAND_PERIPH_REG_LO) &&
00001e  f1b04f80          CMP      r0,#0x40000000
000022  d309              BCC      |L1.56|
;;;153                   (addr <= CPU_BIT_BAND_PERIPH_REG_HI)) {
000024  4c06              LDR      r4,|L1.64|
000026  42a0              CMP      r0,r4
000028  d806              BHI      |L1.56|
;;;154            bit_word_off  = ((addr - CPU_BIT_BAND_PERIPH_REG_LO) * 32) + (bit_nbr * 4);
00002a  0144              LSLS     r4,r0,#5
00002c  eb040381          ADD      r3,r4,r1,LSL #2
;;;155            bit_word_addr = CPU_BIT_BAND_PERIPH_BASE + bit_word_off;
000030  f1034284          ADD      r2,r3,#0x42000000
;;;156    
;;;157          *(volatile CPU_INT32U *)(bit_word_addr) = 0;
000034  2400              MOVS     r4,#0
000036  6014              STR      r4,[r2,#0]
                  |L1.56|
;;;158        }
;;;159    }
000038  bd10              POP      {r4,pc}
;;;160    
                          ENDP

00003a  0000              DCW      0x0000
                  |L1.60|
                          DCD      0x200fffff
                  |L1.64|
                          DCD      0x400fffff

                          AREA ||i.CPU_BitBandSet||, CODE, READONLY, ALIGN=2

                  CPU_BitBandSet PROC
;;;179    
;;;180    void  CPU_BitBandSet (CPU_ADDR    addr,
000000  b510              PUSH     {r4,lr}
;;;181                          CPU_INT08U  bit_nbr)
;;;182    {
;;;183        CPU_ADDR  bit_word_off;
;;;184        CPU_ADDR  bit_word_addr;
;;;185    
;;;186    
;;;187        if ((addr >= CPU_BIT_BAND_SRAM_REG_LO) &&
000002  f1b05f00          CMP      r0,#0x20000000
000006  d30a              BCC      |L2.30|
;;;188            (addr <= CPU_BIT_BAND_SRAM_REG_HI)) {
000008  4c0c              LDR      r4,|L2.60|
00000a  42a0              CMP      r0,r4
00000c  d807              BHI      |L2.30|
;;;189            bit_word_off  = ((addr - CPU_BIT_BAND_SRAM_REG_LO  ) * 32) + (bit_nbr * 4);
00000e  0144              LSLS     r4,r0,#5
000010  eb040381          ADD      r3,r4,r1,LSL #2
;;;190            bit_word_addr = CPU_BIT_BAND_SRAM_BASE   + bit_word_off;
000014  f1035208          ADD      r2,r3,#0x22000000
;;;191    
;;;192          *(volatile CPU_INT32U *)(bit_word_addr) = 1;
000018  2401              MOVS     r4,#1
00001a  6014              STR      r4,[r2,#0]
00001c  e00c              B        |L2.56|
                  |L2.30|
;;;193    
;;;194        } else if ((addr >= CPU_BIT_BAND_PERIPH_REG_LO) &&
00001e  f1b04f80          CMP      r0,#0x40000000
000022  d309              BCC      |L2.56|
;;;195                   (addr <= CPU_BIT_BAND_PERIPH_REG_HI)) {
000024  4c06              LDR      r4,|L2.64|
000026  42a0              CMP      r0,r4
000028  d806              BHI      |L2.56|
;;;196            bit_word_off  = ((addr - CPU_BIT_BAND_PERIPH_REG_LO) * 32) + (bit_nbr * 4);
00002a  0144              LSLS     r4,r0,#5
00002c  eb040381          ADD      r3,r4,r1,LSL #2
;;;197            bit_word_addr = CPU_BIT_BAND_PERIPH_BASE + bit_word_off;
000030  f1034284          ADD      r2,r3,#0x42000000
;;;198    
;;;199          *(volatile CPU_INT32U *)(bit_word_addr) = 1;
000034  2401              MOVS     r4,#1
000036  6014              STR      r4,[r2,#0]
                  |L2.56|
;;;200        }
;;;201    }
000038  bd10              POP      {r4,pc}
;;;202    
                          ENDP

00003a  0000              DCW      0x0000
                  |L2.60|
                          DCD      0x200fffff
                  |L2.64|
                          DCD      0x400fffff

                          AREA ||i.CPU_IntSrcDis||, CODE, READONLY, ALIGN=2

                  CPU_IntSrcDis PROC
;;;252    
;;;253    void  CPU_IntSrcDis (CPU_INT08U  pos)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;254    {
000004  4604              MOV      r4,r0
;;;255        CPU_INT08U  group;
;;;256        CPU_INT08U  pos_max;
;;;257        CPU_INT08U  nbr;
;;;258        CPU_SR_ALLOC();
000006  f04f0800          MOV      r8,#0
;;;259    
;;;260    
;;;261        switch (pos) {
00000a  2c10              CMP      r4,#0x10
00000c  d27c              BCS      |L3.264|
00000e  e8dff004          TBB      [pc,r4]
000012  080e              DCB      0x08,0x0e
000014  0f10142d          DCB      0x0f,0x10,0x14,0x2d
000018  46090a0b          DCB      0x46,0x09,0x0a,0x0b
00001c  0c11120d          DCB      0x0c,0x11,0x12,0x0d
000020  135f              DCB      0x13,0x5f
;;;262            case CPU_INT_STK_PTR:                                   /* ---------------- INVALID OR RESERVED --------------- */
;;;263            case CPU_INT_RSVD_07:
000022  bf00              NOP      
;;;264            case CPU_INT_RSVD_08:
000024  bf00              NOP      
;;;265            case CPU_INT_RSVD_09:
000026  bf00              NOP      
;;;266            case CPU_INT_RSVD_10:
000028  bf00              NOP      
;;;267            case CPU_INT_RSVD_13:
00002a  bf00              NOP      
;;;268                 break;
00002c  e09e              B        |L3.364|
;;;269    
;;;270    
;;;271                                                                    /* ----------------- SYSTEM EXCEPTIONS ---------------- */
;;;272            case CPU_INT_RESET:                                     /* Reset (see Note #2).                                 */
;;;273            case CPU_INT_NMI:                                       /* Non-maskable interrupt (see Note #2).                */
00002e  bf00              NOP      
;;;274            case CPU_INT_HFAULT:                                    /* Hard fault (see Note #2).                            */
000030  bf00              NOP      
;;;275            case CPU_INT_SVCALL:                                    /* SVCall (see Note #2).                                */
000032  bf00              NOP      
;;;276            case CPU_INT_DBGMON:                                    /* Debug monitor (see Note #2).                         */
000034  bf00              NOP      
;;;277            case CPU_INT_PENDSV:                                    /* PendSV (see Note #2).                                */
000036  bf00              NOP      
;;;278                 break;
000038  e098              B        |L3.364|
;;;279    
;;;280            case CPU_INT_MEM:                                       /* Memory management.                                   */
;;;281                 CPU_CRITICAL_ENTER();
00003a  bf00              NOP      
00003c  bf00              NOP      
00003e  f7fffffe          BL       CPU_SR_Save
000042  4680              MOV      r8,r0
000044  bf00              NOP      
000046  f7fffffe          BL       CPU_IntDisMeasStart
00004a  bf00              NOP      
;;;282                 CPU_REG_NVIC_SHCSR &= ~CPU_REG_NVIC_SHCSR_MEMFAULTENA;
00004c  4849              LDR      r0,|L3.372|
00004e  6800              LDR      r0,[r0,#0]
000050  f4203080          BIC      r0,r0,#0x10000
000054  4947              LDR      r1,|L3.372|
000056  6008              STR      r0,[r1,#0]
;;;283                 CPU_CRITICAL_EXIT();
000058  bf00              NOP      
00005a  f7fffffe          BL       CPU_IntDisMeasStop
00005e  bf00              NOP      
000060  4640              MOV      r0,r8
000062  f7fffffe          BL       CPU_SR_Restore
000066  bf00              NOP      
000068  bf00              NOP      
;;;284                 break;
00006a  e07f              B        |L3.364|
;;;285    
;;;286            case CPU_INT_BUSFAULT:                                  /* Bus fault.                                           */
;;;287                 CPU_CRITICAL_ENTER();
00006c  bf00              NOP      
00006e  bf00              NOP      
000070  f7fffffe          BL       CPU_SR_Save
000074  4680              MOV      r8,r0
000076  bf00              NOP      
000078  f7fffffe          BL       CPU_IntDisMeasStart
00007c  bf00              NOP      
;;;288                 CPU_REG_NVIC_SHCSR &= ~CPU_REG_NVIC_SHCSR_BUSFAULTENA;
00007e  483d              LDR      r0,|L3.372|
000080  6800              LDR      r0,[r0,#0]
000082  f4203000          BIC      r0,r0,#0x20000
000086  493b              LDR      r1,|L3.372|
000088  6008              STR      r0,[r1,#0]
;;;289                 CPU_CRITICAL_EXIT();
00008a  bf00              NOP      
00008c  f7fffffe          BL       CPU_IntDisMeasStop
000090  bf00              NOP      
000092  4640              MOV      r0,r8
000094  f7fffffe          BL       CPU_SR_Restore
000098  bf00              NOP      
00009a  bf00              NOP      
;;;290                 break;
00009c  e066              B        |L3.364|
;;;291    
;;;292            case CPU_INT_USAGEFAULT:                                /* Usage fault.                                         */
;;;293                 CPU_CRITICAL_ENTER();
00009e  bf00              NOP      
0000a0  bf00              NOP      
0000a2  f7fffffe          BL       CPU_SR_Save
0000a6  4680              MOV      r8,r0
0000a8  bf00              NOP      
0000aa  f7fffffe          BL       CPU_IntDisMeasStart
0000ae  bf00              NOP      
;;;294                 CPU_REG_NVIC_SHCSR &= ~CPU_REG_NVIC_SHCSR_USGFAULTENA;
0000b0  4830              LDR      r0,|L3.372|
0000b2  6800              LDR      r0,[r0,#0]
0000b4  f4202080          BIC      r0,r0,#0x40000
0000b8  492e              LDR      r1,|L3.372|
0000ba  6008              STR      r0,[r1,#0]
;;;295                 CPU_CRITICAL_EXIT();
0000bc  bf00              NOP      
0000be  f7fffffe          BL       CPU_IntDisMeasStop
0000c2  bf00              NOP      
0000c4  4640              MOV      r0,r8
0000c6  f7fffffe          BL       CPU_SR_Restore
0000ca  bf00              NOP      
0000cc  bf00              NOP      
;;;296                 break;
0000ce  e04d              B        |L3.364|
;;;297    
;;;298            case CPU_INT_SYSTICK:                                   /* SysTick.                                             */
;;;299                 CPU_CRITICAL_ENTER();
0000d0  bf00              NOP      
0000d2  bf00              NOP      
0000d4  f7fffffe          BL       CPU_SR_Save
0000d8  4680              MOV      r8,r0
0000da  bf00              NOP      
0000dc  f7fffffe          BL       CPU_IntDisMeasStart
0000e0  bf00              NOP      
;;;300                 CPU_REG_NVIC_ST_CTRL &= ~CPU_REG_NVIC_ST_CTRL_ENABLE;
0000e2  f04f20e0          MOV      r0,#0xe000e000
0000e6  6900              LDR      r0,[r0,#0x10]
0000e8  f0200001          BIC      r0,r0,#1
0000ec  f04f21e0          MOV      r1,#0xe000e000
0000f0  6108              STR      r0,[r1,#0x10]
;;;301                 CPU_CRITICAL_EXIT();
0000f2  bf00              NOP      
0000f4  f7fffffe          BL       CPU_IntDisMeasStop
0000f8  bf00              NOP      
0000fa  4640              MOV      r0,r8
0000fc  f7fffffe          BL       CPU_SR_Restore
000100  bf00              NOP      
000102  bf00              NOP      
;;;302                 break;
000104  e032              B        |L3.364|
000106  e7ff              B        |L3.264|
                  |L3.264|
;;;303    
;;;304    
;;;305                                                                    /* ---------------- EXTERNAL INTERRUPT ---------------- */
;;;306            default:
;;;307                pos_max = CPU_INT_SRC_POS_MAX;
000108  f04f20e0          MOV      r0,#0xe000e000
00010c  6840              LDR      r0,[r0,#4]
00010e  1c40              ADDS     r0,r0,#1
000110  2110              MOVS     r1,#0x10
000112  eb011040          ADD      r0,r1,r0,LSL #5
000116  b2c6              UXTB     r6,r0
;;;308                if (pos < pos_max) {                                /* See Note #3.                                         */
000118  42b4              CMP      r4,r6
00011a  da26              BGE      |L3.362|
;;;309                     group = (pos - 16) / 32;
00011c  f1a40010          SUB      r0,r4,#0x10
000120  17c1              ASRS     r1,r0,#31
000122  eb0061d1          ADD      r1,r0,r1,LSR #27
000126  f3c11547          UBFX     r5,r1,#5,#8
;;;310                     nbr   = (pos - 16) % 32;
00012a  17c1              ASRS     r1,r0,#31
00012c  eb0061d1          ADD      r1,r0,r1,LSR #27
000130  1149              ASRS     r1,r1,#5
000132  eba01141          SUB      r1,r0,r1,LSL #5
000136  b2cf              UXTB     r7,r1
;;;311    
;;;312                     CPU_CRITICAL_ENTER();
000138  bf00              NOP      
00013a  bf00              NOP      
00013c  f7fffffe          BL       CPU_SR_Save
000140  4680              MOV      r8,r0
000142  bf00              NOP      
000144  f7fffffe          BL       CPU_IntDisMeasStart
000148  bf00              NOP      
;;;313                     CPU_REG_NVIC_CLREN(group) = DEF_BIT(nbr);
00014a  2001              MOVS     r0,#1
00014c  40b8              LSLS     r0,r0,r7
00014e  00a9              LSLS     r1,r5,#2
000150  f10121e0          ADD      r1,r1,#0xe000e000
000154  f8c10180          STR      r0,[r1,#0x180]
;;;314                     CPU_CRITICAL_EXIT();
000158  bf00              NOP      
00015a  f7fffffe          BL       CPU_IntDisMeasStop
00015e  bf00              NOP      
000160  4640              MOV      r0,r8
000162  f7fffffe          BL       CPU_SR_Restore
000166  bf00              NOP      
000168  bf00              NOP      
                  |L3.362|
;;;315                 }
;;;316                 break;
00016a  bf00              NOP      
                  |L3.364|
00016c  bf00              NOP                            ;268
;;;317        }
;;;318    }
00016e  e8bd81f0          POP      {r4-r8,pc}
;;;319    
                          ENDP

000172  0000              DCW      0x0000
                  |L3.372|
                          DCD      0xe000ed24

                          AREA ||i.CPU_IntSrcEn||, CODE, READONLY, ALIGN=2

                  CPU_IntSrcEn PROC
;;;340    
;;;341    void  CPU_IntSrcEn (CPU_INT08U  pos)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;342    {
000004  4604              MOV      r4,r0
;;;343        CPU_INT08U  group;
;;;344        CPU_INT08U  nbr;
;;;345        CPU_INT08U  pos_max;
;;;346        CPU_SR_ALLOC();
000006  f04f0800          MOV      r8,#0
;;;347    
;;;348    
;;;349        switch (pos) {
00000a  2c10              CMP      r4,#0x10
00000c  d27c              BCS      |L4.264|
00000e  e8dff004          TBB      [pc,r4]
000012  080e              DCB      0x08,0x0e
000014  0f10142d          DCB      0x0f,0x10,0x14,0x2d
000018  46090a0b          DCB      0x46,0x09,0x0a,0x0b
00001c  0c11120d          DCB      0x0c,0x11,0x12,0x0d
000020  135f              DCB      0x13,0x5f
;;;350            case CPU_INT_STK_PTR:                                   /* ---------------- INVALID OR RESERVED --------------- */
;;;351            case CPU_INT_RSVD_07:
000022  bf00              NOP      
;;;352            case CPU_INT_RSVD_08:
000024  bf00              NOP      
;;;353            case CPU_INT_RSVD_09:
000026  bf00              NOP      
;;;354            case CPU_INT_RSVD_10:
000028  bf00              NOP      
;;;355            case CPU_INT_RSVD_13:
00002a  bf00              NOP      
;;;356                 break;
00002c  e09e              B        |L4.364|
;;;357    
;;;358    
;;;359                                                                    /* ----------------- SYSTEM EXCEPTIONS ---------------- */
;;;360            case CPU_INT_RESET:                                     /* Reset (see Note #2).                                 */
;;;361            case CPU_INT_NMI:                                       /* Non-maskable interrupt (see Note #2).                */
00002e  bf00              NOP      
;;;362            case CPU_INT_HFAULT:                                    /* Hard fault (see Note #2).                            */
000030  bf00              NOP      
;;;363            case CPU_INT_SVCALL:                                    /* SVCall (see Note #2).                                */
000032  bf00              NOP      
;;;364            case CPU_INT_DBGMON:                                    /* Debug monitor (see Note #2).                         */
000034  bf00              NOP      
;;;365            case CPU_INT_PENDSV:                                    /* PendSV (see Note #2).                                */
000036  bf00              NOP      
;;;366                 break;
000038  e098              B        |L4.364|
;;;367    
;;;368            case CPU_INT_MEM:                                       /* Memory management.                                   */
;;;369                 CPU_CRITICAL_ENTER();
00003a  bf00              NOP      
00003c  bf00              NOP      
00003e  f7fffffe          BL       CPU_SR_Save
000042  4680              MOV      r8,r0
000044  bf00              NOP      
000046  f7fffffe          BL       CPU_IntDisMeasStart
00004a  bf00              NOP      
;;;370                 CPU_REG_NVIC_SHCSR |= CPU_REG_NVIC_SHCSR_MEMFAULTENA;
00004c  4849              LDR      r0,|L4.372|
00004e  6800              LDR      r0,[r0,#0]
000050  f4403080          ORR      r0,r0,#0x10000
000054  4947              LDR      r1,|L4.372|
000056  6008              STR      r0,[r1,#0]
;;;371                 CPU_CRITICAL_EXIT();
000058  bf00              NOP      
00005a  f7fffffe          BL       CPU_IntDisMeasStop
00005e  bf00              NOP      
000060  4640              MOV      r0,r8
000062  f7fffffe          BL       CPU_SR_Restore
000066  bf00              NOP      
000068  bf00              NOP      
;;;372                 break;
00006a  e07f              B        |L4.364|
;;;373    
;;;374            case CPU_INT_BUSFAULT:                                  /* Bus fault.                                           */
;;;375                 CPU_CRITICAL_ENTER();
00006c  bf00              NOP      
00006e  bf00              NOP      
000070  f7fffffe          BL       CPU_SR_Save
000074  4680              MOV      r8,r0
000076  bf00              NOP      
000078  f7fffffe          BL       CPU_IntDisMeasStart
00007c  bf00              NOP      
;;;376                 CPU_REG_NVIC_SHCSR |= CPU_REG_NVIC_SHCSR_BUSFAULTENA;
00007e  483d              LDR      r0,|L4.372|
000080  6800              LDR      r0,[r0,#0]
000082  f4403000          ORR      r0,r0,#0x20000
000086  493b              LDR      r1,|L4.372|
000088  6008              STR      r0,[r1,#0]
;;;377                 CPU_CRITICAL_EXIT();
00008a  bf00              NOP      
00008c  f7fffffe          BL       CPU_IntDisMeasStop
000090  bf00              NOP      
000092  4640              MOV      r0,r8
000094  f7fffffe          BL       CPU_SR_Restore
000098  bf00              NOP      
00009a  bf00              NOP      
;;;378                 break;
00009c  e066              B        |L4.364|
;;;379    
;;;380            case CPU_INT_USAGEFAULT:                                /* Usage fault.                                         */
;;;381                 CPU_CRITICAL_ENTER();
00009e  bf00              NOP      
0000a0  bf00              NOP      
0000a2  f7fffffe          BL       CPU_SR_Save
0000a6  4680              MOV      r8,r0
0000a8  bf00              NOP      
0000aa  f7fffffe          BL       CPU_IntDisMeasStart
0000ae  bf00              NOP      
;;;382                 CPU_REG_NVIC_SHCSR |= CPU_REG_NVIC_SHCSR_USGFAULTENA;
0000b0  4830              LDR      r0,|L4.372|
0000b2  6800              LDR      r0,[r0,#0]
0000b4  f4402080          ORR      r0,r0,#0x40000
0000b8  492e              LDR      r1,|L4.372|
0000ba  6008              STR      r0,[r1,#0]
;;;383                 CPU_CRITICAL_EXIT();
0000bc  bf00              NOP      
0000be  f7fffffe          BL       CPU_IntDisMeasStop
0000c2  bf00              NOP      
0000c4  4640              MOV      r0,r8
0000c6  f7fffffe          BL       CPU_SR_Restore
0000ca  bf00              NOP      
0000cc  bf00              NOP      
;;;384                 break;
0000ce  e04d              B        |L4.364|
;;;385    
;;;386            case CPU_INT_SYSTICK:                                   /* SysTick.                                             */
;;;387                 CPU_CRITICAL_ENTER();
0000d0  bf00              NOP      
0000d2  bf00              NOP      
0000d4  f7fffffe          BL       CPU_SR_Save
0000d8  4680              MOV      r8,r0
0000da  bf00              NOP      
0000dc  f7fffffe          BL       CPU_IntDisMeasStart
0000e0  bf00              NOP      
;;;388                 CPU_REG_NVIC_ST_CTRL |= CPU_REG_NVIC_ST_CTRL_ENABLE;
0000e2  f04f20e0          MOV      r0,#0xe000e000
0000e6  6900              LDR      r0,[r0,#0x10]
0000e8  f0400001          ORR      r0,r0,#1
0000ec  f04f21e0          MOV      r1,#0xe000e000
0000f0  6108              STR      r0,[r1,#0x10]
;;;389                 CPU_CRITICAL_EXIT();
0000f2  bf00              NOP      
0000f4  f7fffffe          BL       CPU_IntDisMeasStop
0000f8  bf00              NOP      
0000fa  4640              MOV      r0,r8
0000fc  f7fffffe          BL       CPU_SR_Restore
000100  bf00              NOP      
000102  bf00              NOP      
;;;390                 break;
000104  e032              B        |L4.364|
000106  e7ff              B        |L4.264|
                  |L4.264|
;;;391    
;;;392    
;;;393                                                                    /* ---------------- EXTERNAL INTERRUPT ---------------- */
;;;394            default:
;;;395                pos_max = CPU_INT_SRC_POS_MAX;
000108  f04f20e0          MOV      r0,#0xe000e000
00010c  6840              LDR      r0,[r0,#4]
00010e  1c40              ADDS     r0,r0,#1
000110  2110              MOVS     r1,#0x10
000112  eb011040          ADD      r0,r1,r0,LSL #5
000116  b2c7              UXTB     r7,r0
;;;396                if (pos < pos_max) {                                /* See Note #3.                                         */
000118  42bc              CMP      r4,r7
00011a  da26              BGE      |L4.362|
;;;397                     group = (pos - 16) / 32;
00011c  f1a40010          SUB      r0,r4,#0x10
000120  17c1              ASRS     r1,r0,#31
000122  eb0061d1          ADD      r1,r0,r1,LSR #27
000126  f3c11547          UBFX     r5,r1,#5,#8
;;;398                     nbr   = (pos - 16) % 32;
00012a  17c1              ASRS     r1,r0,#31
00012c  eb0061d1          ADD      r1,r0,r1,LSR #27
000130  1149              ASRS     r1,r1,#5
000132  eba01141          SUB      r1,r0,r1,LSL #5
000136  b2ce              UXTB     r6,r1
;;;399    
;;;400                     CPU_CRITICAL_ENTER();
000138  bf00              NOP      
00013a  bf00              NOP      
00013c  f7fffffe          BL       CPU_SR_Save
000140  4680              MOV      r8,r0
000142  bf00              NOP      
000144  f7fffffe          BL       CPU_IntDisMeasStart
000148  bf00              NOP      
;;;401                     CPU_REG_NVIC_SETEN(group) = DEF_BIT(nbr);
00014a  2001              MOVS     r0,#1
00014c  40b0              LSLS     r0,r0,r6
00014e  00a9              LSLS     r1,r5,#2
000150  f10121e0          ADD      r1,r1,#0xe000e000
000154  f8c10100          STR      r0,[r1,#0x100]
;;;402                     CPU_CRITICAL_EXIT();
000158  bf00              NOP      
00015a  f7fffffe          BL       CPU_IntDisMeasStop
00015e  bf00              NOP      
000160  4640              MOV      r0,r8
000162  f7fffffe          BL       CPU_SR_Restore
000166  bf00              NOP      
000168  bf00              NOP      
                  |L4.362|
;;;403                 }
;;;404                 break;
00016a  bf00              NOP      
                  |L4.364|
00016c  bf00              NOP                            ;356
;;;405        }
;;;406    }
00016e  e8bd81f0          POP      {r4-r8,pc}
;;;407    
                          ENDP

000172  0000              DCW      0x0000
                  |L4.372|
                          DCD      0xe000ed24

                          AREA ||i.CPU_IntSrcPendClr||, CODE, READONLY, ALIGN=1

                  CPU_IntSrcPendClr PROC
;;;439    
;;;440    void  CPU_IntSrcPendClr (CPU_INT08U  pos)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;441    
;;;442    {
000004  4604              MOV      r4,r0
;;;443        CPU_INT08U  group;
;;;444        CPU_INT08U  nbr;
;;;445        CPU_INT08U  pos_max;
;;;446        CPU_SR_ALLOC();
000006  f04f0800          MOV      r8,#0
;;;447    
;;;448    
;;;449        switch (pos) {
00000a  2c10              CMP      r4,#0x10
00000c  d219              BCS      |L5.66|
00000e  e8dff004          TBB      [pc,r4]
000012  080e              DCB      0x08,0x0e
000014  0f101115          DCB      0x0f,0x10,0x11,0x15
000018  16090a0b          DCB      0x16,0x09,0x0a,0x0b
00001c  0c12130d          DCB      0x0c,0x12,0x13,0x0d
000020  1417              DCB      0x14,0x17
;;;450            case CPU_INT_STK_PTR:                                   /* ---------------- INVALID OR RESERVED --------------- */
;;;451            case CPU_INT_RSVD_07:
000022  bf00              NOP      
;;;452            case CPU_INT_RSVD_08:
000024  bf00              NOP      
;;;453            case CPU_INT_RSVD_09:
000026  bf00              NOP      
;;;454            case CPU_INT_RSVD_10:
000028  bf00              NOP      
;;;455            case CPU_INT_RSVD_13:
00002a  bf00              NOP      
;;;456                 break;
00002c  e03b              B        |L5.166|
;;;457                                                                    /* ----------------- SYSTEM EXCEPTIONS ---------------- */
;;;458            case CPU_INT_RESET:                                     /* Reset (see Note #2).                                 */
;;;459            case CPU_INT_NMI:                                       /* Non-maskable interrupt (see Note #2).                */
00002e  bf00              NOP      
;;;460            case CPU_INT_HFAULT:                                    /* Hard fault (see Note #2).                            */
000030  bf00              NOP      
;;;461            case CPU_INT_MEM:                                       /* Memory management (see Note #2).                     */
000032  bf00              NOP      
;;;462            case CPU_INT_SVCALL:                                    /* SVCall (see Note #2).                                */
000034  bf00              NOP      
;;;463            case CPU_INT_DBGMON:                                    /* Debug monitor (see Note #2).                         */
000036  bf00              NOP      
;;;464            case CPU_INT_PENDSV:                                    /* PendSV (see Note #2).                                */
000038  bf00              NOP      
;;;465            case CPU_INT_BUSFAULT:                                  /* Bus fault.                                           */
00003a  bf00              NOP      
;;;466            case CPU_INT_USAGEFAULT:                                /* Usage fault.                                         */
00003c  bf00              NOP      
;;;467            case CPU_INT_SYSTICK:                                   /* SysTick.                                             */
00003e  bf00              NOP      
;;;468                 break;
000040  e031              B        |L5.166|
                  |L5.66|
;;;469                                                                    /* ---------------- EXTERNAL INTERRUPT ---------------- */
;;;470            default:
;;;471                pos_max = CPU_INT_SRC_POS_MAX;
000042  f04f20e0          MOV      r0,#0xe000e000
000046  6840              LDR      r0,[r0,#4]
000048  1c40              ADDS     r0,r0,#1
00004a  2110              MOVS     r1,#0x10
00004c  eb011040          ADD      r0,r1,r0,LSL #5
000050  b2c7              UXTB     r7,r0
;;;472                if (pos < pos_max) {                                /* See Note #3.                                         */
000052  42bc              CMP      r4,r7
000054  da26              BGE      |L5.164|
;;;473                     group = (pos - 16) / 32;
000056  f1a40010          SUB      r0,r4,#0x10
00005a  17c1              ASRS     r1,r0,#31
00005c  eb0061d1          ADD      r1,r0,r1,LSR #27
000060  f3c11547          UBFX     r5,r1,#5,#8
;;;474                     nbr   = (pos - 16) % 32;
000064  17c1              ASRS     r1,r0,#31
000066  eb0061d1          ADD      r1,r0,r1,LSR #27
00006a  1149              ASRS     r1,r1,#5
00006c  eba01141          SUB      r1,r0,r1,LSL #5
000070  b2ce              UXTB     r6,r1
;;;475    
;;;476                     CPU_CRITICAL_ENTER();
000072  bf00              NOP      
000074  bf00              NOP      
000076  f7fffffe          BL       CPU_SR_Save
00007a  4680              MOV      r8,r0
00007c  bf00              NOP      
00007e  f7fffffe          BL       CPU_IntDisMeasStart
000082  bf00              NOP      
;;;477                     CPU_REG_NVIC_CLRPEND(group) = DEF_BIT(nbr);
000084  2001              MOVS     r0,#1
000086  40b0              LSLS     r0,r0,r6
000088  00a9              LSLS     r1,r5,#2
00008a  f10121e0          ADD      r1,r1,#0xe000e000
00008e  f8c10280          STR      r0,[r1,#0x280]
;;;478                     CPU_CRITICAL_EXIT();
000092  bf00              NOP      
000094  f7fffffe          BL       CPU_IntDisMeasStop
000098  bf00              NOP      
00009a  4640              MOV      r0,r8
00009c  f7fffffe          BL       CPU_SR_Restore
0000a0  bf00              NOP      
0000a2  bf00              NOP      
                  |L5.164|
;;;479                 }
;;;480                 break;
0000a4  bf00              NOP      
                  |L5.166|
0000a6  bf00              NOP                            ;456
;;;481        }
;;;482    }
0000a8  e8bd81f0          POP      {r4-r8,pc}
;;;483    
                          ENDP


                          AREA ||i.CPU_IntSrcPrioGet||, CODE, READONLY, ALIGN=2

                  CPU_IntSrcPrioGet PROC
;;;640    
;;;641    CPU_INT16S  CPU_IntSrcPrioGet (CPU_INT08U  pos)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;642    {
000004  4606              MOV      r6,r0
;;;643        CPU_INT08U  group;
;;;644        CPU_INT08U  nbr;
;;;645        CPU_INT08U  pos_max;
;;;646        CPU_INT16S  prio;
;;;647        CPU_INT32U  temp;
;;;648        CPU_SR_ALLOC();
000006  f04f0a00          MOV      r10,#0
;;;649    
;;;650    
;;;651        switch (pos) {
00000a  2e10              CMP      r6,#0x10
00000c  d274              BCS      |L6.248|
00000e  e8dff006          TBB      [pc,r6]
000012  080f              DCB      0x08,0x0f
000014  1215182e          DCB      0x12,0x15,0x18,0x2e
000018  45090a0b          DCB      0x45,0x09,0x0a,0x0b
00001c  0c5c740d          DCB      0x0c,0x5c,0x74,0x0d
000020  8ba3              DCB      0x8b,0xa3
;;;652            case CPU_INT_STK_PTR:                                   /* ---------------- INVALID OR RESERVED --------------- */
;;;653            case CPU_INT_RSVD_07:
000022  bf00              NOP      
;;;654            case CPU_INT_RSVD_08:
000024  bf00              NOP      
;;;655            case CPU_INT_RSVD_09:
000026  bf00              NOP      
;;;656            case CPU_INT_RSVD_10:
000028  bf00              NOP      
;;;657            case CPU_INT_RSVD_13:
00002a  bf00              NOP      
;;;658                 prio = DEF_INT_16S_MIN_VAL;
00002c  4c74              LDR      r4,|L6.512|
;;;659                 break;
00002e  e0e3              B        |L6.504|
;;;660    
;;;661    
;;;662                                                                    /* ----------------- SYSTEM EXCEPTIONS ---------------- */
;;;663            case CPU_INT_RESET:                                     /* Reset (see Note #2).                                 */
;;;664                 prio = -3;
000030  f06f0402          MVN      r4,#2
;;;665                 break;
000034  e0e0              B        |L6.504|
;;;666    
;;;667            case CPU_INT_NMI:                                       /* Non-maskable interrupt (see Note #2).                */
;;;668                 prio = -2;
000036  f06f0401          MVN      r4,#1
;;;669                 break;
00003a  e0dd              B        |L6.504|
;;;670    
;;;671            case CPU_INT_HFAULT:                                    /* Hard fault (see Note #2).                            */
;;;672                 prio = -1;
00003c  f04f34ff          MOV      r4,#0xffffffff
;;;673                 break;
000040  e0da              B        |L6.504|
;;;674    
;;;675    
;;;676            case CPU_INT_MEM:                                       /* Memory management.                                   */
;;;677                 CPU_CRITICAL_ENTER();
000042  bf00              NOP      
000044  bf00              NOP      
000046  f7fffffe          BL       CPU_SR_Save
00004a  4682              MOV      r10,r0
00004c  bf00              NOP      
00004e  f7fffffe          BL       CPU_IntDisMeasStart
000052  bf00              NOP      
;;;678                 temp = CPU_REG_NVIC_SHPRI1;
000054  486b              LDR      r0,|L6.516|
000056  6805              LDR      r5,[r0,#0]
;;;679                 prio = (temp >> (0 * DEF_OCTET_NBR_BITS)) & DEF_OCTET_MASK;
000058  b2ec              UXTB     r4,r5
;;;680                 CPU_CRITICAL_EXIT();
00005a  bf00              NOP      
00005c  f7fffffe          BL       CPU_IntDisMeasStop
000060  bf00              NOP      
000062  4650              MOV      r0,r10
000064  f7fffffe          BL       CPU_SR_Restore
000068  bf00              NOP      
00006a  bf00              NOP      
;;;681                 break;
00006c  e0c4              B        |L6.504|
;;;682    
;;;683    
;;;684            case CPU_INT_BUSFAULT:                                  /* Bus fault.                                           */
;;;685                 CPU_CRITICAL_ENTER();
00006e  bf00              NOP      
000070  bf00              NOP      
000072  f7fffffe          BL       CPU_SR_Save
000076  4682              MOV      r10,r0
000078  bf00              NOP      
00007a  f7fffffe          BL       CPU_IntDisMeasStart
00007e  bf00              NOP      
;;;686                 temp = CPU_REG_NVIC_SHPRI1;
000080  4860              LDR      r0,|L6.516|
000082  6805              LDR      r5,[r0,#0]
;;;687                 prio = (temp >> (1 * DEF_OCTET_NBR_BITS)) & DEF_OCTET_MASK;
000084  f3c52407          UBFX     r4,r5,#8,#8
;;;688                 CPU_CRITICAL_EXIT();
000088  bf00              NOP      
00008a  f7fffffe          BL       CPU_IntDisMeasStop
00008e  bf00              NOP      
000090  4650              MOV      r0,r10
000092  f7fffffe          BL       CPU_SR_Restore
000096  bf00              NOP      
000098  bf00              NOP      
;;;689                 break;
00009a  e0ad              B        |L6.504|
;;;690    
;;;691    
;;;692            case CPU_INT_USAGEFAULT:                                /* Usage fault.                                         */
;;;693                 CPU_CRITICAL_ENTER();
00009c  bf00              NOP      
00009e  bf00              NOP      
0000a0  f7fffffe          BL       CPU_SR_Save
0000a4  4682              MOV      r10,r0
0000a6  bf00              NOP      
0000a8  f7fffffe          BL       CPU_IntDisMeasStart
0000ac  bf00              NOP      
;;;694                 temp = CPU_REG_NVIC_SHPRI1;
0000ae  4855              LDR      r0,|L6.516|
0000b0  6805              LDR      r5,[r0,#0]
;;;695                 prio = (temp >> (2 * DEF_OCTET_NBR_BITS)) & DEF_OCTET_MASK;
0000b2  f3c54407          UBFX     r4,r5,#16,#8
;;;696                 CPU_CRITICAL_EXIT();
0000b6  bf00              NOP      
0000b8  f7fffffe          BL       CPU_IntDisMeasStop
0000bc  bf00              NOP      
0000be  4650              MOV      r0,r10
0000c0  f7fffffe          BL       CPU_SR_Restore
0000c4  bf00              NOP      
0000c6  bf00              NOP      
;;;697                 break;
0000c8  e096              B        |L6.504|
;;;698    
;;;699            case CPU_INT_SVCALL:                                    /* SVCall.                                              */
;;;700                 CPU_CRITICAL_ENTER();
0000ca  bf00              NOP      
0000cc  bf00              NOP      
0000ce  f7fffffe          BL       CPU_SR_Save
0000d2  4682              MOV      r10,r0
0000d4  bf00              NOP      
0000d6  f7fffffe          BL       CPU_IntDisMeasStart
0000da  bf00              NOP      
;;;701                 temp = CPU_REG_NVIC_SHPRI2;
0000dc  4849              LDR      r0,|L6.516|
0000de  1d00              ADDS     r0,r0,#4
0000e0  6805              LDR      r5,[r0,#0]
;;;702                 prio = (temp >> (3 * DEF_OCTET_NBR_BITS)) & DEF_OCTET_MASK;
0000e2  0e2c              LSRS     r4,r5,#24
;;;703                 CPU_CRITICAL_EXIT();
0000e4  bf00              NOP      
0000e6  f7fffffe          BL       CPU_IntDisMeasStop
0000ea  bf00              NOP      
0000ec  4650              MOV      r0,r10
0000ee  f7fffffe          BL       CPU_SR_Restore
0000f2  bf00              NOP      
0000f4  bf00              NOP      
;;;704                 break;
0000f6  e07f              B        |L6.504|
                  |L6.248|
0000f8  e045              B        |L6.390|
;;;705    
;;;706            case CPU_INT_DBGMON:                                    /* Debug monitor.                                       */
;;;707                 CPU_CRITICAL_ENTER();
0000fa  bf00              NOP      
0000fc  bf00              NOP      
0000fe  f7fffffe          BL       CPU_SR_Save
000102  4682              MOV      r10,r0
000104  bf00              NOP      
000106  f7fffffe          BL       CPU_IntDisMeasStart
00010a  bf00              NOP      
;;;708                 temp = CPU_REG_NVIC_SHPRI3;
00010c  483d              LDR      r0,|L6.516|
00010e  3008              ADDS     r0,r0,#8
000110  6805              LDR      r5,[r0,#0]
;;;709                 prio = (temp >> (0 * DEF_OCTET_NBR_BITS)) & DEF_OCTET_MASK;
000112  b2ec              UXTB     r4,r5
;;;710                 CPU_CRITICAL_EXIT();
000114  bf00              NOP      
000116  f7fffffe          BL       CPU_IntDisMeasStop
00011a  bf00              NOP      
00011c  4650              MOV      r0,r10
00011e  f7fffffe          BL       CPU_SR_Restore
000122  bf00              NOP      
000124  bf00              NOP      
;;;711                 break;
000126  e067              B        |L6.504|
;;;712    
;;;713            case CPU_INT_PENDSV:                                    /* PendSV.                                              */
;;;714                 CPU_CRITICAL_ENTER();
000128  bf00              NOP      
00012a  bf00              NOP      
00012c  f7fffffe          BL       CPU_SR_Save
000130  4682              MOV      r10,r0
000132  bf00              NOP      
000134  f7fffffe          BL       CPU_IntDisMeasStart
000138  bf00              NOP      
;;;715                 temp = CPU_REG_NVIC_SHPRI3;
00013a  4832              LDR      r0,|L6.516|
00013c  3008              ADDS     r0,r0,#8
00013e  6805              LDR      r5,[r0,#0]
;;;716                 prio = (temp >> (2 * DEF_OCTET_NBR_BITS)) & DEF_OCTET_MASK;
000140  f3c54407          UBFX     r4,r5,#16,#8
;;;717                 CPU_CRITICAL_EXIT();
000144  bf00              NOP      
000146  f7fffffe          BL       CPU_IntDisMeasStop
00014a  bf00              NOP      
00014c  4650              MOV      r0,r10
00014e  f7fffffe          BL       CPU_SR_Restore
000152  bf00              NOP      
000154  bf00              NOP      
;;;718                 break;
000156  e04f              B        |L6.504|
;;;719    
;;;720            case CPU_INT_SYSTICK:                                   /* SysTick.                                             */
;;;721                 CPU_CRITICAL_ENTER();
000158  bf00              NOP      
00015a  bf00              NOP      
00015c  f7fffffe          BL       CPU_SR_Save
000160  4682              MOV      r10,r0
000162  bf00              NOP      
000164  f7fffffe          BL       CPU_IntDisMeasStart
000168  bf00              NOP      
;;;722                 temp = CPU_REG_NVIC_SHPRI3;
00016a  4826              LDR      r0,|L6.516|
00016c  3008              ADDS     r0,r0,#8
00016e  6805              LDR      r5,[r0,#0]
;;;723                 prio = (temp >> (3 * DEF_OCTET_NBR_BITS)) & DEF_OCTET_MASK;
000170  0e2c              LSRS     r4,r5,#24
;;;724                 CPU_CRITICAL_EXIT();
000172  bf00              NOP      
000174  f7fffffe          BL       CPU_IntDisMeasStop
000178  bf00              NOP      
00017a  4650              MOV      r0,r10
00017c  f7fffffe          BL       CPU_SR_Restore
000180  bf00              NOP      
000182  bf00              NOP      
;;;725                 break;
000184  e038              B        |L6.504|
                  |L6.390|
;;;726    
;;;727    
;;;728                                                                    /* ---------------- EXTERNAL INTERRUPT ---------------- */
;;;729            default:
;;;730                pos_max = CPU_INT_SRC_POS_MAX;
000186  f04f20e0          MOV      r0,#0xe000e000
00018a  6840              LDR      r0,[r0,#4]
00018c  1c40              ADDS     r0,r0,#1
00018e  2110              MOVS     r1,#0x10
000190  eb011040          ADD      r0,r1,r0,LSL #5
000194  f00009ff          AND      r9,r0,#0xff
;;;731                if (pos < pos_max) {                                /* See Note #3.                                         */
000198  454e              CMP      r6,r9
00019a  da2b              BGE      |L6.500|
;;;732                     group = (pos - 16) / 4;
00019c  f1a60010          SUB      r0,r6,#0x10
0001a0  17c1              ASRS     r1,r0,#31
0001a2  eb007191          ADD      r1,r0,r1,LSR #30
0001a6  f3c10787          UBFX     r7,r1,#2,#8
;;;733                     nbr   = (pos - 16) % 4;
0001aa  17c1              ASRS     r1,r0,#31
0001ac  eb007191          ADD      r1,r0,r1,LSR #30
0001b0  1089              ASRS     r1,r1,#2
0001b2  eba00181          SUB      r1,r0,r1,LSL #2
0001b6  f00108ff          AND      r8,r1,#0xff
;;;734    
;;;735                     CPU_CRITICAL_ENTER();
0001ba  bf00              NOP      
0001bc  bf00              NOP      
0001be  f7fffffe          BL       CPU_SR_Save
0001c2  4682              MOV      r10,r0
0001c4  bf00              NOP      
0001c6  f7fffffe          BL       CPU_IntDisMeasStart
0001ca  bf00              NOP      
;;;736                     temp  = CPU_REG_NVIC_PRIO(group);
0001cc  00b8              LSLS     r0,r7,#2
0001ce  f10020e0          ADD      r0,r0,#0xe000e000
0001d2  f8d05400          LDR      r5,[r0,#0x400]
;;;737                     CPU_CRITICAL_EXIT();
0001d6  bf00              NOP      
0001d8  f7fffffe          BL       CPU_IntDisMeasStop
0001dc  bf00              NOP      
0001de  4650              MOV      r0,r10
0001e0  f7fffffe          BL       CPU_SR_Restore
0001e4  bf00              NOP      
0001e6  bf00              NOP      
;;;738    
;;;739                     prio  = (temp >> (nbr * DEF_OCTET_NBR_BITS)) & DEF_OCTET_MASK;
0001e8  ea4f00c8          LSL      r0,r8,#3
0001ec  fa25f000          LSR      r0,r5,r0
0001f0  b2c4              UXTB     r4,r0
0001f2  e000              B        |L6.502|
                  |L6.500|
;;;740                 } else {
;;;741                     prio  = DEF_INT_16S_MIN_VAL;
0001f4  4c02              LDR      r4,|L6.512|
                  |L6.502|
;;;742                 }
;;;743                 break;
0001f6  bf00              NOP      
                  |L6.504|
0001f8  bf00              NOP                            ;659
;;;744        }
;;;745    
;;;746        return (prio);
0001fa  4620              MOV      r0,r4
;;;747    }
0001fc  e8bd87f0          POP      {r4-r10,pc}
;;;748    
                          ENDP

                  |L6.512|
                          DCD      0xffff8000
                  |L6.516|
                          DCD      0xe000ed18

                          AREA ||i.CPU_IntSrcPrioSet||, CODE, READONLY, ALIGN=2

                  CPU_IntSrcPrioSet PROC
;;;510    
;;;511    void  CPU_IntSrcPrioSet (CPU_INT08U  pos,
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;512                             CPU_INT08U  prio)
;;;513    {
000004  4606              MOV      r6,r0
000006  460d              MOV      r5,r1
;;;514        CPU_INT08U  group;
;;;515        CPU_INT08U  nbr;
;;;516        CPU_INT08U  pos_max;
;;;517        CPU_INT32U  temp;
;;;518        CPU_SR_ALLOC();
000008  f04f0a00          MOV      r10,#0
;;;519    
;;;520    
;;;521        switch (pos) {
00000c  2e10              CMP      r6,#0x10
00000e  d27a              BCS      |L7.262|
000010  e8dff006          TBB      [pc,r6]
000014  080e0f10          DCB      0x08,0x0e,0x0f,0x10
000018  112a4409          DCB      0x11,0x2a,0x44,0x09
00001c  0a0b0c5e          DCB      0x0a,0x0b,0x0c,0x5e
000020  7a0d94af          DCB      0x7a,0x0d,0x94,0xaf
;;;522            case CPU_INT_STK_PTR:                                   /* ---------------- INVALID OR RESERVED --------------- */
;;;523            case CPU_INT_RSVD_07:
000024  bf00              NOP      
;;;524            case CPU_INT_RSVD_08:
000026  bf00              NOP      
;;;525            case CPU_INT_RSVD_09:
000028  bf00              NOP      
;;;526            case CPU_INT_RSVD_10:
00002a  bf00              NOP      
;;;527            case CPU_INT_RSVD_13:
00002c  bf00              NOP      
;;;528                 break;
00002e  e0fc              B        |L7.554|
;;;529    
;;;530    
;;;531                                                                    /* ----------------- SYSTEM EXCEPTIONS ---------------- */
;;;532            case CPU_INT_RESET:                                     /* Reset (see Note #2).                                 */
;;;533            case CPU_INT_NMI:                                       /* Non-maskable interrupt (see Note #2).                */
000030  bf00              NOP      
;;;534            case CPU_INT_HFAULT:                                    /* Hard fault (see Note #2).                            */
000032  bf00              NOP      
;;;535                 break;
000034  e0f9              B        |L7.554|
;;;536    
;;;537            case CPU_INT_MEM:                                       /* Memory management.                                   */
;;;538                 CPU_CRITICAL_ENTER();
000036  bf00              NOP      
000038  bf00              NOP      
00003a  f7fffffe          BL       CPU_SR_Save
00003e  4682              MOV      r10,r0
000040  bf00              NOP      
000042  f7fffffe          BL       CPU_IntDisMeasStart
000046  bf00              NOP      
;;;539                 temp                 = CPU_REG_NVIC_SHPRI1;
000048  4879              LDR      r0,|L7.560|
00004a  6804              LDR      r4,[r0,#0]
;;;540                 temp                &= ~(DEF_OCTET_MASK << (0 * DEF_OCTET_NBR_BITS));
00004c  f02404ff          BIC      r4,r4,#0xff
;;;541                 temp                |=  (prio           << (0 * DEF_OCTET_NBR_BITS));
000050  432c              ORRS     r4,r4,r5
;;;542                 CPU_REG_NVIC_SHPRI1  = temp;
000052  6004              STR      r4,[r0,#0]
;;;543                 CPU_CRITICAL_EXIT();
000054  bf00              NOP      
000056  f7fffffe          BL       CPU_IntDisMeasStop
00005a  bf00              NOP      
00005c  4650              MOV      r0,r10
00005e  f7fffffe          BL       CPU_SR_Restore
000062  bf00              NOP      
000064  bf00              NOP      
;;;544                 break;
000066  e0e0              B        |L7.554|
;;;545    
;;;546            case CPU_INT_BUSFAULT:                                  /* Bus fault.                                           */
;;;547                 CPU_CRITICAL_ENTER();
000068  bf00              NOP      
00006a  bf00              NOP      
00006c  f7fffffe          BL       CPU_SR_Save
000070  4682              MOV      r10,r0
000072  bf00              NOP      
000074  f7fffffe          BL       CPU_IntDisMeasStart
000078  bf00              NOP      
;;;548                 temp                 = CPU_REG_NVIC_SHPRI1;
00007a  486d              LDR      r0,|L7.560|
00007c  6804              LDR      r4,[r0,#0]
;;;549                 temp                &= ~(DEF_OCTET_MASK << (1 * DEF_OCTET_NBR_BITS));
00007e  f424447f          BIC      r4,r4,#0xff00
;;;550                 temp                |=  (prio           << (1 * DEF_OCTET_NBR_BITS));
000082  ea442405          ORR      r4,r4,r5,LSL #8
;;;551                 CPU_REG_NVIC_SHPRI1  = temp;
000086  6004              STR      r4,[r0,#0]
;;;552                 CPU_CRITICAL_EXIT();
000088  bf00              NOP      
00008a  f7fffffe          BL       CPU_IntDisMeasStop
00008e  bf00              NOP      
000090  4650              MOV      r0,r10
000092  f7fffffe          BL       CPU_SR_Restore
000096  bf00              NOP      
000098  bf00              NOP      
;;;553                 break;
00009a  e0c6              B        |L7.554|
;;;554    
;;;555            case CPU_INT_USAGEFAULT:                                /* Usage fault.                                         */
;;;556                 CPU_CRITICAL_ENTER();
00009c  bf00              NOP      
00009e  bf00              NOP      
0000a0  f7fffffe          BL       CPU_SR_Save
0000a4  4682              MOV      r10,r0
0000a6  bf00              NOP      
0000a8  f7fffffe          BL       CPU_IntDisMeasStart
0000ac  bf00              NOP      
;;;557                 temp                 = CPU_REG_NVIC_SHPRI1;
0000ae  4860              LDR      r0,|L7.560|
0000b0  6804              LDR      r4,[r0,#0]
;;;558                 temp                &= ~(DEF_OCTET_MASK << (2 * DEF_OCTET_NBR_BITS));
0000b2  f424047f          BIC      r4,r4,#0xff0000
;;;559                 temp                |=  (prio           << (2 * DEF_OCTET_NBR_BITS));
0000b6  ea444405          ORR      r4,r4,r5,LSL #16
;;;560                 CPU_REG_NVIC_SHPRI1  = temp;
0000ba  6004              STR      r4,[r0,#0]
;;;561                 CPU_CRITICAL_EXIT();
0000bc  bf00              NOP      
0000be  f7fffffe          BL       CPU_IntDisMeasStop
0000c2  bf00              NOP      
0000c4  4650              MOV      r0,r10
0000c6  f7fffffe          BL       CPU_SR_Restore
0000ca  bf00              NOP      
0000cc  bf00              NOP      
;;;562                 break;
0000ce  e0ac              B        |L7.554|
;;;563    
;;;564            case CPU_INT_SVCALL:                                    /* SVCall.                                              */
;;;565                 CPU_CRITICAL_ENTER();
0000d0  bf00              NOP      
0000d2  bf00              NOP      
0000d4  f7fffffe          BL       CPU_SR_Save
0000d8  4682              MOV      r10,r0
0000da  bf00              NOP      
0000dc  f7fffffe          BL       CPU_IntDisMeasStart
0000e0  bf00              NOP      
;;;566                 temp                 = CPU_REG_NVIC_SHPRI2;
0000e2  4853              LDR      r0,|L7.560|
0000e4  1d00              ADDS     r0,r0,#4
0000e6  6804              LDR      r4,[r0,#0]
;;;567                 temp                &= ~((CPU_INT32U)DEF_OCTET_MASK << (3 * DEF_OCTET_NBR_BITS));
0000e8  f024447f          BIC      r4,r4,#0xff000000
;;;568                 temp                |=  (prio                       << (3 * DEF_OCTET_NBR_BITS));
0000ec  ea446405          ORR      r4,r4,r5,LSL #24
;;;569                 CPU_REG_NVIC_SHPRI2  = temp;
0000f0  6004              STR      r4,[r0,#0]
;;;570                 CPU_CRITICAL_EXIT();
0000f2  bf00              NOP      
0000f4  f7fffffe          BL       CPU_IntDisMeasStop
0000f8  bf00              NOP      
0000fa  4650              MOV      r0,r10
0000fc  f7fffffe          BL       CPU_SR_Restore
000100  bf00              NOP      
000102  bf00              NOP      
;;;571                 break;
000104  e091              B        |L7.554|
                  |L7.262|
000106  e04f              B        |L7.424|
;;;572    
;;;573            case CPU_INT_DBGMON:                                    /* Debug monitor.                                       */
;;;574                 CPU_CRITICAL_ENTER();
000108  bf00              NOP      
00010a  bf00              NOP      
00010c  f7fffffe          BL       CPU_SR_Save
000110  4682              MOV      r10,r0
000112  bf00              NOP      
000114  f7fffffe          BL       CPU_IntDisMeasStart
000118  bf00              NOP      
;;;575                 temp                = CPU_REG_NVIC_SHPRI3;
00011a  4845              LDR      r0,|L7.560|
00011c  3008              ADDS     r0,r0,#8
00011e  6804              LDR      r4,[r0,#0]
;;;576                 temp                &= ~(DEF_OCTET_MASK << (0 * DEF_OCTET_NBR_BITS));
000120  f02404ff          BIC      r4,r4,#0xff
;;;577                 temp                |=  (prio           << (0 * DEF_OCTET_NBR_BITS));
000124  432c              ORRS     r4,r4,r5
;;;578                 CPU_REG_NVIC_SHPRI3  = temp;
000126  6004              STR      r4,[r0,#0]
;;;579                 CPU_CRITICAL_EXIT();
000128  bf00              NOP      
00012a  f7fffffe          BL       CPU_IntDisMeasStop
00012e  bf00              NOP      
000130  4650              MOV      r0,r10
000132  f7fffffe          BL       CPU_SR_Restore
000136  bf00              NOP      
000138  bf00              NOP      
;;;580                 break;
00013a  e076              B        |L7.554|
;;;581    
;;;582            case CPU_INT_PENDSV:                                    /* PendSV.                                              */
;;;583                 CPU_CRITICAL_ENTER();
00013c  bf00              NOP      
00013e  bf00              NOP      
000140  f7fffffe          BL       CPU_SR_Save
000144  4682              MOV      r10,r0
000146  bf00              NOP      
000148  f7fffffe          BL       CPU_IntDisMeasStart
00014c  bf00              NOP      
;;;584                 temp                 = CPU_REG_NVIC_SHPRI3;
00014e  4838              LDR      r0,|L7.560|
000150  3008              ADDS     r0,r0,#8
000152  6804              LDR      r4,[r0,#0]
;;;585                 temp                &= ~(DEF_OCTET_MASK << (2 * DEF_OCTET_NBR_BITS));
000154  f424047f          BIC      r4,r4,#0xff0000
;;;586                 temp                |=  (prio           << (2 * DEF_OCTET_NBR_BITS));
000158  ea444405          ORR      r4,r4,r5,LSL #16
;;;587                 CPU_REG_NVIC_SHPRI3  = temp;
00015c  6004              STR      r4,[r0,#0]
;;;588                 CPU_CRITICAL_EXIT();
00015e  bf00              NOP      
000160  f7fffffe          BL       CPU_IntDisMeasStop
000164  bf00              NOP      
000166  4650              MOV      r0,r10
000168  f7fffffe          BL       CPU_SR_Restore
00016c  bf00              NOP      
00016e  bf00              NOP      
;;;589                 break;
000170  e05b              B        |L7.554|
;;;590    
;;;591            case CPU_INT_SYSTICK:                                   /* SysTick.                                             */
;;;592                 CPU_CRITICAL_ENTER();
000172  bf00              NOP      
000174  bf00              NOP      
000176  f7fffffe          BL       CPU_SR_Save
00017a  4682              MOV      r10,r0
00017c  bf00              NOP      
00017e  f7fffffe          BL       CPU_IntDisMeasStart
000182  bf00              NOP      
;;;593                 temp                 = CPU_REG_NVIC_SHPRI3;
000184  482a              LDR      r0,|L7.560|
000186  3008              ADDS     r0,r0,#8
000188  6804              LDR      r4,[r0,#0]
;;;594                 temp                &= ~((CPU_INT32U)DEF_OCTET_MASK << (3 * DEF_OCTET_NBR_BITS));
00018a  f024447f          BIC      r4,r4,#0xff000000
;;;595                 temp                |=  (prio                       << (3 * DEF_OCTET_NBR_BITS));
00018e  ea446405          ORR      r4,r4,r5,LSL #24
;;;596                 CPU_REG_NVIC_SHPRI3  = temp;
000192  6004              STR      r4,[r0,#0]
;;;597                 CPU_CRITICAL_EXIT();
000194  bf00              NOP      
000196  f7fffffe          BL       CPU_IntDisMeasStop
00019a  bf00              NOP      
00019c  4650              MOV      r0,r10
00019e  f7fffffe          BL       CPU_SR_Restore
0001a2  bf00              NOP      
0001a4  bf00              NOP      
;;;598                 break;
0001a6  e040              B        |L7.554|
                  |L7.424|
;;;599    
;;;600    
;;;601                                                                    /* ---------------- EXTERNAL INTERRUPT ---------------- */
;;;602            default:
;;;603                pos_max = CPU_INT_SRC_POS_MAX;
0001a8  f04f20e0          MOV      r0,#0xe000e000
0001ac  6840              LDR      r0,[r0,#4]
0001ae  1c40              ADDS     r0,r0,#1
0001b0  2110              MOVS     r1,#0x10
0001b2  eb011040          ADD      r0,r1,r0,LSL #5
0001b6  f00009ff          AND      r9,r0,#0xff
;;;604                if (pos < pos_max) {                                /* See Note #3.                                         */
0001ba  454e              CMP      r6,r9
0001bc  da34              BGE      |L7.552|
;;;605                     group                    = (pos - 16) / 4;
0001be  f1a60010          SUB      r0,r6,#0x10
0001c2  17c1              ASRS     r1,r0,#31
0001c4  eb007191          ADD      r1,r0,r1,LSR #30
0001c8  f3c10787          UBFX     r7,r1,#2,#8
;;;606                     nbr                      = (pos - 16) % 4;
0001cc  17c1              ASRS     r1,r0,#31
0001ce  eb007191          ADD      r1,r0,r1,LSR #30
0001d2  1089              ASRS     r1,r1,#2
0001d4  eba00181          SUB      r1,r0,r1,LSL #2
0001d8  f00108ff          AND      r8,r1,#0xff
;;;607    
;;;608                     CPU_CRITICAL_ENTER();
0001dc  bf00              NOP      
0001de  bf00              NOP      
0001e0  f7fffffe          BL       CPU_SR_Save
0001e4  4682              MOV      r10,r0
0001e6  bf00              NOP      
0001e8  f7fffffe          BL       CPU_IntDisMeasStart
0001ec  bf00              NOP      
;;;609                     temp                     = CPU_REG_NVIC_PRIO(group);
0001ee  00b8              LSLS     r0,r7,#2
0001f0  f10020e0          ADD      r0,r0,#0xe000e000
0001f4  f8d04400          LDR      r4,[r0,#0x400]
;;;610                     temp                    &= ~(DEF_OCTET_MASK << (nbr * DEF_OCTET_NBR_BITS));
0001f8  ea4f01c8          LSL      r1,r8,#3
0001fc  20ff              MOVS     r0,#0xff
0001fe  4088              LSLS     r0,r0,r1
000200  4384              BICS     r4,r4,r0
;;;611                     temp                    |=  (prio           << (nbr * DEF_OCTET_NBR_BITS));
000202  ea4f01c8          LSL      r1,r8,#3
000206  fa05f001          LSL      r0,r5,r1
00020a  4304              ORRS     r4,r4,r0
;;;612                     CPU_REG_NVIC_PRIO(group) = temp;
00020c  00b8              LSLS     r0,r7,#2
00020e  f10020e0          ADD      r0,r0,#0xe000e000
000212  f8c04400          STR      r4,[r0,#0x400]
;;;613                     CPU_CRITICAL_EXIT();
000216  bf00              NOP      
000218  f7fffffe          BL       CPU_IntDisMeasStop
00021c  bf00              NOP      
00021e  4650              MOV      r0,r10
000220  f7fffffe          BL       CPU_SR_Restore
000224  bf00              NOP      
000226  bf00              NOP      
                  |L7.552|
;;;614                 }
;;;615                 break;
000228  bf00              NOP      
                  |L7.554|
00022a  bf00              NOP                            ;528
;;;616        }
;;;617    }
00022c  e8bd87f0          POP      {r4-r10,pc}
;;;618    
                          ENDP

                  |L7.560|
                          DCD      0xe000ed18
