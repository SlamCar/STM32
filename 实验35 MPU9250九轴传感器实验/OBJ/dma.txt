; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o..\obj\dma.o --asm_dir=..\OBJ\ --list_dir=..\OBJ\ --depend=..\obj\dma.d --cpu=Cortex-M7.fp.dp --apcs=interwork -O0 --diag_suppress=9931 -I..\CORE -I..\OBJ -I..\USER -I..\HALLIB\STM32F7xx_HAL_Driver\Inc -I..\SYSTEM\delay -I..\SYSTEM\sys -I..\SYSTEM\usart -I..\HARDWARE\LED -I..\HARDWARE\KEY -I..\HARDWARE\LCD -I..\HARDWARE\SDRAM -I..\HARDWARE\IIC -I..\HARDWARE\24CXX -I..\HARDWARE\MPU9250 -I..\HARDWARE\DHT11 -I..\HARDWARE\MPU -I..\USMART -I..\DMP\driver\eMPL -I..\DMP\driver\include -I..\DMP\driver\stm32L -I..\DMP\eMPL-hal -I..\DMP\mllite -I..\DMP\mpl -I..\UCOSIII -I..\UCOSIII\UCOS-BSP -I..\UCOSIII\UCOS-CONFIG -I..\UCOSIII\uCOS-III\Source -I..\UCOSIII\uC-CPU\ARM-Cortex-M4\RealView -I..\UCOSIII\uC-LIB\Ports\ARM-Cortex-M4\RealView -I..\UCOSIII\uCOS-III\Ports\ARM-Cortex-M4\Generic\RealView -I..\UCOSIII\uCOS-III\Ports -I..\UCOSIII\uC-LIB -I..\UCOSIII\uC-CPU -I..\HARDWARE\MY_FUNCTION -I..\USER -I..\HARDWARE\CRC -I..\HARDWARE\DMA -I..\HARDWARE\HEART_BEAT -I..\HARDWARE\RECEIVE_ANALYZE -I..\HARDWARE\FEED_BACK -I..\HARDWARE\DATA -I"D:\1111111\32F4\Slam car\实验35 MPU9250九轴传感器实验\USER\RTE" -IF:\Keil_v5\ARM\PACK\Keil\STM32F7xx_DFP\2.7.0 -IF:\Keil_v5\ARM\CMSIS\Include -IF:\Keil_v5\ARM\PACK\Keil\STM32F7xx_DFP\2.7.0\Drivers\CMSIS\Device\ST\STM32F7xx\Include -D__UVISION_VERSION=514 -DSTM32F767xx -DSTM32F767xx -DUSE_HAL_DRIVER -DMPL_LOG_NDEBUG=1 -DEMPL -DMPU9250 -DEMPL_TARGET_STM32F4 --omf_browse=..\obj\dma.crf ..\HARDWARE\DMA\dma.c]
                          THUMB

                          AREA ||i.MYDMA_Config||, CODE, READONLY, ALIGN=2

                  MYDMA_Config PROC
;;;22     //chx:DMA通道选择,@ref DMA_channel DMA_CHANNEL_0~DMA_CHANNEL_7
;;;23     void MYDMA_Config(DMA_Stream_TypeDef *DMA_Streamx,u32 chx)
000000  b538              PUSH     {r3-r5,lr}
;;;24     { 
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;25     	if((u32)DMA_Streamx>(u32)DMA2)//得到当前stream是属于DMA2还是DMA1
000006  4822              LDR      r0,|L1.144|
000008  4284              CMP      r4,r0
00000a  d90d              BLS      |L1.40|
;;;26     	{
;;;27             __HAL_RCC_DMA2_CLK_ENABLE();//DMA2时钟使能	
00000c  bf00              NOP      
00000e  4821              LDR      r0,|L1.148|
000010  6800              LDR      r0,[r0,#0]
000012  f4400080          ORR      r0,r0,#0x400000
000016  491f              LDR      r1,|L1.148|
000018  6008              STR      r0,[r1,#0]
00001a  4608              MOV      r0,r1
00001c  6800              LDR      r0,[r0,#0]
00001e  f4000080          AND      r0,r0,#0x400000
000022  9000              STR      r0,[sp,#0]
000024  bf00              NOP      
000026  e00d              B        |L1.68|
                  |L1.40|
;;;28     	}else 
;;;29     	{
;;;30             __HAL_RCC_DMA1_CLK_ENABLE();//DMA1时钟使能 
000028  bf00              NOP      
00002a  481a              LDR      r0,|L1.148|
00002c  6800              LDR      r0,[r0,#0]
00002e  f4401000          ORR      r0,r0,#0x200000
000032  4918              LDR      r1,|L1.148|
000034  6008              STR      r0,[r1,#0]
000036  4608              MOV      r0,r1
000038  6800              LDR      r0,[r0,#0]
00003a  f4001000          AND      r0,r0,#0x200000
00003e  9000              STR      r0,[sp,#0]
000040  bf00              NOP      
000042  bf00              NOP      
                  |L1.68|
;;;31     	}
;;;32         
;;;33         __HAL_LINKDMA(&UART1_Handler,hdmatx,UART1TxDMA_Handler);    //将DMA与USART1联系起来(发送DMA)
000044  bf00              NOP      
000046  4814              LDR      r0,|L1.152|
000048  4914              LDR      r1,|L1.156|
00004a  6608              STR      r0,[r1,#0x60]  ; UART1_Handler
00004c  4608              MOV      r0,r1
00004e  4912              LDR      r1,|L1.152|
000050  6388              STR      r0,[r1,#0x38]  ; UART1TxDMA_Handler
000052  bf00              NOP      
;;;34         
;;;35         //Tx DMA配置
;;;36         UART1TxDMA_Handler.Instance=DMA_Streamx;                            //数据流选择
000054  4608              MOV      r0,r1
000056  6004              STR      r4,[r0,#0]  ; UART1TxDMA_Handler
;;;37         UART1TxDMA_Handler.Init.Channel=chx;                                //通道选择
000058  6045              STR      r5,[r0,#4]  ; UART1TxDMA_Handler
;;;38         UART1TxDMA_Handler.Init.Direction=DMA_MEMORY_TO_PERIPH;             //存储器到外设
00005a  2140              MOVS     r1,#0x40
00005c  6081              STR      r1,[r0,#8]
;;;39         UART1TxDMA_Handler.Init.PeriphInc=DMA_PINC_DISABLE;                 //外设非增量模式
00005e  2100              MOVS     r1,#0
000060  60c1              STR      r1,[r0,#0xc]
;;;40         UART1TxDMA_Handler.Init.MemInc=DMA_MINC_ENABLE;                     //存储器增量模式
000062  f44f6180          MOV      r1,#0x400
000066  6101              STR      r1,[r0,#0x10]
;;;41         UART1TxDMA_Handler.Init.PeriphDataAlignment=DMA_PDATAALIGN_BYTE;    //外设数据长度:8位
000068  2100              MOVS     r1,#0
00006a  6141              STR      r1,[r0,#0x14]
;;;42         UART1TxDMA_Handler.Init.MemDataAlignment=DMA_MDATAALIGN_BYTE;       //存储器数据长度:8位
00006c  6181              STR      r1,[r0,#0x18]
;;;43         UART1TxDMA_Handler.Init.Mode=DMA_NORMAL;                            //外设流控模式
00006e  61c1              STR      r1,[r0,#0x1c]
;;;44         UART1TxDMA_Handler.Init.Priority=DMA_PRIORITY_MEDIUM;               //中等优先级
000070  f44f3180          MOV      r1,#0x10000
000074  6201              STR      r1,[r0,#0x20]
;;;45         UART1TxDMA_Handler.Init.FIFOMode=DMA_FIFOMODE_DISABLE;              
000076  2100              MOVS     r1,#0
000078  6241              STR      r1,[r0,#0x24]
;;;46         UART1TxDMA_Handler.Init.FIFOThreshold=DMA_FIFO_THRESHOLD_FULL;      
00007a  2103              MOVS     r1,#3
00007c  6281              STR      r1,[r0,#0x28]
;;;47         UART1TxDMA_Handler.Init.MemBurst=DMA_MBURST_SINGLE;                 //存储器突发单次传输
00007e  2100              MOVS     r1,#0
000080  62c1              STR      r1,[r0,#0x2c]
;;;48         UART1TxDMA_Handler.Init.PeriphBurst=DMA_PBURST_SINGLE;              //外设突发单次传输
000082  6301              STR      r1,[r0,#0x30]
;;;49         
;;;50         HAL_DMA_DeInit(&UART1TxDMA_Handler);   
000084  f7fffffe          BL       HAL_DMA_DeInit
;;;51         HAL_DMA_Init(&UART1TxDMA_Handler);
000088  4803              LDR      r0,|L1.152|
00008a  f7fffffe          BL       HAL_DMA_Init
;;;52     } 
00008e  bd38              POP      {r3-r5,pc}
;;;53     
                          ENDP

                  |L1.144|
                          DCD      0x40026400
                  |L1.148|
                          DCD      0x40023830
                  |L1.152|
                          DCD      UART1TxDMA_Handler
                  |L1.156|
                          DCD      UART1_Handler

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  UART1TxDMA_Handler
                          %        96

;*** Start embedded assembler ***

#line 1 "..\\HARDWARE\\DMA\\dma.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___5_dma_c_3c28009e____REV16|
#line 388 "..\\CORE\\cmsis_armcc.h"
|__asm___5_dma_c_3c28009e____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___5_dma_c_3c28009e____REVSH|
#line 402
|__asm___5_dma_c_3c28009e____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___5_dma_c_3c28009e____RRX|
#line 587
|__asm___5_dma_c_3c28009e____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
