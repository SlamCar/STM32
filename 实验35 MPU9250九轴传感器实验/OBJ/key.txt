; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o..\obj\key.o --asm_dir=..\OBJ\ --list_dir=..\OBJ\ --depend=..\obj\key.d --cpu=Cortex-M7.fp.dp --apcs=interwork -O0 --diag_suppress=9931 -I..\CORE -I..\OBJ -I..\USER -I..\HALLIB\STM32F7xx_HAL_Driver\Inc -I..\SYSTEM\delay -I..\SYSTEM\sys -I..\SYSTEM\usart -I..\HARDWARE\LED -I..\HARDWARE\KEY -I..\HARDWARE\LCD -I..\HARDWARE\SDRAM -I..\HARDWARE\IIC -I..\HARDWARE\24CXX -I..\HARDWARE\MPU9250 -I..\HARDWARE\DHT11 -I..\HARDWARE\MPU -I..\USMART -I..\DMP\driver\eMPL -I..\DMP\driver\include -I..\DMP\driver\stm32L -I..\DMP\eMPL-hal -I..\DMP\mllite -I..\DMP\mpl -I..\UCOSIII -I..\UCOSIII\UCOS-BSP -I..\UCOSIII\UCOS-CONFIG -I..\UCOSIII\uCOS-III\Source -I..\UCOSIII\uC-CPU\ARM-Cortex-M4\RealView -I..\UCOSIII\uC-LIB\Ports\ARM-Cortex-M4\RealView -I..\UCOSIII\uCOS-III\Ports\ARM-Cortex-M4\Generic\RealView -I..\UCOSIII\uCOS-III\Ports -I..\UCOSIII\uC-LIB -I..\UCOSIII\uC-CPU -I..\HARDWARE\MY_FUNCTION -I..\USER -I..\HARDWARE\CRC -I..\HARDWARE\DMA -I..\HARDWARE\HEART_BEAT -I..\HARDWARE\RECEIVE_ANALYZE -I..\HARDWARE\FEED_BACK -I..\HARDWARE\DATA -I"D:\1111111\32F4\Slam car\实验35 MPU9250九轴传感器实验\USER\RTE" -IF:\Keil_v5\ARM\PACK\Keil\STM32F7xx_DFP\2.7.0 -IF:\Keil_v5\ARM\CMSIS\Include -IF:\Keil_v5\ARM\PACK\Keil\STM32F7xx_DFP\2.7.0\Drivers\CMSIS\Device\ST\STM32F7xx\Include -D__UVISION_VERSION=514 -DSTM32F767xx -DSTM32F767xx -DUSE_HAL_DRIVER -DMPL_LOG_NDEBUG=1 -DEMPL -DMPU9250 -DEMPL_TARGET_STM32F4 --omf_browse=..\obj\key.crf ..\HARDWARE\KEY\key.c]
                          THUMB

                          AREA ||i.KEY_Init||, CODE, READONLY, ALIGN=2

                  KEY_Init PROC
;;;16     //按键初始化函数
;;;17     void KEY_Init(void)
000000  b500              PUSH     {lr}
;;;18     {
000002  b087              SUB      sp,sp,#0x1c
;;;19         GPIO_InitTypeDef GPIO_Initure;
;;;20         
;;;21         __HAL_RCC_GPIOA_CLK_ENABLE();           //开启GPIOA时钟
000004  bf00              NOP      
000006  4824              LDR      r0,|L1.152|
000008  6800              LDR      r0,[r0,#0]
00000a  f0400001          ORR      r0,r0,#1
00000e  4922              LDR      r1,|L1.152|
000010  6008              STR      r0,[r1,#0]
000012  4608              MOV      r0,r1
000014  6800              LDR      r0,[r0,#0]
000016  f0000001          AND      r0,r0,#1
00001a  9001              STR      r0,[sp,#4]
00001c  bf00              NOP      
00001e  bf00              NOP      
;;;22         __HAL_RCC_GPIOC_CLK_ENABLE();           //开启GPIOC时钟
000020  bf00              NOP      
000022  4608              MOV      r0,r1
000024  6800              LDR      r0,[r0,#0]
000026  f0400004          ORR      r0,r0,#4
00002a  6008              STR      r0,[r1,#0]
00002c  4608              MOV      r0,r1
00002e  6800              LDR      r0,[r0,#0]
000030  f0000004          AND      r0,r0,#4
000034  9001              STR      r0,[sp,#4]
000036  bf00              NOP      
000038  bf00              NOP      
;;;23         __HAL_RCC_GPIOH_CLK_ENABLE();           //开启GPIOH时钟
00003a  bf00              NOP      
00003c  4608              MOV      r0,r1
00003e  6800              LDR      r0,[r0,#0]
000040  f0400080          ORR      r0,r0,#0x80
000044  6008              STR      r0,[r1,#0]
000046  4608              MOV      r0,r1
000048  6800              LDR      r0,[r0,#0]
00004a  f0000080          AND      r0,r0,#0x80
00004e  9001              STR      r0,[sp,#4]
000050  bf00              NOP      
000052  bf00              NOP      
;;;24         
;;;25         GPIO_Initure.Pin=GPIO_PIN_0;            //PA0
000054  2001              MOVS     r0,#1
000056  9002              STR      r0,[sp,#8]
;;;26         GPIO_Initure.Mode=GPIO_MODE_INPUT;      //输入
000058  2000              MOVS     r0,#0
00005a  9003              STR      r0,[sp,#0xc]
;;;27         GPIO_Initure.Pull=GPIO_PULLDOWN;        //下拉
00005c  2002              MOVS     r0,#2
00005e  9004              STR      r0,[sp,#0x10]
;;;28         GPIO_Initure.Speed=GPIO_SPEED_HIGH;     //高速
000060  2003              MOVS     r0,#3
000062  9005              STR      r0,[sp,#0x14]
;;;29         HAL_GPIO_Init(GPIOA,&GPIO_Initure);
000064  a902              ADD      r1,sp,#8
000066  480d              LDR      r0,|L1.156|
000068  f7fffffe          BL       HAL_GPIO_Init
;;;30         
;;;31         GPIO_Initure.Pin=GPIO_PIN_13;           //PC13
00006c  f44f5000          MOV      r0,#0x2000
000070  9002              STR      r0,[sp,#8]
;;;32         GPIO_Initure.Mode=GPIO_MODE_INPUT;      //输入
000072  2000              MOVS     r0,#0
000074  9003              STR      r0,[sp,#0xc]
;;;33         GPIO_Initure.Pull=GPIO_PULLUP;          //上拉
000076  2001              MOVS     r0,#1
000078  9004              STR      r0,[sp,#0x10]
;;;34         GPIO_Initure.Speed=GPIO_SPEED_HIGH;     //高速
00007a  2003              MOVS     r0,#3
00007c  9005              STR      r0,[sp,#0x14]
;;;35         HAL_GPIO_Init(GPIOC,&GPIO_Initure);
00007e  a902              ADD      r1,sp,#8
000080  4807              LDR      r0,|L1.160|
000082  f7fffffe          BL       HAL_GPIO_Init
;;;36         
;;;37         GPIO_Initure.Pin=GPIO_PIN_2|GPIO_PIN_3; //PH2,3
000086  200c              MOVS     r0,#0xc
000088  9002              STR      r0,[sp,#8]
;;;38         HAL_GPIO_Init(GPIOH,&GPIO_Initure);
00008a  a902              ADD      r1,sp,#8
00008c  4805              LDR      r0,|L1.164|
00008e  f7fffffe          BL       HAL_GPIO_Init
;;;39     }
000092  b007              ADD      sp,sp,#0x1c
000094  bd00              POP      {pc}
;;;40     
                          ENDP

000096  0000              DCW      0x0000
                  |L1.152|
                          DCD      0x40023830
                  |L1.156|
                          DCD      0x40020000
                  |L1.160|
                          DCD      0x40020800
                  |L1.164|
                          DCD      0x40021c00

                          AREA ||i.KEY_Scan||, CODE, READONLY, ALIGN=2

                  KEY_Scan PROC
;;;46     //注意此函数有响应优先级,KEY0>KEY1>KEY2>WK_UP!!
;;;47     u8 KEY_Scan(u8 mode)
000000  b510              PUSH     {r4,lr}
;;;48     {
000002  4604              MOV      r4,r0
;;;49         static u8 key_up=1;     //按键松开标志
;;;50         if(mode==1)key_up=1;    //支持连按
000004  2c01              CMP      r4,#1
000006  d101              BNE      |L2.12|
000008  492d              LDR      r1,|L2.192|
00000a  7008              STRB     r0,[r1,#0]
                  |L2.12|
;;;51         if(key_up&&(KEY0==0||KEY1==0||KEY2==0||WK_UP==1))
00000c  482c              LDR      r0,|L2.192|
00000e  7800              LDRB     r0,[r0,#0]  ; key_up
000010  2800              CMP      r0,#0
000012  d039              BEQ      |L2.136|
000014  2108              MOVS     r1,#8
000016  482b              LDR      r0,|L2.196|
000018  f7fffffe          BL       HAL_GPIO_ReadPin
00001c  b180              CBZ      r0,|L2.64|
00001e  2104              MOVS     r1,#4
000020  4828              LDR      r0,|L2.196|
000022  f7fffffe          BL       HAL_GPIO_ReadPin
000026  b158              CBZ      r0,|L2.64|
000028  f44f5100          MOV      r1,#0x2000
00002c  4826              LDR      r0,|L2.200|
00002e  f7fffffe          BL       HAL_GPIO_ReadPin
000032  b128              CBZ      r0,|L2.64|
000034  2101              MOVS     r1,#1
000036  4825              LDR      r0,|L2.204|
000038  f7fffffe          BL       HAL_GPIO_ReadPin
00003c  2801              CMP      r0,#1
00003e  d123              BNE      |L2.136|
                  |L2.64|
;;;52         {
;;;53             delay_ms(10);
000040  200a              MOVS     r0,#0xa
000042  f7fffffe          BL       delay_ms
;;;54             key_up=0;
000046  2000              MOVS     r0,#0
000048  491d              LDR      r1,|L2.192|
00004a  7008              STRB     r0,[r1,#0]
;;;55             if(KEY0==0)       return KEY0_PRES;
00004c  2108              MOVS     r1,#8
00004e  481d              LDR      r0,|L2.196|
000050  f7fffffe          BL       HAL_GPIO_ReadPin
000054  b908              CBNZ     r0,|L2.90|
000056  2001              MOVS     r0,#1
                  |L2.88|
;;;56             else if(KEY1==0)  return KEY1_PRES;
;;;57             else if(KEY2==0)  return KEY2_PRES;
;;;58             else if(WK_UP==1) return WKUP_PRES;          
;;;59         }else if(KEY0==1&&KEY1==1&&KEY2==1&&WK_UP==0)key_up=1;
;;;60         return 0;   //无按键按下
;;;61     }
000058  bd10              POP      {r4,pc}
                  |L2.90|
00005a  2104              MOVS     r1,#4                 ;56
00005c  4819              LDR      r0,|L2.196|
00005e  f7fffffe          BL       HAL_GPIO_ReadPin
000062  b908              CBNZ     r0,|L2.104|
000064  2002              MOVS     r0,#2                 ;56
000066  e7f7              B        |L2.88|
                  |L2.104|
000068  f44f5100          MOV      r1,#0x2000            ;57
00006c  4816              LDR      r0,|L2.200|
00006e  f7fffffe          BL       HAL_GPIO_ReadPin
000072  b908              CBNZ     r0,|L2.120|
000074  2003              MOVS     r0,#3                 ;57
000076  e7ef              B        |L2.88|
                  |L2.120|
000078  2101              MOVS     r1,#1                 ;58
00007a  4814              LDR      r0,|L2.204|
00007c  f7fffffe          BL       HAL_GPIO_ReadPin
000080  2801              CMP      r0,#1                 ;58
000082  d11b              BNE      |L2.188|
000084  2004              MOVS     r0,#4                 ;58
000086  e7e7              B        |L2.88|
                  |L2.136|
000088  2108              MOVS     r1,#8                 ;59
00008a  480e              LDR      r0,|L2.196|
00008c  f7fffffe          BL       HAL_GPIO_ReadPin
000090  2801              CMP      r0,#1                 ;59
000092  d113              BNE      |L2.188|
000094  2104              MOVS     r1,#4                 ;59
000096  480b              LDR      r0,|L2.196|
000098  f7fffffe          BL       HAL_GPIO_ReadPin
00009c  2801              CMP      r0,#1                 ;59
00009e  d10d              BNE      |L2.188|
0000a0  0341              LSLS     r1,r0,#13             ;59
0000a2  4809              LDR      r0,|L2.200|
0000a4  f7fffffe          BL       HAL_GPIO_ReadPin
0000a8  2801              CMP      r0,#1                 ;59
0000aa  d107              BNE      |L2.188|
0000ac  2101              MOVS     r1,#1                 ;59
0000ae  4807              LDR      r0,|L2.204|
0000b0  f7fffffe          BL       HAL_GPIO_ReadPin
0000b4  b910              CBNZ     r0,|L2.188|
0000b6  2001              MOVS     r0,#1                 ;59
0000b8  4901              LDR      r1,|L2.192|
0000ba  7008              STRB     r0,[r1,#0]            ;59
                  |L2.188|
0000bc  2000              MOVS     r0,#0                 ;60
0000be  e7cb              B        |L2.88|
                          ENDP

                  |L2.192|
                          DCD      key_up
                  |L2.196|
                          DCD      0x40021c00
                  |L2.200|
                          DCD      0x40020800
                  |L2.204|
                          DCD      0x40020000

                          AREA ||.data||, DATA, ALIGN=0

                  key_up
000000  01                DCB      0x01

;*** Start embedded assembler ***

#line 1 "..\\HARDWARE\\KEY\\key.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___5_key_c_KEY_Init____REV16|
#line 388 "..\\CORE\\cmsis_armcc.h"
|__asm___5_key_c_KEY_Init____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___5_key_c_KEY_Init____REVSH|
#line 402
|__asm___5_key_c_KEY_Init____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___5_key_c_KEY_Init____RRX|
#line 587
|__asm___5_key_c_KEY_Init____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
