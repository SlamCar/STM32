; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o..\obj\lib_math.o --asm_dir=..\OBJ\ --list_dir=..\OBJ\ --depend=..\obj\lib_math.d --cpu=Cortex-M7.fp.dp --apcs=interwork -O0 --diag_suppress=9931 -I..\CORE -I..\OBJ -I..\USER -I..\HALLIB\STM32F7xx_HAL_Driver\Inc -I..\SYSTEM\delay -I..\SYSTEM\sys -I..\SYSTEM\usart -I..\HARDWARE\LED -I..\HARDWARE\KEY -I..\HARDWARE\LCD -I..\HARDWARE\SDRAM -I..\HARDWARE\IIC -I..\HARDWARE\24CXX -I..\HARDWARE\MPU9250 -I..\HARDWARE\DHT11 -I..\HARDWARE\MPU -I..\USMART -I..\DMP\driver\eMPL -I..\DMP\driver\include -I..\DMP\driver\stm32L -I..\DMP\eMPL-hal -I..\DMP\mllite -I..\DMP\mpl -I..\UCOSIII -I..\UCOSIII\UCOS-BSP -I..\UCOSIII\UCOS-CONFIG -I..\UCOSIII\uCOS-III\Source -I..\UCOSIII\uC-CPU\ARM-Cortex-M4\RealView -I..\UCOSIII\uC-LIB\Ports\ARM-Cortex-M4\RealView -I..\UCOSIII\uCOS-III\Ports\ARM-Cortex-M4\Generic\RealView -I..\UCOSIII\uCOS-III\Ports -I..\UCOSIII\uC-LIB -I..\UCOSIII\uC-CPU -I..\HARDWARE\MY_FUNCTION -I..\USER -I..\HARDWARE\CRC -I..\HARDWARE\DMA -I..\HARDWARE\HEART_BEAT -I..\HARDWARE\RECEIVE_ANALYZE -I..\HARDWARE\FEED_BACK -I..\HARDWARE\DATA -I"D:\1111111\32F4\Slam car\实验35 MPU9250九轴传感器实验\USER\RTE" -IF:\Keil_v5\ARM\PACK\Keil\STM32F7xx_DFP\2.7.0 -IF:\Keil_v5\ARM\CMSIS\Include -IF:\Keil_v5\ARM\PACK\Keil\STM32F7xx_DFP\2.7.0\Drivers\CMSIS\Device\ST\STM32F7xx\Include -D__UVISION_VERSION=514 -DSTM32F767xx -DSTM32F767xx -DUSE_HAL_DRIVER -DMPL_LOG_NDEBUG=1 -DEMPL -DMPU9250 -DEMPL_TARGET_STM32F4 --omf_browse=..\obj\lib_math.crf ..\UCOSIII\uC-LIB\lib_math.c]
                          THUMB

                          AREA ||i.Math_Init||, CODE, READONLY, ALIGN=1

                  Math_Init PROC
;;;146    
;;;147    void  Math_Init (void)
000000  b510              PUSH     {r4,lr}
;;;148    {
;;;149        Math_RandSetSeed((RAND_NBR)RAND_SEED_INIT_VAL);             /* See Note #2.                                         */
000002  2001              MOVS     r0,#1
000004  f7fffffe          BL       Math_RandSetSeed
;;;150    }
000008  bd10              POP      {r4,pc}
;;;151    
                          ENDP


                          AREA ||i.Math_Rand||, CODE, READONLY, ALIGN=2

                  Math_Rand PROC
;;;214    
;;;215    RAND_NBR  Math_Rand (void)
000000  b570              PUSH     {r4-r6,lr}
;;;216    {
;;;217        RAND_NBR  seed;
;;;218        RAND_NBR  rand_nbr;
;;;219        CPU_SR_ALLOC();
000002  2600              MOVS     r6,#0
;;;220    
;;;221    
;;;222        CPU_CRITICAL_ENTER();
000004  bf00              NOP      
000006  bf00              NOP      
000008  f7fffffe          BL       CPU_SR_Save
00000c  4606              MOV      r6,r0
00000e  bf00              NOP      
000010  f7fffffe          BL       CPU_IntDisMeasStart
000014  bf00              NOP      
;;;223        seed             = Math_RandSeedCur;
000016  4809              LDR      r0,|L2.60|
000018  6805              LDR      r5,[r0,#0]  ; Math_RandSeedCur
;;;224        rand_nbr         = Math_RandSeed(seed);
00001a  4628              MOV      r0,r5
00001c  f7fffffe          BL       Math_RandSeed
000020  4604              MOV      r4,r0
;;;225        Math_RandSeedCur = rand_nbr;
000022  4806              LDR      r0,|L2.60|
000024  6004              STR      r4,[r0,#0]  ; Math_RandSeedCur
;;;226        CPU_CRITICAL_EXIT();
000026  bf00              NOP      
000028  f7fffffe          BL       CPU_IntDisMeasStop
00002c  bf00              NOP      
00002e  4630              MOV      r0,r6
000030  f7fffffe          BL       CPU_SR_Restore
000034  bf00              NOP      
000036  bf00              NOP      
;;;227    
;;;228        return (rand_nbr);
000038  4620              MOV      r0,r4
;;;229    }
00003a  bd70              POP      {r4-r6,pc}
;;;230    
                          ENDP

                  |L2.60|
                          DCD      Math_RandSeedCur

                          AREA ||i.Math_RandSeed||, CODE, READONLY, ALIGN=2

                  Math_RandSeed PROC
;;;271    
;;;272    RAND_NBR  Math_RandSeed (RAND_NBR  seed)
000000  4601              MOV      r1,r0
;;;273    {
;;;274        RAND_NBR  rand_nbr;
;;;275    
;;;276    
;;;277        rand_nbr = (((RAND_NBR)RAND_LCG_PARAM_A * seed) + (RAND_NBR)RAND_LCG_PARAM_B)  %  ((RAND_NBR)RAND_LCG_PARAM_M + 1u);
000002  f2430239          MOV      r2,#0x3039
000006  4b03              LDR      r3,|L3.20|
000008  fb032201          MLA      r2,r3,r1,r2
00000c  f0224000          BIC      r0,r2,#0x80000000
;;;278    
;;;279        return (rand_nbr);
;;;280    }
000010  4770              BX       lr
;;;281    
                          ENDP

000012  0000              DCW      0x0000
                  |L3.20|
                          DCD      0x41c64e6d

                          AREA ||i.Math_RandSetSeed||, CODE, READONLY, ALIGN=2

                  Math_RandSetSeed PROC
;;;174    
;;;175    void  Math_RandSetSeed (RAND_NBR  seed)
000000  b570              PUSH     {r4-r6,lr}
;;;176    {
000002  4604              MOV      r4,r0
;;;177        CPU_SR_ALLOC();
000004  2500              MOVS     r5,#0
;;;178    
;;;179    
;;;180        CPU_CRITICAL_ENTER();
000006  bf00              NOP      
000008  bf00              NOP      
00000a  f7fffffe          BL       CPU_SR_Save
00000e  4605              MOV      r5,r0
000010  bf00              NOP      
000012  f7fffffe          BL       CPU_IntDisMeasStart
000016  bf00              NOP      
;;;181        Math_RandSeedCur = seed;
000018  4805              LDR      r0,|L4.48|
00001a  6004              STR      r4,[r0,#0]  ; Math_RandSeedCur
;;;182        CPU_CRITICAL_EXIT();
00001c  bf00              NOP      
00001e  f7fffffe          BL       CPU_IntDisMeasStop
000022  bf00              NOP      
000024  4628              MOV      r0,r5
000026  f7fffffe          BL       CPU_SR_Restore
00002a  bf00              NOP      
00002c  bf00              NOP      
;;;183    }
00002e  bd70              POP      {r4-r6,pc}
;;;184    
                          ENDP

                  |L4.48|
                          DCD      Math_RandSeedCur

                          AREA ||.data||, DATA, ALIGN=2

                  Math_RandSeedCur
                          DCD      0x00000000
