; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o..\obj\log_stm32.o --asm_dir=..\OBJ\ --list_dir=..\OBJ\ --depend=..\obj\log_stm32.d --cpu=Cortex-M7.fp.dp --apcs=interwork -O0 --diag_suppress=9931 -I..\CORE -I..\OBJ -I..\USER -I..\HALLIB\STM32F7xx_HAL_Driver\Inc -I..\SYSTEM\delay -I..\SYSTEM\sys -I..\SYSTEM\usart -I..\HARDWARE\LED -I..\HARDWARE\KEY -I..\HARDWARE\LCD -I..\HARDWARE\SDRAM -I..\HARDWARE\IIC -I..\HARDWARE\24CXX -I..\HARDWARE\MPU9250 -I..\HARDWARE\DHT11 -I..\HARDWARE\MPU -I..\USMART -I..\DMP\driver\eMPL -I..\DMP\driver\include -I..\DMP\driver\stm32L -I..\DMP\eMPL-hal -I..\DMP\mllite -I..\DMP\mpl -I..\UCOSIII -I..\UCOSIII\UCOS-BSP -I..\UCOSIII\UCOS-CONFIG -I..\UCOSIII\uCOS-III\Source -I..\UCOSIII\uC-CPU\ARM-Cortex-M4\RealView -I..\UCOSIII\uC-LIB\Ports\ARM-Cortex-M4\RealView -I..\UCOSIII\uCOS-III\Ports\ARM-Cortex-M4\Generic\RealView -I..\UCOSIII\uCOS-III\Ports -I..\UCOSIII\uC-LIB -I..\UCOSIII\uC-CPU -I..\HARDWARE\MY_FUNCTION -I..\USER -I..\HARDWARE\CRC -I..\HARDWARE\DMA -I..\HARDWARE\HEART_BEAT -I..\HARDWARE\RECEIVE_ANALYZE -I..\HARDWARE\FEED_BACK -I..\HARDWARE\DATA -I"D:\1111111\32F4\Slam car\实验35 MPU9250九轴传感器实验\USER\RTE" -IF:\Keil_v5\ARM\PACK\Keil\STM32F7xx_DFP\2.7.0 -IF:\Keil_v5\ARM\CMSIS\Include -IF:\Keil_v5\ARM\PACK\Keil\STM32F7xx_DFP\2.7.0\Drivers\CMSIS\Device\ST\STM32F7xx\Include -D__UVISION_VERSION=514 -DSTM32F767xx -DSTM32F767xx -DUSE_HAL_DRIVER -DMPL_LOG_NDEBUG=1 -DEMPL -DMPU9250 -DEMPL_TARGET_STM32F4 --omf_browse=..\obj\log_stm32.crf ..\DMP\driver\stm32L\log_stm32.c]
                          THUMB

                          AREA ||i._MLPrintLog||, CODE, READONLY, ALIGN=1

                  _MLPrintLog PROC
;;;55      */
;;;56     int _MLPrintLog (int priority, const char* tag, const char* fmt, ...)
000000  b40f              PUSH     {r0-r3}
;;;57     {
000002  e92d45f0          PUSH     {r4-r8,r10,lr}
000006  b0c7              SUB      sp,sp,#0x11c
000008  4606              MOV      r6,r0
00000a  468a              MOV      r10,r1
;;;58         va_list args;
;;;59         int length, ii, i;
;;;60         char buf[BUF_SIZE], out[PACKET_LENGTH], this_length;
;;;61         FILE * noUse;
;;;62         /* This can be modified to exit for unsupported priorities. */
;;;63         switch (priority) {
00000c  2e09              CMP      r6,#9
00000e  d20e              BCS      |L1.46|
000010  e8dff006          TBB      [pc,r6]
000014  05060708          DCB      0x05,0x06,0x07,0x08
000018  090a0b0d          DCB      0x09,0x0a,0x0b,0x0d
00001c  0c00              DCB      0x0c,0x00
;;;64         case MPL_LOG_UNKNOWN:
;;;65         case MPL_LOG_DEFAULT:
00001e  bf00              NOP      
;;;66         case MPL_LOG_VERBOSE:
000020  bf00              NOP      
;;;67         case MPL_LOG_DEBUG:
000022  bf00              NOP      
;;;68         case MPL_LOG_INFO:
000024  bf00              NOP      
;;;69         case MPL_LOG_WARN:
000026  bf00              NOP      
;;;70         case MPL_LOG_ERROR:
000028  bf00              NOP      
;;;71         case MPL_LOG_SILENT:
00002a  bf00              NOP      
;;;72             break;
00002c  e005              B        |L1.58|
                  |L1.46|
;;;73         default:
;;;74             return 0;
00002e  2000              MOVS     r0,#0
                  |L1.48|
;;;75         }
;;;76     
;;;77         va_start(args, fmt);
;;;78     
;;;79         length = vsprintf(buf, fmt, args);
;;;80         if (length <= 0) {
;;;81             va_end(args);
;;;82             return length;
;;;83         }
;;;84     
;;;85         memset(out, 0, PACKET_LENGTH);
;;;86         out[0] = '$';
;;;87         out[1] = PACKET_DEBUG;
;;;88         out[2] = priority;
;;;89         out[21] = '\r';
;;;90         out[22] = '\n';
;;;91         for (ii = 0; ii < length; ii += (PACKET_LENGTH-5)) {
;;;92     #define min(a,b) ((a < b) ? a : b)
;;;93             this_length = min(length-ii, PACKET_LENGTH-5);
;;;94             memset(out+3, 0, 18);
;;;95             memcpy(out+3, buf+ii, this_length);
;;;96             for (i=0; i<PACKET_LENGTH; i++) {
;;;97               fputc(out[i],noUse);
;;;98             }
;;;99         }
;;;100        
;;;101                
;;;102        va_end(args);
;;;103    
;;;104        return 0;
;;;105    }
000030  b047              ADD      sp,sp,#0x11c
000032  e8bd05f0          POP      {r4-r8,r10}
000036  f85dfb14          LDR      pc,[sp],#0x14
                  |L1.58|
00003a  bf00              NOP                            ;72
00003c  a851              ADD      r0,sp,#0x144          ;77
00003e  9046              STR      r0,[sp,#0x118]        ;77
000040  a806              ADD      r0,sp,#0x18           ;79
000042  9a46              LDR      r2,[sp,#0x118]        ;79
000044  9950              LDR      r1,[sp,#0x140]        ;79
000046  f7fffffe          BL       vsprintf
00004a  4604              MOV      r4,r0                 ;79
00004c  2c00              CMP      r4,#0                 ;80
00004e  dc03              BGT      |L1.88|
000050  2000              MOVS     r0,#0                 ;81
000052  9046              STR      r0,[sp,#0x118]        ;81
000054  4620              MOV      r0,r4                 ;82
000056  e7eb              B        |L1.48|
                  |L1.88|
000058  2118              MOVS     r1,#0x18              ;85
00005a  4668              MOV      r0,sp                 ;85
00005c  f7fffffe          BL       __aeabi_memclr4
000060  2024              MOVS     r0,#0x24              ;86
000062  f88d0000          STRB     r0,[sp,#0]            ;86
000066  2001              MOVS     r0,#1                 ;87
000068  f88d0001          STRB     r0,[sp,#1]            ;87
00006c  b2f0              UXTB     r0,r6                 ;88
00006e  f88d0002          STRB     r0,[sp,#2]            ;88
000072  200d              MOVS     r0,#0xd               ;89
000074  f88d0015          STRB     r0,[sp,#0x15]         ;89
000078  200a              MOVS     r0,#0xa               ;90
00007a  f88d0016          STRB     r0,[sp,#0x16]         ;90
00007e  2500              MOVS     r5,#0                 ;91
000080  e01d              B        |L1.190|
                  |L1.130|
000082  1b60              SUBS     r0,r4,r5              ;93
000084  2812              CMP      r0,#0x12              ;93
000086  da01              BGE      |L1.140|
000088  1b60              SUBS     r0,r4,r5              ;93
00008a  e000              B        |L1.142|
                  |L1.140|
00008c  2012              MOVS     r0,#0x12              ;93
                  |L1.142|
00008e  f00008ff          AND      r8,r0,#0xff           ;93
000092  2112              MOVS     r1,#0x12              ;94
000094  f10d0003          ADD      r0,sp,#3              ;94
000098  f7fffffe          BL       __aeabi_memclr
00009c  a806              ADD      r0,sp,#0x18           ;95
00009e  1941              ADDS     r1,r0,r5              ;95
0000a0  4642              MOV      r2,r8                 ;95
0000a2  3815              SUBS     r0,r0,#0x15           ;95
0000a4  f7fffffe          BL       __aeabi_memcpy
0000a8  2700              MOVS     r7,#0                 ;96
0000aa  e005              B        |L1.184|
                  |L1.172|
0000ac  f81d0007          LDRB     r0,[sp,r7]            ;97
0000b0  4649              MOV      r1,r9                 ;97
0000b2  f7fffffe          BL       fputc
0000b6  1c7f              ADDS     r7,r7,#1              ;96
                  |L1.184|
0000b8  2f17              CMP      r7,#0x17              ;96
0000ba  dbf7              BLT      |L1.172|
0000bc  3512              ADDS     r5,r5,#0x12           ;91
                  |L1.190|
0000be  42a5              CMP      r5,r4                 ;91
0000c0  dbdf              BLT      |L1.130|
0000c2  2000              MOVS     r0,#0                 ;102
0000c4  9046              STR      r0,[sp,#0x118]        ;102
0000c6  bf00              NOP                            ;104
0000c8  e7b2              B        |L1.48|
;;;106    
                          ENDP


                          AREA ||i.eMPL_send_data||, CODE, READONLY, ALIGN=1

                  eMPL_send_data PROC
;;;140    
;;;141    void eMPL_send_data(unsigned char type, long *data)
000000  b570              PUSH     {r4-r6,lr}
;;;142    {
000002  b086              SUB      sp,sp,#0x18
000004  4605              MOV      r5,r0
000006  460c              MOV      r4,r1
;;;143        char out[PACKET_LENGTH];
;;;144        int i;
;;;145        FILE *noUse;
;;;146        if (!data)
000008  b90c              CBNZ     r4,|L2.14|
                  |L2.10|
;;;147            return;
;;;148        memset(out, 0, PACKET_LENGTH);
;;;149        out[0] = '$';
;;;150        out[1] = PACKET_DATA;
;;;151        out[2] = type;
;;;152        out[21] = '\r';
;;;153        out[22] = '\n';
;;;154        switch (type) {
;;;155        /* Two bytes per-element. */
;;;156        case PACKET_DATA_ROT:
;;;157            out[3] = (char)(data[0] >> 24);
;;;158            out[4] = (char)(data[0] >> 16);
;;;159            out[5] = (char)(data[1] >> 24);
;;;160            out[6] = (char)(data[1] >> 16);
;;;161            out[7] = (char)(data[2] >> 24);
;;;162            out[8] = (char)(data[2] >> 16);
;;;163            out[9] = (char)(data[3] >> 24);
;;;164            out[10] = (char)(data[3] >> 16);
;;;165            out[11] = (char)(data[4] >> 24);
;;;166            out[12] = (char)(data[4] >> 16);
;;;167            out[13] = (char)(data[5] >> 24);
;;;168            out[14] = (char)(data[5] >> 16);
;;;169            out[15] = (char)(data[6] >> 24);
;;;170            out[16] = (char)(data[6] >> 16);
;;;171            out[17] = (char)(data[7] >> 24);
;;;172            out[18] = (char)(data[7] >> 16);
;;;173            out[19] = (char)(data[8] >> 24);
;;;174            out[20] = (char)(data[8] >> 16);
;;;175            break;
;;;176        /* Four bytes per-element. */
;;;177        /* Four elements. */
;;;178        case PACKET_DATA_QUAT:
;;;179            out[15] = (char)(data[3] >> 24);
;;;180            out[16] = (char)(data[3] >> 16);
;;;181            out[17] = (char)(data[3] >> 8);
;;;182            out[18] = (char)data[3];
;;;183        /* Three elements. */
;;;184        case PACKET_DATA_ACCEL:
;;;185        case PACKET_DATA_GYRO:
;;;186        case PACKET_DATA_COMPASS:
;;;187        case PACKET_DATA_EULER:
;;;188            out[3] = (char)(data[0] >> 24);
;;;189            out[4] = (char)(data[0] >> 16);
;;;190            out[5] = (char)(data[0] >> 8);
;;;191            out[6] = (char)data[0];
;;;192            out[7] = (char)(data[1] >> 24);
;;;193            out[8] = (char)(data[1] >> 16);
;;;194            out[9] = (char)(data[1] >> 8);
;;;195            out[10] = (char)data[1];
;;;196            out[11] = (char)(data[2] >> 24);
;;;197            out[12] = (char)(data[2] >> 16);
;;;198            out[13] = (char)(data[2] >> 8);
;;;199            out[14] = (char)data[2];
;;;200            break;
;;;201        case PACKET_DATA_HEADING:
;;;202            out[3] = (char)(data[0] >> 24);
;;;203            out[4] = (char)(data[0] >> 16);
;;;204            out[5] = (char)(data[0] >> 8);
;;;205            out[6] = (char)data[0];
;;;206            break;
;;;207        default:
;;;208            return;
;;;209        }
;;;210        for (i=0; i<PACKET_LENGTH; i++) {
;;;211          fputc(out[i],noUse);
;;;212        }
;;;213    }
00000a  b006              ADD      sp,sp,#0x18
00000c  bd70              POP      {r4-r6,pc}
                  |L2.14|
00000e  2118              MOVS     r1,#0x18              ;148
000010  4668              MOV      r0,sp                 ;148
000012  f7fffffe          BL       __aeabi_memclr4
000016  2024              MOVS     r0,#0x24              ;149
000018  f88d0000          STRB     r0,[sp,#0]            ;149
00001c  2003              MOVS     r0,#3                 ;150
00001e  f88d0001          STRB     r0,[sp,#1]            ;150
000022  f88d5002          STRB     r5,[sp,#2]            ;151
000026  200d              MOVS     r0,#0xd               ;152
000028  f88d0015          STRB     r0,[sp,#0x15]         ;152
00002c  200a              MOVS     r0,#0xa               ;153
00002e  f88d0016          STRB     r0,[sp,#0x16]         ;153
000032  2d07              CMP      r5,#7                 ;154
000034  d27e              BCS      |L2.308|
000036  e8dff005          TBB      [pc,r5]               ;154
00003a  5d5e              DCB      0x5d,0x5e
00003c  5f4d6004          DCB      0x5f,0x4d,0x60,0x04
000040  9000              DCB      0x90,0x00
000042  6820              LDR      r0,[r4,#0]            ;157
000044  0e00              LSRS     r0,r0,#24             ;157
000046  f88d0003          STRB     r0,[sp,#3]            ;157
00004a  6820              LDR      r0,[r4,#0]            ;158
00004c  0c00              LSRS     r0,r0,#16             ;158
00004e  f88d0004          STRB     r0,[sp,#4]            ;158
000052  6860              LDR      r0,[r4,#4]            ;159
000054  0e00              LSRS     r0,r0,#24             ;159
000056  f88d0005          STRB     r0,[sp,#5]            ;159
00005a  6860              LDR      r0,[r4,#4]            ;160
00005c  0c00              LSRS     r0,r0,#16             ;160
00005e  f88d0006          STRB     r0,[sp,#6]            ;160
000062  68a0              LDR      r0,[r4,#8]            ;161
000064  0e00              LSRS     r0,r0,#24             ;161
000066  f88d0007          STRB     r0,[sp,#7]            ;161
00006a  68a0              LDR      r0,[r4,#8]            ;162
00006c  0c00              LSRS     r0,r0,#16             ;162
00006e  f88d0008          STRB     r0,[sp,#8]            ;162
000072  68e0              LDR      r0,[r4,#0xc]          ;163
000074  0e00              LSRS     r0,r0,#24             ;163
000076  f88d0009          STRB     r0,[sp,#9]            ;163
00007a  68e0              LDR      r0,[r4,#0xc]          ;164
00007c  0c00              LSRS     r0,r0,#16             ;164
00007e  f88d000a          STRB     r0,[sp,#0xa]          ;164
000082  6920              LDR      r0,[r4,#0x10]         ;165
000084  0e00              LSRS     r0,r0,#24             ;165
000086  f88d000b          STRB     r0,[sp,#0xb]          ;165
00008a  6920              LDR      r0,[r4,#0x10]         ;166
00008c  0c00              LSRS     r0,r0,#16             ;166
00008e  f88d000c          STRB     r0,[sp,#0xc]          ;166
000092  6960              LDR      r0,[r4,#0x14]         ;167
000094  0e00              LSRS     r0,r0,#24             ;167
000096  f88d000d          STRB     r0,[sp,#0xd]          ;167
00009a  6960              LDR      r0,[r4,#0x14]         ;168
00009c  0c00              LSRS     r0,r0,#16             ;168
00009e  f88d000e          STRB     r0,[sp,#0xe]          ;168
0000a2  69a0              LDR      r0,[r4,#0x18]         ;169
0000a4  0e00              LSRS     r0,r0,#24             ;169
0000a6  f88d000f          STRB     r0,[sp,#0xf]          ;169
0000aa  69a0              LDR      r0,[r4,#0x18]         ;170
0000ac  0c00              LSRS     r0,r0,#16             ;170
0000ae  f88d0010          STRB     r0,[sp,#0x10]         ;170
0000b2  69e0              LDR      r0,[r4,#0x1c]         ;171
0000b4  0e00              LSRS     r0,r0,#24             ;171
0000b6  f88d0011          STRB     r0,[sp,#0x11]         ;171
0000ba  69e0              LDR      r0,[r4,#0x1c]         ;172
0000bc  0c00              LSRS     r0,r0,#16             ;172
0000be  f88d0012          STRB     r0,[sp,#0x12]         ;172
0000c2  6a20              LDR      r0,[r4,#0x20]         ;173
0000c4  0e00              LSRS     r0,r0,#24             ;173
0000c6  f88d0013          STRB     r0,[sp,#0x13]         ;173
0000ca  6a20              LDR      r0,[r4,#0x20]         ;174
0000cc  0c00              LSRS     r0,r0,#16             ;174
0000ce  f88d0014          STRB     r0,[sp,#0x14]         ;174
0000d2  e053              B        |L2.380|
0000d4  68e0              LDR      r0,[r4,#0xc]          ;179
0000d6  0e00              LSRS     r0,r0,#24             ;179
0000d8  f88d000f          STRB     r0,[sp,#0xf]          ;179
0000dc  68e0              LDR      r0,[r4,#0xc]          ;180
0000de  0c00              LSRS     r0,r0,#16             ;180
0000e0  f88d0010          STRB     r0,[sp,#0x10]         ;180
0000e4  89a0              LDRH     r0,[r4,#0xc]          ;181
0000e6  0a00              LSRS     r0,r0,#8              ;181
0000e8  f88d0011          STRB     r0,[sp,#0x11]         ;181
0000ec  7b20              LDRB     r0,[r4,#0xc]          ;182
0000ee  f88d0012          STRB     r0,[sp,#0x12]         ;182
0000f2  bf00              NOP                            ;184
0000f4  bf00              NOP                            ;185
0000f6  bf00              NOP                            ;186
0000f8  bf00              NOP                            ;187
0000fa  6820              LDR      r0,[r4,#0]            ;188
0000fc  0e00              LSRS     r0,r0,#24             ;188
0000fe  f88d0003          STRB     r0,[sp,#3]            ;188
000102  6820              LDR      r0,[r4,#0]            ;189
000104  0c00              LSRS     r0,r0,#16             ;189
000106  f88d0004          STRB     r0,[sp,#4]            ;189
00010a  8820              LDRH     r0,[r4,#0]            ;190
00010c  0a00              LSRS     r0,r0,#8              ;190
00010e  f88d0005          STRB     r0,[sp,#5]            ;190
000112  7820              LDRB     r0,[r4,#0]            ;191
000114  f88d0006          STRB     r0,[sp,#6]            ;191
000118  6860              LDR      r0,[r4,#4]            ;192
00011a  0e00              LSRS     r0,r0,#24             ;192
00011c  f88d0007          STRB     r0,[sp,#7]            ;192
000120  6860              LDR      r0,[r4,#4]            ;193
000122  0c00              LSRS     r0,r0,#16             ;193
000124  f88d0008          STRB     r0,[sp,#8]            ;193
000128  88a0              LDRH     r0,[r4,#4]            ;194
00012a  0a00              LSRS     r0,r0,#8              ;194
00012c  f88d0009          STRB     r0,[sp,#9]            ;194
000130  7920              LDRB     r0,[r4,#4]            ;195
000132  e000              B        |L2.310|
                  |L2.308|
000134  e021              B        |L2.378|
                  |L2.310|
000136  f88d000a          STRB     r0,[sp,#0xa]          ;195
00013a  68a0              LDR      r0,[r4,#8]            ;196
00013c  0e00              LSRS     r0,r0,#24             ;196
00013e  f88d000b          STRB     r0,[sp,#0xb]          ;196
000142  68a0              LDR      r0,[r4,#8]            ;197
000144  0c00              LSRS     r0,r0,#16             ;197
000146  f88d000c          STRB     r0,[sp,#0xc]          ;197
00014a  8920              LDRH     r0,[r4,#8]            ;198
00014c  0a00              LSRS     r0,r0,#8              ;198
00014e  f88d000d          STRB     r0,[sp,#0xd]          ;198
000152  7a20              LDRB     r0,[r4,#8]            ;199
000154  f88d000e          STRB     r0,[sp,#0xe]          ;199
000158  e010              B        |L2.380|
00015a  6820              LDR      r0,[r4,#0]            ;202
00015c  0e00              LSRS     r0,r0,#24             ;202
00015e  f88d0003          STRB     r0,[sp,#3]            ;202
000162  6820              LDR      r0,[r4,#0]            ;203
000164  0c00              LSRS     r0,r0,#16             ;203
000166  f88d0004          STRB     r0,[sp,#4]            ;203
00016a  8820              LDRH     r0,[r4,#0]            ;204
00016c  0a00              LSRS     r0,r0,#8              ;204
00016e  f88d0005          STRB     r0,[sp,#5]            ;204
000172  7820              LDRB     r0,[r4,#0]            ;205
000174  f88d0006          STRB     r0,[sp,#6]            ;205
000178  e000              B        |L2.380|
                  |L2.378|
00017a  e746              B        |L2.10|
                  |L2.380|
00017c  bf00              NOP                            ;175
00017e  2600              MOVS     r6,#0                 ;210
000180  e005              B        |L2.398|
                  |L2.386|
000182  f81d0006          LDRB     r0,[sp,r6]            ;211
000186  4639              MOV      r1,r7                 ;211
000188  f7fffffe          BL       fputc
00018c  1c76              ADDS     r6,r6,#1              ;210
                  |L2.398|
00018e  2e17              CMP      r6,#0x17              ;210
000190  dbf7              BLT      |L2.386|
000192  bf00              NOP      
000194  e739              B        |L2.10|
;;;214    
                          ENDP


                          AREA ||i.eMPL_send_quat||, CODE, READONLY, ALIGN=1

                  eMPL_send_quat PROC
;;;106    
;;;107    void eMPL_send_quat(long *quat)
000000  b530              PUSH     {r4,r5,lr}
;;;108    {
000002  b087              SUB      sp,sp,#0x1c
000004  4604              MOV      r4,r0
;;;109        char out[PACKET_LENGTH];
;;;110        int i;
;;;111        FILE *noUse;
;;;112        if (!quat)
000006  b90c              CBNZ     r4,|L3.12|
                  |L3.8|
;;;113            return;
;;;114        memset(out, 0, PACKET_LENGTH);
;;;115        out[0] = '$';
;;;116        out[1] = PACKET_QUAT;
;;;117        out[3] = (char)(quat[0] >> 24);
;;;118        out[4] = (char)(quat[0] >> 16);
;;;119        out[5] = (char)(quat[0] >> 8);
;;;120        out[6] = (char)quat[0];
;;;121        out[7] = (char)(quat[1] >> 24);
;;;122        out[8] = (char)(quat[1] >> 16);
;;;123        out[9] = (char)(quat[1] >> 8);
;;;124        out[10] = (char)quat[1];
;;;125        out[11] = (char)(quat[2] >> 24);
;;;126        out[12] = (char)(quat[2] >> 16);
;;;127        out[13] = (char)(quat[2] >> 8);
;;;128        out[14] = (char)quat[2];
;;;129        out[15] = (char)(quat[3] >> 24);
;;;130        out[16] = (char)(quat[3] >> 16);
;;;131        out[17] = (char)(quat[3] >> 8);
;;;132        out[18] = (char)quat[3];
;;;133        out[21] = '\r';
;;;134        out[22] = '\n';
;;;135        
;;;136        for (i=0; i<PACKET_LENGTH; i++) {
;;;137          fputc(out[i],noUse);
;;;138        }
;;;139    }
000008  b007              ADD      sp,sp,#0x1c
00000a  bd30              POP      {r4,r5,pc}
                  |L3.12|
00000c  2118              MOVS     r1,#0x18              ;114
00000e  a801              ADD      r0,sp,#4              ;114
000010  f7fffffe          BL       __aeabi_memclr4
000014  2024              MOVS     r0,#0x24              ;115
000016  f88d0004          STRB     r0,[sp,#4]            ;115
00001a  2002              MOVS     r0,#2                 ;116
00001c  f88d0005          STRB     r0,[sp,#5]            ;116
000020  6820              LDR      r0,[r4,#0]            ;117
000022  0e00              LSRS     r0,r0,#24             ;117
000024  f88d0007          STRB     r0,[sp,#7]            ;117
000028  6820              LDR      r0,[r4,#0]            ;118
00002a  0c00              LSRS     r0,r0,#16             ;118
00002c  f88d0008          STRB     r0,[sp,#8]            ;118
000030  8820              LDRH     r0,[r4,#0]            ;119
000032  0a00              LSRS     r0,r0,#8              ;119
000034  f88d0009          STRB     r0,[sp,#9]            ;119
000038  7820              LDRB     r0,[r4,#0]            ;120
00003a  f88d000a          STRB     r0,[sp,#0xa]          ;120
00003e  6860              LDR      r0,[r4,#4]            ;121
000040  0e00              LSRS     r0,r0,#24             ;121
000042  f88d000b          STRB     r0,[sp,#0xb]          ;121
000046  6860              LDR      r0,[r4,#4]            ;122
000048  0c00              LSRS     r0,r0,#16             ;122
00004a  f88d000c          STRB     r0,[sp,#0xc]          ;122
00004e  88a0              LDRH     r0,[r4,#4]            ;123
000050  0a00              LSRS     r0,r0,#8              ;123
000052  f88d000d          STRB     r0,[sp,#0xd]          ;123
000056  7920              LDRB     r0,[r4,#4]            ;124
000058  f88d000e          STRB     r0,[sp,#0xe]          ;124
00005c  68a0              LDR      r0,[r4,#8]            ;125
00005e  0e00              LSRS     r0,r0,#24             ;125
000060  f88d000f          STRB     r0,[sp,#0xf]          ;125
000064  68a0              LDR      r0,[r4,#8]            ;126
000066  0c00              LSRS     r0,r0,#16             ;126
000068  f88d0010          STRB     r0,[sp,#0x10]         ;126
00006c  8920              LDRH     r0,[r4,#8]            ;127
00006e  0a00              LSRS     r0,r0,#8              ;127
000070  f88d0011          STRB     r0,[sp,#0x11]         ;127
000074  7a20              LDRB     r0,[r4,#8]            ;128
000076  f88d0012          STRB     r0,[sp,#0x12]         ;128
00007a  68e0              LDR      r0,[r4,#0xc]          ;129
00007c  0e00              LSRS     r0,r0,#24             ;129
00007e  f88d0013          STRB     r0,[sp,#0x13]         ;129
000082  68e0              LDR      r0,[r4,#0xc]          ;130
000084  0c00              LSRS     r0,r0,#16             ;130
000086  f88d0014          STRB     r0,[sp,#0x14]         ;130
00008a  89a0              LDRH     r0,[r4,#0xc]          ;131
00008c  0a00              LSRS     r0,r0,#8              ;131
00008e  f88d0015          STRB     r0,[sp,#0x15]         ;131
000092  7b20              LDRB     r0,[r4,#0xc]          ;132
000094  f88d0016          STRB     r0,[sp,#0x16]         ;132
000098  200d              MOVS     r0,#0xd               ;133
00009a  f88d0019          STRB     r0,[sp,#0x19]         ;133
00009e  200a              MOVS     r0,#0xa               ;134
0000a0  f88d001a          STRB     r0,[sp,#0x1a]         ;134
0000a4  2500              MOVS     r5,#0                 ;136
0000a6  e005              B        |L3.180|
                  |L3.168|
0000a8  a901              ADD      r1,sp,#4              ;137
0000aa  5d48              LDRB     r0,[r1,r5]            ;137
0000ac  4631              MOV      r1,r6                 ;137
0000ae  f7fffffe          BL       fputc
0000b2  1c6d              ADDS     r5,r5,#1              ;136
                  |L3.180|
0000b4  2d17              CMP      r5,#0x17              ;136
0000b6  dbf7              BLT      |L3.168|
0000b8  bf00              NOP      
0000ba  e7a5              B        |L3.8|
;;;140    
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\DMP\\driver\\stm32L\\log_stm32.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___11_log_stm32_c_5865818b____REV16|
#line 388 "..\\CORE\\cmsis_armcc.h"
|__asm___11_log_stm32_c_5865818b____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___11_log_stm32_c_5865818b____REVSH|
#line 402
|__asm___11_log_stm32_c_5865818b____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___11_log_stm32_c_5865818b____RRX|
#line 587
|__asm___11_log_stm32_c_5865818b____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
