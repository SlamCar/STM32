; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o..\obj\usmart.o --asm_dir=..\OBJ\ --list_dir=..\OBJ\ --depend=..\obj\usmart.d --cpu=Cortex-M7.fp.dp --apcs=interwork -O0 --diag_suppress=9931 -I..\CORE -I..\OBJ -I..\USER -I..\HALLIB\STM32F7xx_HAL_Driver\Inc -I..\SYSTEM\delay -I..\SYSTEM\sys -I..\SYSTEM\usart -I..\HARDWARE\LED -I..\HARDWARE\KEY -I..\HARDWARE\LCD -I..\HARDWARE\SDRAM -I..\HARDWARE\IIC -I..\HARDWARE\24CXX -I..\HARDWARE\MPU9250 -I..\HARDWARE\DHT11 -I..\HARDWARE\MPU -I..\USMART -I..\DMP\driver\eMPL -I..\DMP\driver\include -I..\DMP\driver\stm32L -I..\DMP\eMPL-hal -I..\DMP\mllite -I..\DMP\mpl -I..\UCOSIII -I..\UCOSIII\UCOS-BSP -I..\UCOSIII\UCOS-CONFIG -I..\UCOSIII\uCOS-III\Source -I..\UCOSIII\uC-CPU\ARM-Cortex-M4\RealView -I..\UCOSIII\uC-LIB\Ports\ARM-Cortex-M4\RealView -I..\UCOSIII\uCOS-III\Ports\ARM-Cortex-M4\Generic\RealView -I..\UCOSIII\uCOS-III\Ports -I..\UCOSIII\uC-LIB -I..\UCOSIII\uC-CPU -I..\HARDWARE\MY_FUNCTION -I..\USER -I..\HARDWARE\CRC -I..\HARDWARE\DMA -I..\HARDWARE\HEART_BEAT -I..\HARDWARE\RECEIVE_ANALYZE -I..\HARDWARE\FEED_BACK -I..\HARDWARE\DATA -I"D:\1111111\32F4\Slam car\实验35 MPU9250九轴传感器实验\USER\RTE" -IF:\Keil_v5\ARM\PACK\Keil\STM32F7xx_DFP\2.7.0 -IF:\Keil_v5\ARM\CMSIS\Include -IF:\Keil_v5\ARM\PACK\Keil\STM32F7xx_DFP\2.7.0\Drivers\CMSIS\Device\ST\STM32F7xx\Include -D__UVISION_VERSION=514 -DSTM32F767xx -DSTM32F767xx -DUSE_HAL_DRIVER -DMPL_LOG_NDEBUG=1 -DEMPL -DMPU9250 -DEMPL_TARGET_STM32F4 --omf_browse=..\obj\usmart.crf ..\USMART\usmart.c]
                          THUMB

                          AREA ||i.TIM4_IRQHandler||, CODE, READONLY, ALIGN=2

                  TIM4_IRQHandler PROC
;;;230    //定时器4中断服务程序	 
;;;231    void TIM4_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;232    { 		    		  			       
;;;233        if(__HAL_TIM_GET_IT_SOURCE(&TIM4_Handler,TIM_IT_UPDATE)==SET)//溢出中断
000002  480e              LDR      r0,|L1.60|
000004  6800              LDR      r0,[r0,#0]  ; TIM4_Handler
000006  68c0              LDR      r0,[r0,#0xc]
000008  f0000001          AND      r0,r0,#1
00000c  b178              CBZ      r0,|L1.46|
;;;234        {
;;;235            usmart_dev.scan();	//执行usmart扫描
00000e  490c              LDR      r1,|L1.64|
000010  6908              LDR      r0,[r1,#0x10]  ; usmart_dev
000012  4780              BLX      r0
;;;236            __HAL_TIM_SET_COUNTER(&TIM4_Handler,0);;    //清空定时器的CNT
000014  2000              MOVS     r0,#0
000016  4909              LDR      r1,|L1.60|
000018  6809              LDR      r1,[r1,#0]  ; TIM4_Handler
00001a  6248              STR      r0,[r1,#0x24]
;;;237            __HAL_TIM_SET_AUTORELOAD(&TIM4_Handler,100);//恢复原来的设置
00001c  bf00              NOP      
00001e  2064              MOVS     r0,#0x64
000020  4906              LDR      r1,|L1.60|
000022  6809              LDR      r1,[r1,#0]  ; TIM4_Handler
000024  62c8              STR      r0,[r1,#0x2c]
000026  2164              MOVS     r1,#0x64
000028  4804              LDR      r0,|L1.60|
00002a  60c1              STR      r1,[r0,#0xc]
00002c  bf00              NOP      
                  |L1.46|
;;;238        }
;;;239        __HAL_TIM_CLEAR_IT(&TIM4_Handler, TIM_IT_UPDATE);//清除中断标志位
00002e  f06f0001          MVN      r0,#1
000032  4902              LDR      r1,|L1.60|
000034  6809              LDR      r1,[r1,#0]  ; TIM4_Handler
000036  6108              STR      r0,[r1,#0x10]
;;;240    }
000038  bd10              POP      {r4,pc}
;;;241    
                          ENDP

00003a  0000              DCW      0x0000
                  |L1.60|
                          DCD      TIM4_Handler
                  |L1.64|
                          DCD      usmart_dev

                          AREA ||i.Timer4_Init||, CODE, READONLY, ALIGN=2

                  Timer4_Init PROC
;;;242    //使能定时器4,使能中断.
;;;243    void Timer4_Init(u16 arr,u16 psc)
000000  b538              PUSH     {r3-r5,lr}
;;;244    { 
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;245        //定时器4
;;;246        __HAL_RCC_TIM4_CLK_ENABLE();
000006  bf00              NOP      
000008  4811              LDR      r0,|L2.80|
00000a  6800              LDR      r0,[r0,#0]
00000c  f0400004          ORR      r0,r0,#4
000010  490f              LDR      r1,|L2.80|
000012  6008              STR      r0,[r1,#0]
000014  4608              MOV      r0,r1
000016  6800              LDR      r0,[r0,#0]
000018  f0000004          AND      r0,r0,#4
00001c  9000              STR      r0,[sp,#0]
00001e  bf00              NOP      
000020  bf00              NOP      
;;;247        HAL_NVIC_SetPriority(TIM4_IRQn,3,3);    //设置中断优先级，抢占优先级3，子优先级3
000022  2203              MOVS     r2,#3
000024  4611              MOV      r1,r2
000026  201e              MOVS     r0,#0x1e
000028  f7fffffe          BL       HAL_NVIC_SetPriority
;;;248        HAL_NVIC_EnableIRQ(TIM4_IRQn);          //开启ITM4中断    
00002c  201e              MOVS     r0,#0x1e
00002e  f7fffffe          BL       HAL_NVIC_EnableIRQ
;;;249        
;;;250        TIM4_Handler.Instance=TIM4;                          //通用定时器4
000032  4808              LDR      r0,|L2.84|
000034  4908              LDR      r1,|L2.88|
000036  6008              STR      r0,[r1,#0]  ; TIM4_Handler
;;;251        TIM4_Handler.Init.Prescaler=psc;                     //分频
000038  4608              MOV      r0,r1
00003a  6045              STR      r5,[r0,#4]  ; TIM4_Handler
;;;252        TIM4_Handler.Init.CounterMode=TIM_COUNTERMODE_UP;    //向上计数器
00003c  2100              MOVS     r1,#0
00003e  6081              STR      r1,[r0,#8]
;;;253        TIM4_Handler.Init.Period=arr;                        //自动装载值
000040  60c4              STR      r4,[r0,#0xc]
;;;254        TIM4_Handler.Init.ClockDivision=TIM_CLOCKDIVISION_DIV1;
000042  6101              STR      r1,[r0,#0x10]
;;;255        HAL_TIM_Base_Init(&TIM4_Handler);
000044  f7fffffe          BL       HAL_TIM_Base_Init
;;;256        HAL_TIM_Base_Start_IT(&TIM4_Handler); //使能定时器4和定时器4中断 					 
000048  4803              LDR      r0,|L2.88|
00004a  f7fffffe          BL       HAL_TIM_Base_Start_IT
;;;257    }
00004e  bd38              POP      {r3-r5,pc}
;;;258     
                          ENDP

                  |L2.80|
                          DCD      0x40023840
                  |L2.84|
                          DCD      0x40000800
                  |L2.88|
                          DCD      TIM4_Handler

                          AREA ||i.read_addr||, CODE, READONLY, ALIGN=1

                  read_addr PROC
;;;431    //读取指定地址的值		 
;;;432    u32 read_addr(u32 addr)
000000  4601              MOV      r1,r0
;;;433    {
;;;434    	return *(u32*)addr;//	
000002  6808              LDR      r0,[r1,#0]
;;;435    }
000004  4770              BX       lr
;;;436    //在指定地址写入指定的值		 
                          ENDP


                          AREA ||i.usmart_cmd_rec||, CODE, READONLY, ALIGN=2

                  usmart_cmd_rec PROC
;;;273    //返回值:0,识别成功;其他,错误代码.
;;;274    u8 usmart_cmd_rec(u8*str) 
000000  b530              PUSH     {r4,r5,lr}
;;;275    {
000002  b095              SUB      sp,sp,#0x54
000004  4605              MOV      r5,r0
;;;276    	u8 sta,i,rval;//状态	 
;;;277    	u8 rpnum,spnum;
;;;278    	u8 rfname[MAX_FNAME_LEN];//暂存空间,用于存放接收到的函数名  
;;;279    	u8 sfname[MAX_FNAME_LEN];//存放本地函数名
;;;280    	sta=usmart_get_fname(str,rfname,&rpnum,&rval);//得到接收到的数据的函数名及参数个数	  
000006  ab13              ADD      r3,sp,#0x4c
000008  aa12              ADD      r2,sp,#0x48
00000a  a909              ADD      r1,sp,#0x24
00000c  4628              MOV      r0,r5
00000e  f7fffffe          BL       usmart_get_fname
000012  4604              MOV      r4,r0
;;;281    	if(sta)return sta;//错误
000014  b114              CBZ      r4,|L4.28|
000016  4620              MOV      r0,r4
                  |L4.24|
;;;282    	for(i=0;i<usmart_dev.fnum;i++)
;;;283    	{
;;;284    		sta=usmart_get_fname((u8*)usmart_dev.funs[i].name,sfname,&spnum,&rval);//得到本地函数名及参数个数
;;;285    		if(sta)return sta;//本地解析有误	  
;;;286    		if(usmart_strcmp(sfname,rfname)==0)//相等
;;;287    		{
;;;288    			if(spnum>rpnum)return USMART_PARMERR;//参数错误(输入参数比源函数参数少)
;;;289    			usmart_dev.id=i;//记录函数ID.
;;;290    			break;//跳出.
;;;291    		}	
;;;292    	}
;;;293    	if(i==usmart_dev.fnum)return USMART_NOFUNCFIND;	//未找到匹配的函数
;;;294     	sta=usmart_get_fparam(str,&i);					//得到函数参数个数	
;;;295    	if(sta)return sta;								//返回错误
;;;296    	usmart_dev.pnum=i;								//参数个数记录
;;;297        return USMART_OK;
;;;298    }
000018  b015              ADD      sp,sp,#0x54
00001a  bd30              POP      {r4,r5,pc}
                  |L4.28|
00001c  2000              MOVS     r0,#0                 ;282
00001e  9014              STR      r0,[sp,#0x50]         ;282
000020  e026              B        |L4.112|
                  |L4.34|
000022  4922              LDR      r1,|L4.172|
000024  6809              LDR      r1,[r1,#0]            ;284  ; usmart_dev
000026  f89d2050          LDRB     r2,[sp,#0x50]         ;284
00002a  eb0101c2          ADD      r1,r1,r2,LSL #3       ;284
00002e  ab13              ADD      r3,sp,#0x4c           ;284
000030  aa11              ADD      r2,sp,#0x44           ;284
000032  6848              LDR      r0,[r1,#4]            ;284
000034  a901              ADD      r1,sp,#4              ;284
000036  f7fffffe          BL       usmart_get_fname
00003a  4604              MOV      r4,r0                 ;284
00003c  b10c              CBZ      r4,|L4.66|
00003e  4620              MOV      r0,r4                 ;285
000040  e7ea              B        |L4.24|
                  |L4.66|
000042  a909              ADD      r1,sp,#0x24           ;286
000044  a801              ADD      r0,sp,#4              ;286
000046  f7fffffe          BL       usmart_strcmp
00004a  b960              CBNZ     r0,|L4.102|
00004c  f89d0044          LDRB     r0,[sp,#0x44]         ;288
000050  f89d1048          LDRB     r1,[sp,#0x48]         ;288
000054  4288              CMP      r0,r1                 ;288
000056  dd01              BLE      |L4.92|
000058  2002              MOVS     r0,#2                 ;288
00005a  e7dd              B        |L4.24|
                  |L4.92|
00005c  f89d0050          LDRB     r0,[sp,#0x50]         ;289
000060  4912              LDR      r1,|L4.172|
000062  7588              STRB     r0,[r1,#0x16]         ;289
000064  e00a              B        |L4.124|
                  |L4.102|
000066  f89d0050          LDRB     r0,[sp,#0x50]         ;282
00006a  1c40              ADDS     r0,r0,#1              ;282
00006c  b2c0              UXTB     r0,r0                 ;282
00006e  9014              STR      r0,[sp,#0x50]         ;282
                  |L4.112|
000070  480e              LDR      r0,|L4.172|
000072  7d00              LDRB     r0,[r0,#0x14]         ;282  ; usmart_dev
000074  f89d1050          LDRB     r1,[sp,#0x50]         ;282
000078  4288              CMP      r0,r1                 ;282
00007a  dcd2              BGT      |L4.34|
                  |L4.124|
00007c  bf00              NOP                            ;290
00007e  480b              LDR      r0,|L4.172|
000080  7d00              LDRB     r0,[r0,#0x14]         ;293  ; usmart_dev
000082  f89d1050          LDRB     r1,[sp,#0x50]         ;293
000086  4288              CMP      r0,r1                 ;293
000088  d101              BNE      |L4.142|
00008a  2004              MOVS     r0,#4                 ;293
00008c  e7c4              B        |L4.24|
                  |L4.142|
00008e  a914              ADD      r1,sp,#0x50           ;294
000090  4628              MOV      r0,r5                 ;294
000092  f7fffffe          BL       usmart_get_fparam
000096  4604              MOV      r4,r0                 ;294
000098  b10c              CBZ      r4,|L4.158|
00009a  4620              MOV      r0,r4                 ;295
00009c  e7bc              B        |L4.24|
                  |L4.158|
00009e  f89d0050          LDRB     r0,[sp,#0x50]         ;296
0000a2  4902              LDR      r1,|L4.172|
0000a4  7548              STRB     r0,[r1,#0x15]         ;296
0000a6  2000              MOVS     r0,#0                 ;297
0000a8  e7b6              B        |L4.24|
;;;299    //usamrt执行函数
                          ENDP

0000aa  0000              DCW      0x0000
                  |L4.172|
                          DCD      usmart_dev

                          AREA ||i.usmart_exe||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                          REQUIRE _printf_c
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_sizespec
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_x
                          REQUIRE _printf_longlong_hex
                          REQUIRE _printf_u
                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_widthprec
                  usmart_exe PROC
;;;303    //当所执行的函数没有返回值的时候,所打印的返回值是一个无意义的数据.
;;;304    void usmart_exe(void)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;305    {
000004  b09a              SUB      sp,sp,#0x68
;;;306    	u8 id,i;
;;;307    	u32 res;		   
;;;308    	u32 temp[MAX_PARM];//参数转换,使之支持了字符串 
;;;309    	u8 sfname[MAX_FNAME_LEN];//存放本地函数名
;;;310    	u8 pnum,rval;
;;;311    	id=usmart_dev.id;
000006  489c              LDR      r0,|L5.632|
000008  7d84              LDRB     r4,[r0,#0x16]  ; usmart_dev
;;;312    	if(id>=usmart_dev.fnum)return;//不执行.
00000a  7d00              LDRB     r0,[r0,#0x14]  ; usmart_dev
00000c  42a0              CMP      r0,r4
00000e  dc02              BGT      |L5.22|
                  |L5.16|
;;;313    	usmart_get_fname((u8*)usmart_dev.funs[id].name,sfname,&pnum,&rval);//得到本地函数名,及参数个数 
;;;314    	printf("\r\n%s(",sfname);//输出正要执行的函数名
;;;315    	for(i=0;i<pnum;i++)//输出参数
;;;316    	{
;;;317    		if(usmart_dev.parmtype&(1<<i))//参数是字符串
;;;318    		{
;;;319    			printf("%c",'"');			 
;;;320    			printf("%s",usmart_dev.parm+usmart_get_parmpos(i));
;;;321    			printf("%c",'"');
;;;322    			temp[i]=(u32)&(usmart_dev.parm[usmart_get_parmpos(i)]);
;;;323    		}else						  //参数是数字
;;;324    		{
;;;325    			temp[i]=*(u32*)(usmart_dev.parm+usmart_get_parmpos(i));
;;;326    			if(usmart_dev.sptype==SP_TYPE_DEC)printf("%ld",temp[i]);//10进制参数显示
;;;327    			else printf("0X%X",temp[i]);//16进制参数显示 	   
;;;328    		}
;;;329    		if(i!=pnum-1)printf(",");
;;;330    	}
;;;331    	printf(")");
;;;332    #if USMART_ENTIMX_SCAN==1
;;;333    	usmart_reset_runtime();	//计时器清零,开始计时
;;;334    #endif
;;;335    	switch(usmart_dev.pnum)
;;;336    	{
;;;337    		case 0://无参数(void类型)											  
;;;338    			res=(*(u32(*)())usmart_dev.funs[id].func)();
;;;339    			break;
;;;340    	    case 1://有1个参数
;;;341    			res=(*(u32(*)())usmart_dev.funs[id].func)(temp[0]);
;;;342    			break;
;;;343    	    case 2://有2个参数
;;;344    			res=(*(u32(*)())usmart_dev.funs[id].func)(temp[0],temp[1]);
;;;345    			break;
;;;346    	    case 3://有3个参数
;;;347    			res=(*(u32(*)())usmart_dev.funs[id].func)(temp[0],temp[1],temp[2]);
;;;348    			break;
;;;349    	    case 4://有4个参数
;;;350    			res=(*(u32(*)())usmart_dev.funs[id].func)(temp[0],temp[1],temp[2],temp[3]);
;;;351    			break;
;;;352    	    case 5://有5个参数
;;;353    			res=(*(u32(*)())usmart_dev.funs[id].func)(temp[0],temp[1],temp[2],temp[3],temp[4]);
;;;354    			break;
;;;355    	    case 6://有6个参数
;;;356    			res=(*(u32(*)())usmart_dev.funs[id].func)(temp[0],temp[1],temp[2],temp[3],temp[4],\
;;;357    			temp[5]);
;;;358    			break;
;;;359    	    case 7://有7个参数
;;;360    			res=(*(u32(*)())usmart_dev.funs[id].func)(temp[0],temp[1],temp[2],temp[3],temp[4],\
;;;361    			temp[5],temp[6]);
;;;362    			break;
;;;363    	    case 8://有8个参数
;;;364    			res=(*(u32(*)())usmart_dev.funs[id].func)(temp[0],temp[1],temp[2],temp[3],temp[4],\
;;;365    			temp[5],temp[6],temp[7]);
;;;366    			break;
;;;367    	    case 9://有9个参数
;;;368    			res=(*(u32(*)())usmart_dev.funs[id].func)(temp[0],temp[1],temp[2],temp[3],temp[4],\
;;;369    			temp[5],temp[6],temp[7],temp[8]);
;;;370    			break;
;;;371    	    case 10://有10个参数
;;;372    			res=(*(u32(*)())usmart_dev.funs[id].func)(temp[0],temp[1],temp[2],temp[3],temp[4],\
;;;373    			temp[5],temp[6],temp[7],temp[8],temp[9]);
;;;374    			break;
;;;375    	}
;;;376    #if USMART_ENTIMX_SCAN==1
;;;377    	usmart_get_runtime();//获取函数执行时间
;;;378    #endif
;;;379    	if(rval==1)//需要返回值.
;;;380    	{
;;;381    		if(usmart_dev.sptype==SP_TYPE_DEC)printf("=%lu;\r\n",res);//输出执行结果(10进制参数显示)
;;;382    		else printf("=0X%X;\r\n",res);//输出执行结果(16进制参数显示)	   
;;;383    	}else printf(";\r\n");		//不需要返回值,直接输出结束
;;;384    	if(usmart_dev.runtimeflag)	//需要显示函数执行时间
;;;385    	{ 
;;;386    		printf("Function Run Time:%d.%1dms\r\n",usmart_dev.runtime/10,usmart_dev.runtime%10);//打印函数执行时间 
;;;387    	}	
;;;388    }
000010  b01a              ADD      sp,sp,#0x68
000012  e8bd81f0          POP      {r4-r8,pc}
                  |L5.22|
000016  4998              LDR      r1,|L5.632|
000018  6809              LDR      r1,[r1,#0]            ;313  ; usmart_dev
00001a  eb0101c4          ADD      r1,r1,r4,LSL #3       ;313
00001e  ab06              ADD      r3,sp,#0x18           ;313
000020  aa07              ADD      r2,sp,#0x1c           ;313
000022  6848              LDR      r0,[r1,#4]            ;313
000024  a908              ADD      r1,sp,#0x20           ;313
000026  f7fffffe          BL       usmart_get_fname
00002a  a908              ADD      r1,sp,#0x20           ;314
00002c  a093              ADR      r0,|L5.636|
00002e  f7fffffe          BL       __2printf
000032  2600              MOVS     r6,#0                 ;315
000034  e044              B        |L5.192|
                  |L5.54|
000036  4890              LDR      r0,|L5.632|
000038  8b00              LDRH     r0,[r0,#0x18]         ;317  ; usmart_dev
00003a  2101              MOVS     r1,#1                 ;317
00003c  40b1              LSLS     r1,r1,r6              ;317
00003e  4008              ANDS     r0,r0,r1              ;317
000040  b1d8              CBZ      r0,|L5.122|
000042  2122              MOVS     r1,#0x22              ;319
000044  a08f              ADR      r0,|L5.644|
000046  f7fffffe          BL       __2printf
00004a  4630              MOV      r0,r6                 ;320
00004c  f7fffffe          BL       usmart_get_parmpos
000050  4989              LDR      r1,|L5.632|
000052  3124              ADDS     r1,r1,#0x24           ;320
000054  1847              ADDS     r7,r0,r1              ;320
000056  4639              MOV      r1,r7                 ;320
000058  a08b              ADR      r0,|L5.648|
00005a  f7fffffe          BL       __2printf
00005e  2122              MOVS     r1,#0x22              ;321
000060  a088              ADR      r0,|L5.644|
000062  f7fffffe          BL       __2printf
000066  4630              MOV      r0,r6                 ;322
000068  f7fffffe          BL       usmart_get_parmpos
00006c  4982              LDR      r1,|L5.632|
00006e  3124              ADDS     r1,r1,#0x24           ;322
000070  4408              ADD      r0,r0,r1              ;322
000072  a910              ADD      r1,sp,#0x40           ;322
000074  f8410026          STR      r0,[r1,r6,LSL #2]     ;322
000078  e018              B        |L5.172|
                  |L5.122|
00007a  4630              MOV      r0,r6                 ;325
00007c  f7fffffe          BL       usmart_get_parmpos
000080  497d              LDR      r1,|L5.632|
000082  3124              ADDS     r1,r1,#0x24           ;325
000084  5808              LDR      r0,[r1,r0]            ;325
000086  a910              ADD      r1,sp,#0x40           ;325
000088  f8410026          STR      r0,[r1,r6,LSL #2]     ;325
00008c  487a              LDR      r0,|L5.632|
00008e  7dc0              LDRB     r0,[r0,#0x17]         ;326  ; usmart_dev
000090  b930              CBNZ     r0,|L5.160|
000092  a810              ADD      r0,sp,#0x40           ;326
000094  f8501026          LDR      r1,[r0,r6,LSL #2]     ;326
000098  a07c              ADR      r0,|L5.652|
00009a  f7fffffe          BL       __2printf
00009e  e005              B        |L5.172|
                  |L5.160|
0000a0  a810              ADD      r0,sp,#0x40           ;327
0000a2  f8501026          LDR      r1,[r0,r6,LSL #2]     ;327
0000a6  a07a              ADR      r0,|L5.656|
0000a8  f7fffffe          BL       __2printf
                  |L5.172|
0000ac  f89d001c          LDRB     r0,[sp,#0x1c]         ;329
0000b0  1e40              SUBS     r0,r0,#1              ;329
0000b2  42b0              CMP      r0,r6                 ;329
0000b4  d002              BEQ      |L5.188|
0000b6  a078              ADR      r0,|L5.664|
0000b8  f7fffffe          BL       __2printf
                  |L5.188|
0000bc  1c70              ADDS     r0,r6,#1              ;315
0000be  b2c6              UXTB     r6,r0                 ;315
                  |L5.192|
0000c0  f89d001c          LDRB     r0,[sp,#0x1c]         ;315
0000c4  4286              CMP      r6,r0                 ;315
0000c6  dbb6              BLT      |L5.54|
0000c8  a074              ADR      r0,|L5.668|
0000ca  f7fffffe          BL       __2printf
0000ce  f7fffffe          BL       usmart_reset_runtime
0000d2  4869              LDR      r0,|L5.632|
0000d4  7d40              LDRB     r0,[r0,#0x15]         ;335  ; usmart_dev
0000d6  280b              CMP      r0,#0xb               ;335
0000d8  d20d              BCS      |L5.246|
0000da  e8dff000          TBB      [pc,r0]               ;335
0000de  060d              DCB      0x06,0x0d
0000e0  151e2732          DCB      0x15,0x1e,0x27,0x32
0000e4  3f4e5f72          DCB      0x3f,0x4e,0x5f,0x72
0000e8  8700              DCB      0x87,0x00
0000ea  4963              LDR      r1,|L5.632|
0000ec  6809              LDR      r1,[r1,#0]            ;338  ; usmart_dev
0000ee  f8510034          LDR      r0,[r1,r4,LSL #3]     ;338
0000f2  4780              BLX      r0                    ;338
0000f4  4605              MOV      r5,r0                 ;338
                  |L5.246|
0000f6  e090              B        |L5.538|
0000f8  4a5f              LDR      r2,|L5.632|
0000fa  6812              LDR      r2,[r2,#0]            ;341  ; usmart_dev
0000fc  f8521034          LDR      r1,[r2,r4,LSL #3]     ;341
000100  9810              LDR      r0,[sp,#0x40]         ;341
000102  4788              BLX      r1                    ;341
000104  4605              MOV      r5,r0                 ;341
000106  e088              B        |L5.538|
000108  4b5b              LDR      r3,|L5.632|
00010a  681b              LDR      r3,[r3,#0]            ;344  ; usmart_dev
00010c  f8532034          LDR      r2,[r3,r4,LSL #3]     ;344
000110  e9dd0110          LDRD     r0,r1,[sp,#0x40]      ;344
000114  4790              BLX      r2                    ;344
000116  4605              MOV      r5,r0                 ;344
000118  e07f              B        |L5.538|
00011a  4f57              LDR      r7,|L5.632|
00011c  683f              LDR      r7,[r7,#0]            ;347  ; usmart_dev
00011e  f8573034          LDR      r3,[r7,r4,LSL #3]     ;347
000122  a810              ADD      r0,sp,#0x40           ;347
000124  c807              LDM      r0,{r0-r2}            ;347
000126  4798              BLX      r3                    ;347
000128  4605              MOV      r5,r0                 ;347
00012a  e076              B        |L5.538|
00012c  f8dfc148          LDR      r12,|L5.632|
000130  f8dcc000          LDR      r12,[r12,#0]          ;350  ; usmart_dev
000134  f85c7034          LDR      r7,[r12,r4,LSL #3]    ;350
000138  a810              ADD      r0,sp,#0x40           ;350
00013a  c80f              LDM      r0,{r0-r3}            ;350
00013c  47b8              BLX      r7                    ;350
00013e  4605              MOV      r5,r0                 ;350
000140  e06b              B        |L5.538|
000142  9814              LDR      r0,[sp,#0x50]         ;353
000144  f8dfc130          LDR      r12,|L5.632|
000148  9000              STR      r0,[sp,#0]            ;353
00014a  f8dcc000          LDR      r12,[r12,#0]          ;353  ; usmart_dev
00014e  f85c7034          LDR      r7,[r12,r4,LSL #3]    ;353
000152  a810              ADD      r0,sp,#0x40           ;353
000154  c80f              LDM      r0,{r0-r3}            ;353
000156  47b8              BLX      r7                    ;353
000158  4605              MOV      r5,r0                 ;353
00015a  e05e              B        |L5.538|
00015c  e9dd0114          LDRD     r0,r1,[sp,#0x50]      ;356
000160  f8dfc114          LDR      r12,|L5.632|
000164  e9cd0100          STRD     r0,r1,[sp,#0]         ;356
000168  f8dcc000          LDR      r12,[r12,#0]          ;356  ; usmart_dev
00016c  f85c7034          LDR      r7,[r12,r4,LSL #3]    ;356
000170  a810              ADD      r0,sp,#0x40           ;356
000172  c80f              LDM      r0,{r0-r3}            ;356
000174  47b8              BLX      r7                    ;356
000176  4605              MOV      r5,r0                 ;356
000178  e04f              B        |L5.538|
00017a  e9dd1214          LDRD     r1,r2,[sp,#0x50]      ;360
00017e  9816              LDR      r0,[sp,#0x58]         ;360
000180  f8dfc0f4          LDR      r12,|L5.632|
000184  e9cd1200          STRD     r1,r2,[sp,#0]         ;360
000188  9002              STR      r0,[sp,#8]            ;360
00018a  f8dcc000          LDR      r12,[r12,#0]          ;360  ; usmart_dev
00018e  f85c7034          LDR      r7,[r12,r4,LSL #3]    ;360
000192  a810              ADD      r0,sp,#0x40           ;360
000194  c80f              LDM      r0,{r0-r3}            ;360
000196  47b8              BLX      r7                    ;360
000198  4605              MOV      r5,r0                 ;360
00019a  e03e              B        |L5.538|
00019c  e9dd2314          LDRD     r2,r3,[sp,#0x50]      ;364
0001a0  e9dd1016          LDRD     r1,r0,[sp,#0x58]      ;364
0001a4  f8dfc0d0          LDR      r12,|L5.632|
0001a8  e9cd2300          STRD     r2,r3,[sp,#0]         ;364
0001ac  e9cd1002          STRD     r1,r0,[sp,#8]         ;364
0001b0  f8dcc000          LDR      r12,[r12,#0]          ;364  ; usmart_dev
0001b4  f85c7034          LDR      r7,[r12,r4,LSL #3]    ;364
0001b8  a810              ADD      r0,sp,#0x40           ;364
0001ba  c80f              LDM      r0,{r0-r3}            ;364
0001bc  47b8              BLX      r7                    ;364
0001be  4605              MOV      r5,r0                 ;364
0001c0  e02b              B        |L5.538|
0001c2  e9dd2315          LDRD     r2,r3,[sp,#0x54]      ;368
0001c6  e9dd1017          LDRD     r1,r0,[sp,#0x5c]      ;368
0001ca  e9cd2301          STRD     r2,r3,[sp,#4]         ;368
0001ce  e9cd1003          STRD     r1,r0,[sp,#0xc]       ;368
0001d2  9814              LDR      r0,[sp,#0x50]         ;368
0001d4  f8dfc0a0          LDR      r12,|L5.632|
0001d8  9000              STR      r0,[sp,#0]            ;368
0001da  f8dcc000          LDR      r12,[r12,#0]          ;368  ; usmart_dev
0001de  f85c7034          LDR      r7,[r12,r4,LSL #3]    ;368
0001e2  a810              ADD      r0,sp,#0x40           ;368
0001e4  c80f              LDM      r0,{r0-r3}            ;368
0001e6  47b8              BLX      r7                    ;368
0001e8  4605              MOV      r5,r0                 ;368
0001ea  e016              B        |L5.538|
0001ec  e9dd2316          LDRD     r2,r3,[sp,#0x58]      ;372
0001f0  e9dd1018          LDRD     r1,r0,[sp,#0x60]      ;372
0001f4  e9cd2302          STRD     r2,r3,[sp,#8]         ;372
0001f8  e9cd1004          STRD     r1,r0,[sp,#0x10]      ;372
0001fc  e9dd0114          LDRD     r0,r1,[sp,#0x50]      ;372
000200  f8dfc074          LDR      r12,|L5.632|
000204  e9cd0100          STRD     r0,r1,[sp,#0]         ;372
000208  f8dcc000          LDR      r12,[r12,#0]          ;372  ; usmart_dev
00020c  f85c7034          LDR      r7,[r12,r4,LSL #3]    ;372
000210  a810              ADD      r0,sp,#0x40           ;372
000212  c80f              LDM      r0,{r0-r3}            ;372
000214  47b8              BLX      r7                    ;372
000216  4605              MOV      r5,r0                 ;372
000218  bf00              NOP                            ;374
                  |L5.538|
00021a  bf00              NOP                            ;339
00021c  f7fffffe          BL       usmart_get_runtime
000220  f89d0018          LDRB     r0,[sp,#0x18]         ;379
000224  2801              CMP      r0,#1                 ;379
000226  d10c              BNE      |L5.578|
000228  4813              LDR      r0,|L5.632|
00022a  7dc0              LDRB     r0,[r0,#0x17]         ;381  ; usmart_dev
00022c  b920              CBNZ     r0,|L5.568|
00022e  4629              MOV      r1,r5                 ;381
000230  a01b              ADR      r0,|L5.672|
000232  f7fffffe          BL       __2printf
000236  e007              B        |L5.584|
                  |L5.568|
000238  4629              MOV      r1,r5                 ;382
00023a  a01b              ADR      r0,|L5.680|
00023c  f7fffffe          BL       __2printf
000240  e002              B        |L5.584|
                  |L5.578|
000242  a018              ADR      r0,|L5.676|
000244  f7fffffe          BL       __2printf
                  |L5.584|
000248  480b              LDR      r0,|L5.632|
00024a  f89000ec          LDRB     r0,[r0,#0xec]         ;384  ; usmart_dev
00024e  b188              CBZ      r0,|L5.628|
000250  4809              LDR      r0,|L5.632|
000252  f8d000f0          LDR      r0,[r0,#0xf0]         ;386  ; usmart_dev
000256  210a              MOVS     r1,#0xa               ;386
000258  fbb0f2f1          UDIV     r2,r0,r1              ;386
00025c  fb010712          MLS      r7,r1,r2,r0           ;386
000260  4805              LDR      r0,|L5.632|
000262  f8d000f0          LDR      r0,[r0,#0xf0]         ;386  ; usmart_dev
000266  fbb0f8f1          UDIV     r8,r0,r1              ;386
00026a  463a              MOV      r2,r7                 ;386
00026c  4641              MOV      r1,r8                 ;386
00026e  a011              ADR      r0,|L5.692|
000270  f7fffffe          BL       __2printf
                  |L5.628|
000274  bf00              NOP      
000276  e6cb              B        |L5.16|
;;;389    //usmart扫描函数
                          ENDP

                  |L5.632|
                          DCD      usmart_dev
                  |L5.636|
00027c  0d0a2573          DCB      "\r\n%s(",0
000280  2800    
000282  00                DCB      0
000283  00                DCB      0
                  |L5.644|
000284  256300            DCB      "%c",0
000287  00                DCB      0
                  |L5.648|
000288  257300            DCB      "%s",0
00028b  00                DCB      0
                  |L5.652|
00028c  256c6400          DCB      "%ld",0
                  |L5.656|
000290  30582558          DCB      "0X%X",0
000294  00      
000295  00                DCB      0
000296  00                DCB      0
000297  00                DCB      0
                  |L5.664|
000298  2c00              DCB      ",",0
00029a  00                DCB      0
00029b  00                DCB      0
                  |L5.668|
00029c  2900              DCB      ")",0
00029e  00                DCB      0
00029f  00                DCB      0
                  |L5.672|
0002a0  3d256c75          DCB      "=%lu"
                  |L5.676|
0002a4  3b0d0a00          DCB      ";\r\n",0
                  |L5.680|
0002a8  3d305825          DCB      "=0X%X;\r\n",0
0002ac  583b0d0a
0002b0  00      
0002b1  00                DCB      0
0002b2  00                DCB      0
0002b3  00                DCB      0
                  |L5.692|
0002b4  46756e63          DCB      "Function Run Time:%d.%1dms\r\n",0
0002b8  74696f6e
0002bc  2052756e
0002c0  2054696d
0002c4  653a2564
0002c8  2e253164
0002cc  6d730d0a
0002d0  00      
0002d1  00                DCB      0
0002d2  00                DCB      0
0002d3  00                DCB      0

                          AREA ||i.usmart_get_runtime||, CODE, READONLY, ALIGN=2

                  usmart_get_runtime PROC
;;;219    //需要根据所移植到的MCU的定时器参数进行修改
;;;220    u32 usmart_get_runtime(void)
000000  480e              LDR      r0,|L6.60|
;;;221    {
;;;222    	if(__HAL_TIM_GET_FLAG(&TIM4_Handler,TIM_FLAG_UPDATE)==SET)//在运行期间,产生了定时器溢出
000002  6800              LDR      r0,[r0,#0]  ; TIM4_Handler
000004  6900              LDR      r0,[r0,#0x10]
000006  f0000001          AND      r0,r0,#1
00000a  b140              CBZ      r0,|L6.30|
;;;223    	{
;;;224    		usmart_dev.runtime+=0XFFFF;
00000c  480c              LDR      r0,|L6.64|
00000e  f8d000f0          LDR      r0,[r0,#0xf0]  ; usmart_dev
000012  f64f71ff          MOV      r1,#0xffff
000016  4408              ADD      r0,r0,r1
000018  4909              LDR      r1,|L6.64|
00001a  f8c100f0          STR      r0,[r1,#0xf0]  ; usmart_dev
                  |L6.30|
;;;225    	}
;;;226    	usmart_dev.runtime+=__HAL_TIM_GET_COUNTER(&TIM4_Handler);
00001e  4808              LDR      r0,|L6.64|
000020  f8d000f0          LDR      r0,[r0,#0xf0]  ; usmart_dev
000024  4905              LDR      r1,|L6.60|
000026  6809              LDR      r1,[r1,#0]  ; TIM4_Handler
000028  6a49              LDR      r1,[r1,#0x24]
00002a  4408              ADD      r0,r0,r1
00002c  4904              LDR      r1,|L6.64|
00002e  f8c100f0          STR      r0,[r1,#0xf0]  ; usmart_dev
;;;227    	return usmart_dev.runtime;		//返回计数值
000032  4608              MOV      r0,r1
000034  f8d000f0          LDR      r0,[r0,#0xf0]  ; usmart_dev
;;;228    }  
000038  4770              BX       lr
;;;229    //下面这两个函数,非USMART函数,放到这里,仅仅方便移植. 
                          ENDP

00003a  0000              DCW      0x0000
                  |L6.60|
                          DCD      TIM4_Handler
                  |L6.64|
                          DCD      usmart_dev

                          AREA ||i.usmart_init||, CODE, READONLY, ALIGN=2

                  usmart_init PROC
;;;263    //sysclk:系统时钟（Mhz）
;;;264    void usmart_init(u8 sysclk)
000000  b510              PUSH     {r4,lr}
;;;265    {
000002  4604              MOV      r4,r0
;;;266    #if USMART_ENTIMX_SCAN==1
;;;267    	Timer4_Init(1000,(u32)sysclk*100-1);//分频,时钟为10K ,100ms中断一次,注意,计数频率必须为10Khz,以和runtime单位(0.1ms)同步.
000004  eb0400c4          ADD      r0,r4,r4,LSL #3
000008  eb001004          ADD      r0,r0,r4,LSL #4
00000c  2201              MOVS     r2,#1
00000e  ebc20080          RSB      r0,r2,r0,LSL #2
000012  b281              UXTH     r1,r0
000014  f44f707a          MOV      r0,#0x3e8
000018  f7fffffe          BL       Timer4_Init
;;;268    #endif
;;;269    	usmart_dev.sptype=1;	//十六进制显示参数
00001c  2001              MOVS     r0,#1
00001e  4901              LDR      r1,|L7.36|
000020  75c8              STRB     r0,[r1,#0x17]
;;;270    }		
000022  bd10              POP      {r4,pc}
;;;271    //从str中获取函数名,id,及参数信息
                          ENDP

                  |L7.36|
                          DCD      usmart_dev

                          AREA ||i.usmart_reset_runtime||, CODE, READONLY, ALIGN=2

                  usmart_reset_runtime PROC
;;;209    //需要根据所移植到的MCU的定时器参数进行修改
;;;210    void usmart_reset_runtime(void)
000000  f06f0001          MVN      r0,#1
;;;211    {
;;;212        __HAL_TIM_CLEAR_FLAG(&TIM4_Handler,TIM_FLAG_UPDATE);//清除中断标志位 
000004  4909              LDR      r1,|L8.44|
000006  6809              LDR      r1,[r1,#0]  ; TIM4_Handler
000008  6108              STR      r0,[r1,#0x10]
;;;213        __HAL_TIM_SET_AUTORELOAD(&TIM4_Handler,0XFFFF);     //将重装载值设置到最大
00000a  bf00              NOP      
00000c  0c00              LSRS     r0,r0,#16
00000e  4907              LDR      r1,|L8.44|
000010  6809              LDR      r1,[r1,#0]  ; TIM4_Handler
000012  62c8              STR      r0,[r1,#0x2c]
000014  4601              MOV      r1,r0
000016  4805              LDR      r0,|L8.44|
000018  60c1              STR      r1,[r0,#0xc]
00001a  bf00              NOP      
;;;214        __HAL_TIM_SET_COUNTER(&TIM4_Handler,0);             //清空定时器的CNT
00001c  2000              MOVS     r0,#0
00001e  4903              LDR      r1,|L8.44|
000020  6809              LDR      r1,[r1,#0]  ; TIM4_Handler
000022  6248              STR      r0,[r1,#0x24]
;;;215    	usmart_dev.runtime=0;	
000024  4902              LDR      r1,|L8.48|
000026  f8c100f0          STR      r0,[r1,#0xf0]  ; usmart_dev
;;;216    }
00002a  4770              BX       lr
;;;217    //获得runtime时间
                          ENDP

                  |L8.44|
                          DCD      TIM4_Handler
                  |L8.48|
                          DCD      usmart_dev

                          AREA ||i.usmart_scan||, CODE, READONLY, ALIGN=2

                  usmart_scan PROC
;;;393    //如果非ALIENTEK用户,则USART_RX_STA和USART_RX_BUF[]需要用户自己实现
;;;394    void usmart_scan(void)
000000  b570              PUSH     {r4-r6,lr}
;;;395    {
;;;396    	u8 sta,len;  
;;;397    	if(USART_RX_STA&0x8000)//串口接收完成？
000002  481d              LDR      r0,|L9.120|
000004  8800              LDRH     r0,[r0,#0]  ; USART_RX_STA
000006  f4004000          AND      r0,r0,#0x8000
00000a  2800              CMP      r0,#0
00000c  d033              BEQ      |L9.118|
;;;398    	{					   
;;;399    		len=USART_RX_STA&0x3fff;	//得到此次接收到的数据长度
00000e  481a              LDR      r0,|L9.120|
000010  7805              LDRB     r5,[r0,#0]  ; USART_RX_STA
;;;400    		USART_RX_BUF[len]='\0';	//在末尾加入结束符. 
000012  2000              MOVS     r0,#0
000014  4919              LDR      r1,|L9.124|
000016  5548              STRB     r0,[r1,r5]
;;;401    		sta=usmart_dev.cmd_rec(USART_RX_BUF);//得到函数各个信息
000018  4819              LDR      r0,|L9.128|
00001a  6881              LDR      r1,[r0,#8]  ; usmart_dev
00001c  4817              LDR      r0,|L9.124|
00001e  4788              BLX      r1
000020  4604              MOV      r4,r0
;;;402    		if(sta==0)usmart_dev.exe();	//执行函数 
000022  b91c              CBNZ     r4,|L9.44|
000024  4916              LDR      r1,|L9.128|
000026  68c8              LDR      r0,[r1,#0xc]  ; usmart_dev
000028  4780              BLX      r0
00002a  e021              B        |L9.112|
                  |L9.44|
;;;403    		else 
;;;404    		{  
;;;405    			len=usmart_sys_cmd_exe(USART_RX_BUF);
00002c  4813              LDR      r0,|L9.124|
00002e  f7fffffe          BL       usmart_sys_cmd_exe
000032  4605              MOV      r5,r0
;;;406    			if(len!=USMART_FUNCERR)sta=len;
000034  2d01              CMP      r5,#1
000036  d000              BEQ      |L9.58|
000038  462c              MOV      r4,r5
                  |L9.58|
;;;407    			if(sta)
00003a  b1cc              CBZ      r4,|L9.112|
;;;408    			{   
;;;409    				switch(sta)
00003c  2c01              CMP      r4,#1
00003e  d006              BEQ      |L9.78|
000040  2c02              CMP      r4,#2
000042  d008              BEQ      |L9.86|
000044  2c03              CMP      r4,#3
000046  d00a              BEQ      |L9.94|
000048  2c04              CMP      r4,#4
00004a  d110              BNE      |L9.110|
00004c  e00b              B        |L9.102|
                  |L9.78|
;;;410    				{
;;;411    					case USMART_FUNCERR:
;;;412    						printf("函数错误!\r\n");
00004e  a00d              ADR      r0,|L9.132|
000050  f7fffffe          BL       __2printf
;;;413                          				
;;;414    						break;	
000054  e00b              B        |L9.110|
                  |L9.86|
;;;415    					case USMART_PARMERR:
;;;416    						printf("参数错误!\r\n");   			
000056  a00e              ADR      r0,|L9.144|
000058  f7fffffe          BL       __2printf
;;;417    						break;				
00005c  e007              B        |L9.110|
                  |L9.94|
;;;418    					case USMART_PARMOVER:
;;;419    						printf("参数太多!\r\n");   			
00005e  a00f              ADR      r0,|L9.156|
000060  f7fffffe          BL       __2printf
;;;420    						break;		
000064  e003              B        |L9.110|
                  |L9.102|
;;;421    					case USMART_NOFUNCFIND:
;;;422    						printf("未找到匹配的函数!\r\n");   			
000066  a010              ADR      r0,|L9.168|
000068  f7fffffe          BL       __2printf
;;;423    						break;		
00006c  bf00              NOP      
                  |L9.110|
00006e  bf00              NOP                            ;414
                  |L9.112|
;;;424    				}
;;;425    			}
;;;426    		}
;;;427    		USART_RX_STA=0;//状态寄存器清空	    
000070  2000              MOVS     r0,#0
000072  4901              LDR      r1,|L9.120|
000074  8008              STRH     r0,[r1,#0]
                  |L9.118|
;;;428    	}
;;;429    }
000076  bd70              POP      {r4-r6,pc}
;;;430    #if USMART_USE_WRFUNS==1 	//如果使能了读写操作
                          ENDP

                  |L9.120|
                          DCD      USART_RX_STA
                  |L9.124|
                          DCD      USART_RX_BUF
                  |L9.128|
                          DCD      usmart_dev
                  |L9.132|
000084  baafcafd          DCB      186,175,202,253,180,237,206,243,"!\r\n",0
000088  b4edcef3
00008c  210d0a00
                  |L9.144|
000090  b2cecafd          DCB      178,206,202,253,180,237,206,243,"!\r\n",0
000094  b4edcef3
000098  210d0a00
                  |L9.156|
00009c  b2cecafd          DCB      178,206,202,253,204,171,182,224,"!\r\n",0
0000a0  ccabb6e0
0000a4  210d0a00
                  |L9.168|
0000a8  ceb4d5d2          DCB      206,180,213,210,181,189,198,165,197,228,181,196,186,175,202
0000ac  b5bdc6a5
0000b0  c5e4b5c4
0000b4  baafca  
0000b7  fd210d0a          DCB      253,"!\r\n",0
0000bb  00      

                          AREA ||i.usmart_sys_cmd_exe||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_x
                          REQUIRE _printf_longlong_hex
                          REQUIRE _printf_str
                          REQUIRE _printf_sizespec
                          REQUIRE _printf_u
                          REQUIRE _printf_int_dec
                  usmart_sys_cmd_exe PROC
;;;80     //0,成功处理;其他,错误代码;
;;;81     u8 usmart_sys_cmd_exe(u8 *str)
000000  b510              PUSH     {r4,lr}
;;;82     {
000002  b08c              SUB      sp,sp,#0x30
000004  4604              MOV      r4,r0
;;;83     	u8 i;
;;;84     	u8 sfname[MAX_FNAME_LEN];//存放本地函数名
;;;85     	u8 pnum;
;;;86     	u8 rval;
;;;87     	u32 res;  
;;;88     	res=usmart_get_cmdname(str,sfname,&i,MAX_FNAME_LEN);//得到指令及指令长度
000006  231e              MOVS     r3,#0x1e
000008  aa0b              ADD      r2,sp,#0x2c
00000a  a903              ADD      r1,sp,#0xc
00000c  4620              MOV      r0,r4
00000e  f7fffffe          BL       usmart_get_cmdname
000012  9000              STR      r0,[sp,#0]
;;;89     	if(res)return USMART_FUNCERR;//错误的指令 
000014  9800              LDR      r0,[sp,#0]
000016  b110              CBZ      r0,|L10.30|
000018  2001              MOVS     r0,#1
                  |L10.26|
;;;90     	str+=i;	 	 			    
;;;91     	for(i=0;i<sizeof(sys_cmd_tab)/4;i++)//支持的系统指令
;;;92     	{
;;;93     		if(usmart_strcmp(sfname,sys_cmd_tab[i])==0)break;
;;;94     	}
;;;95     	switch(i)
;;;96     	{					   
;;;97     		case 0:
;;;98     		case 1://帮助指令
;;;99     			printf("\r\n");
;;;100    #if USMART_USE_HELP 
;;;101    			printf("------------------------USMART V3.3------------------------ \r\n");
;;;102    			printf("    USMART是由ALIENTEK开发的一个灵巧的串口调试互交组件,通过 \r\n");
;;;103    			printf("它,你可以通过串口助手调用程序里面的任何函数,并执行.因此,你可\r\n");
;;;104    			printf("以随意更改函数的输入参数(支持数字(10/16进制,支持负数)、字符串\r\n"),
;;;105    			printf("、函数入口地址等作为参数),单个函数最多支持10个输入参数,并支持\r\n"),  
;;;106    			printf("函数返回值显示.支持参数显示进制设置功能,支持进制转换功能.\r\n");
;;;107    			printf("技术支持:www.openedv.com\r\n");
;;;108    			printf("USMART有7个系统命令(必须小写):\r\n");
;;;109    			printf("?:      获取帮助信息\r\n");
;;;110    			printf("help:   获取帮助信息\r\n");
;;;111    			printf("list:   可用的函数列表\r\n\n");
;;;112    			printf("id:     可用函数的ID列表\r\n\n");
;;;113    			printf("hex:    参数16进制显示,后跟空格+数字即执行进制转换\r\n\n");
;;;114    			printf("dec:    参数10进制显示,后跟空格+数字即执行进制转换\r\n\n");
;;;115    			printf("runtime:1,开启函数运行计时;0,关闭函数运行计时;\r\n\n");
;;;116    			printf("请按照程序编写格式输入函数名及参数并以回车键结束.\r\n");    
;;;117    			printf("--------------------------ALIENTEK------------------------- \r\n");
;;;118    #else
;;;119    			printf("指令失效\r\n");
;;;120    #endif
;;;121    			break;
;;;122    		case 2://查询指令
;;;123    			printf("\r\n");
;;;124    			printf("-------------------------函数清单--------------------------- \r\n");
;;;125    			for(i=0;i<usmart_dev.fnum;i++)printf("%s\r\n",usmart_dev.funs[i].name);
;;;126    			printf("\r\n");
;;;127    			break;	 
;;;128    		case 3://查询ID
;;;129    			printf("\r\n");
;;;130    			printf("-------------------------函数 ID --------------------------- \r\n");
;;;131    			for(i=0;i<usmart_dev.fnum;i++)
;;;132    			{
;;;133    				usmart_get_fname((u8*)usmart_dev.funs[i].name,sfname,&pnum,&rval);//得到本地函数名 
;;;134    				printf("%s id is:\r\n0X%08X\r\n",sfname,usmart_dev.funs[i].func); //显示ID
;;;135    			}
;;;136    			printf("\r\n");
;;;137    			break;
;;;138    		case 4://hex指令
;;;139    			printf("\r\n");
;;;140    			usmart_get_aparm(str,sfname,&i);
;;;141    			if(i==0)//参数正常
;;;142    			{
;;;143    				i=usmart_str2num(sfname,&res);	   	//记录该参数	
;;;144    				if(i==0)						  	//进制转换功能
;;;145    				{
;;;146    					printf("HEX:0X%X\r\n",res);	   	//转为16进制
;;;147    				}else if(i!=4)return USMART_PARMERR;//参数错误.
;;;148    				else 				   				//参数显示设定功能
;;;149    				{
;;;150    					printf("16进制参数显示!\r\n");
;;;151    					usmart_dev.sptype=SP_TYPE_HEX;  
;;;152    				}
;;;153    
;;;154    			}else return USMART_PARMERR;			//参数错误.
;;;155    			printf("\r\n"); 
;;;156    			break;
;;;157    		case 5://dec指令
;;;158    			printf("\r\n");
;;;159    			usmart_get_aparm(str,sfname,&i);
;;;160    			if(i==0)//参数正常
;;;161    			{
;;;162    				i=usmart_str2num(sfname,&res);	   	//记录该参数	
;;;163    				if(i==0)						   	//进制转换功能
;;;164    				{
;;;165    					printf("DEC:%lu\r\n",res);	   	//转为10进制
;;;166    				}else if(i!=4)return USMART_PARMERR;//参数错误.
;;;167    				else 				   				//参数显示设定功能
;;;168    				{
;;;169    					printf("10进制参数显示!\r\n");
;;;170    					usmart_dev.sptype=SP_TYPE_DEC;  
;;;171    				}
;;;172    
;;;173    			}else return USMART_PARMERR;			//参数错误. 
;;;174    			printf("\r\n"); 
;;;175    			break;	 
;;;176    		case 6://runtime指令,设置是否显示函数执行时间
;;;177    			printf("\r\n");
;;;178    			usmart_get_aparm(str,sfname,&i);
;;;179    			if(i==0)//参数正常
;;;180    			{
;;;181    				i=usmart_str2num(sfname,&res);	   		//记录该参数	
;;;182    				if(i==0)						   		//读取指定地址数据功能
;;;183    				{
;;;184    					if(USMART_ENTIMX_SCAN==0)printf("\r\nError! \r\nTo EN RunTime function,Please set USMART_ENTIMX_SCAN = 1 first!\r\n");//报错
;;;185    					else
;;;186    					{
;;;187    						usmart_dev.runtimeflag=res;
;;;188    						if(usmart_dev.runtimeflag)printf("Run Time Calculation ON\r\n");
;;;189    						else printf("Run Time Calculation OFF\r\n"); 
;;;190    					}
;;;191    				}else return USMART_PARMERR;   			//未带参数,或者参数错误	 
;;;192     			}else return USMART_PARMERR;				//参数错误. 
;;;193    			printf("\r\n"); 
;;;194    			break;	    
;;;195    		default://非法指令
;;;196    			return USMART_FUNCERR;
;;;197    	}
;;;198    	return 0;
;;;199    }
00001a  b00c              ADD      sp,sp,#0x30
00001c  bd10              POP      {r4,pc}
                  |L10.30|
00001e  f89d002c          LDRB     r0,[sp,#0x2c]         ;90
000022  4404              ADD      r4,r4,r0              ;90
000024  2000              MOVS     r0,#0                 ;91
000026  900b              STR      r0,[sp,#0x2c]         ;91
000028  e00e              B        |L10.72|
                  |L10.42|
00002a  4840              LDR      r0,|L10.300|
00002c  f89d202c          LDRB     r2,[sp,#0x2c]         ;93
000030  f8501022          LDR      r1,[r0,r2,LSL #2]     ;93
000034  a803              ADD      r0,sp,#0xc            ;93
000036  f7fffffe          BL       usmart_strcmp
00003a  b900              CBNZ     r0,|L10.62|
00003c  e008              B        |L10.80|
                  |L10.62|
00003e  f89d002c          LDRB     r0,[sp,#0x2c]         ;91
000042  1c40              ADDS     r0,r0,#1              ;91
000044  b2c0              UXTB     r0,r0                 ;91
000046  900b              STR      r0,[sp,#0x2c]         ;91
                  |L10.72|
000048  f89d002c          LDRB     r0,[sp,#0x2c]         ;91
00004c  2807              CMP      r0,#7                 ;91
00004e  d3ec              BCC      |L10.42|
                  |L10.80|
000050  bf00              NOP                            ;93
000052  f89d002c          LDRB     r0,[sp,#0x2c]         ;95
000056  2807              CMP      r0,#7                 ;95
000058  d263              BCS      |L10.290|
00005a  e8dff000          TBB      [pc,r0]               ;95
00005e  0405              DCB      0x04,0x05
000060  3c5e6564          DCB      0x3c,0x5e,0x65,0x64
000064  6300              DCB      0x63,0x00
000066  bf00              NOP                            ;98
000068  a031              ADR      r0,|L10.304|
00006a  f7fffffe          BL       __2printf
00006e  a031              ADR      r0,|L10.308|
000070  f7fffffe          BL       __2printf
000074  a03f              ADR      r0,|L10.372|
000076  f7fffffe          BL       __2printf
00007a  a04e              ADR      r0,|L10.436|
00007c  f7fffffe          BL       __2printf
000080  a05c              ADR      r0,|L10.500|
000082  f7fffffe          BL       __2printf
000086  a06b              ADR      r0,|L10.564|
000088  f7fffffe          BL       __2printf
00008c  a079              ADR      r0,|L10.628|
00008e  f7fffffe          BL       __2printf
000092  a087              ADR      r0,|L10.688|
000094  f7fffffe          BL       __2printf
000098  a08c              ADR      r0,|L10.716|
00009a  f7fffffe          BL       __2printf
00009e  a094              ADR      r0,|L10.752|
0000a0  f7fffffe          BL       __2printf
0000a4  a098              ADR      r0,|L10.776|
0000a6  f7fffffe          BL       __2printf
0000aa  a09d              ADR      r0,|L10.800|
0000ac  f7fffffe          BL       __2printf
0000b0  a0a2              ADR      r0,|L10.828|
0000b2  f7fffffe          BL       __2printf
0000b6  a0a8              ADR      r0,|L10.856|
0000b8  f7fffffe          BL       __2printf
0000bc  a0b4              ADR      r0,|L10.912|
0000be  f7fffffe          BL       __2printf
0000c2  a0c1              ADR      r0,|L10.968|
0000c4  f7fffffe          BL       __2printf
0000c8  a0cc              ADR      r0,|L10.1020|
0000ca  f7fffffe          BL       __2printf
0000ce  a0d8              ADR      r0,|L10.1072|
0000d0  f7fffffe          BL       __2printf
0000d4  e2a2              B        |L10.1564|
0000d6  a016              ADR      r0,|L10.304|
0000d8  f7fffffe          BL       __2printf
0000dc  a0e4              ADR      r0,|L10.1136|
0000de  f7fffffe          BL       __2printf
0000e2  2000              MOVS     r0,#0                 ;125
0000e4  900b              STR      r0,[sp,#0x2c]         ;125
0000e6  e00e              B        |L10.262|
                  |L10.232|
0000e8  48f1              LDR      r0,|L10.1200|
0000ea  6800              LDR      r0,[r0,#0]            ;125  ; usmart_dev
0000ec  f89d202c          LDRB     r2,[sp,#0x2c]         ;125
0000f0  eb0000c2          ADD      r0,r0,r2,LSL #3       ;125
0000f4  6841              LDR      r1,[r0,#4]            ;125
0000f6  a0ef              ADR      r0,|L10.1204|
0000f8  f7fffffe          BL       __2printf
0000fc  f89d002c          LDRB     r0,[sp,#0x2c]         ;125
000100  1c40              ADDS     r0,r0,#1              ;125
000102  b2c0              UXTB     r0,r0                 ;125
000104  900b              STR      r0,[sp,#0x2c]         ;125
                  |L10.262|
000106  48ea              LDR      r0,|L10.1200|
000108  7d00              LDRB     r0,[r0,#0x14]         ;125  ; usmart_dev
00010a  f89d102c          LDRB     r1,[sp,#0x2c]         ;125
00010e  4288              CMP      r0,r1                 ;125
000110  dcea              BGT      |L10.232|
000112  a007              ADR      r0,|L10.304|
000114  f7fffffe          BL       __2printf
000118  e280              B        |L10.1564|
00011a  a005              ADR      r0,|L10.304|
00011c  f7fffffe          BL       __2printf
000120  e1cc              B        |L10.1212|
                  |L10.290|
000122  e279              B        |L10.1560|
000124  e24d              B        |L10.1474|
000126  e221              B        |L10.1388|
000128  e1f4              B        |L10.1300|
00012a  0000              DCW      0x0000
                  |L10.300|
                          DCD      sys_cmd_tab
                  |L10.304|
000130  0d0a00            DCB      "\r\n",0
000133  00                DCB      0
                  |L10.308|
000134  2d2d2d2d          DCB      "------------------------USMART V3.3--------------------"
000138  2d2d2d2d
00013c  2d2d2d2d
000140  2d2d2d2d
000144  2d2d2d2d
000148  2d2d2d2d
00014c  55534d41
000150  52542056
000154  332e332d
000158  2d2d2d2d
00015c  2d2d2d2d
000160  2d2d2d2d
000164  2d2d2d2d
000168  2d2d2d  
00016b  2d2d2d2d          DCB      "---- \r\n",0
00016f  200d0a00
000173  00                DCB      0
                  |L10.372|
000174  20202020          DCB      "    USMART",202,199,211,201,"ALIENTEK",191,170,183,162,181
000178  55534d41
00017c  5254cac7
000180  d3c9414c
000184  49454e54
000188  454bbfaa
00018c  b7a2b5  
00018f  c4d2bbb8          DCB      196,210,187,184,246,193,233,199,201,181,196,180,174,191,218
000193  f6c1e9c7
000197  c9b5c4b4
00019b  aebfda  
00019e  b5f7cad4          DCB      181,247,202,212,187,165,189,187,215,233,188,254,",",205,168
0001a2  bba5bdbb
0001a6  d7e9bcfe
0001aa  2ccda8  
0001ad  b9fd200d          DCB      185,253," \r\n",0
0001b1  0a00    
0001b3  00                DCB      0
                  |L10.436|
0001b4  cbfc2cc4          DCB      203,252,",",196,227,191,201,210,212,205,168,185,253,180,174
0001b8  e3bfc9d2
0001bc  d4cda8b9
0001c0  fdb4ae  
0001c3  bfdad6fa          DCB      191,218,214,250,202,214,181,247,211,195,179,204,208,242,192
0001c7  cad6b5f7
0001cb  d3c3b3cc
0001cf  d0f2c0  
0001d2  efc3e6b5          DCB      239,195,230,181,196,200,206,186,206,186,175,202,253,",",178
0001d6  c4c8ceba
0001da  cebaafca
0001de  fd2cb2  
0001e1  a2d6b4d0          DCB      162,214,180,208,208,".",210,242,180,203,",",196,227,191,201
0001e5  d02ed2f2
0001e9  b4cb2cc4
0001ed  e3bfc9  
0001f0  0d0a00            DCB      "\r\n",0
0001f3  00                DCB      0
                  |L10.500|
0001f4  d2d4cbe6          DCB      210,212,203,230,210,226,184,252,184,196,186,175,202,253,181
0001f8  d2e2b8fc
0001fc  b8c4baaf
000200  cafdb5  
000203  c4cae4c8          DCB      196,202,228,200,235,178,206,202,253,"(",214,167,179,214,202
000207  ebb2ceca
00020b  fd28d6a7
00020f  b3d6ca  
000212  fdd7d628          DCB      253,215,214,"(10/16",189,248,214,198,",",214,167,179,214
000216  31302f31
00021a  36bdf8d6
00021e  c62cd6a7
000222  b3d6    
000224  b8bacafd          DCB      184,186,202,253,")",161,162,215,214,183,251,180,174,"\r\n"
000228  29a1a2d7
00022c  d6b7fbb4
000230  ae0d0a  
000233  00                DCB      0
                  |L10.564|
000234  a1a2baaf          DCB      161,162,186,175,202,253,200,235,191,218,181,216,214,183,181
000238  cafdc8eb
00023c  bfdab5d8
000240  d6b7b5  
000243  c8d7f7ce          DCB      200,215,247,206,170,178,206,202,253,"),",181,165,184,246
000247  aab2ceca
00024b  fd292cb5
00024f  a5b8f6  
000252  baafcafd          DCB      186,175,202,253,215,238,182,224,214,167,179,214,"10",184
000256  d7eeb6e0
00025a  d6a7b3d6
00025e  3130b8  
000261  f6cae4c8          DCB      246,202,228,200,235,178,206,202,253,",",178,162,214,167,179
000265  ebb2ceca
000269  fd2cb2a2
00026d  d6a7b3  
000270  d60d0a00          DCB      214,"\r\n",0
                  |L10.628|
000274  baafcafd          DCB      186,175,202,253,183,181,187,216,214,181,207,212,202,190,"."
000278  b7b5bbd8
00027c  d6b5cfd4
000280  cabe2e  
000283  d6a7b3d6          DCB      214,167,179,214,178,206,202,253,207,212,202,190,189,248,214
000287  b2cecafd
00028b  cfd4cabe
00028f  bdf8d6  
000292  c6c9e8d6          DCB      198,201,232,214,195,185,166,196,220,",",214,167,179,214,189
000296  c3b9a6c4
00029a  dc2cd6a7
00029e  b3d6bd  
0002a1  f8d6c6d7          DCB      248,214,198,215,170,187,187,185,166,196,220,".\r\n",0
0002a5  aabbbbb9
0002a9  a6c4dc2e
0002ad  0d0a00  
                  |L10.688|
0002b0  bcbccaf5          DCB      188,188,202,245,214,167,179,214,":www.openedv.com\r\n",0
0002b4  d6a7b3d6
0002b8  3a777777
0002bc  2e6f7065
0002c0  6e656476
0002c4  2e636f6d
0002c8  0d0a00  
0002cb  00                DCB      0
                  |L10.716|
0002cc  55534d41          DCB      "USMART",211,208,"7",184,246,207,181,205,179,195,252,193
0002d0  5254d3d0
0002d4  37b8f6cf
0002d8  b5cdb3c3
0002dc  fcc1    
0002de  ee28b1d8          DCB      238,"(",177,216,208,235,208,161,208,180,"):\r\n",0
0002e2  d0ebd0a1
0002e6  d0b4293a
0002ea  0d0a00  
0002ed  00                DCB      0
0002ee  00                DCB      0
0002ef  00                DCB      0
                  |L10.752|
0002f0  3f3a2020          DCB      "?:      ",187,241,200,161,176,239,214,250,208,197,207,162
0002f4  20202020
0002f8  bbf1c8a1
0002fc  b0efd6fa
000300  d0c5cfa2
000304  0d0a00            DCB      "\r\n",0
000307  00                DCB      0
                  |L10.776|
000308  68656c70          DCB      "help:   ",187,241,200,161,176,239,214,250,208,197,207,162
00030c  3a202020
000310  bbf1c8a1
000314  b0efd6fa
000318  d0c5cfa2
00031c  0d0a00            DCB      "\r\n",0
00031f  00                DCB      0
                  |L10.800|
000320  6c697374          DCB      "list:   ",191,201,211,195,181,196,186,175,202,253,193,208
000324  3a202020
000328  bfc9d3c3
00032c  b5c4baaf
000330  cafdc1d0
000334  b1ed0d0a          DCB      177,237,"\r\n\n",0
000338  0a00    
00033a  00                DCB      0
00033b  00                DCB      0
                  |L10.828|
00033c  69643a20          DCB      "id:     ",191,201,211,195,186,175,202,253,181,196,"ID",193
000340  20202020
000344  bfc9d3c3
000348  baafcafd
00034c  b5c44944
000350  c1      
000351  d0b1ed0d          DCB      208,177,237,"\r\n\n",0
000355  0a0a00  
                  |L10.856|
000358  6865783a          DCB      "hex:    ",178,206,202,253,"16",189,248,214,198,207,212,202
00035c  20202020
000360  b2cecafd
000364  3136bdf8
000368  d6c6cfd4
00036c  ca      
00036d  be2cbaf3          DCB      190,",",186,243,184,250,191,213,184,241,"+",202,253,215,214
000371  b8fabfd5
000375  b8f12bca
000379  fdd7d6  
00037c  bcb4d6b4          DCB      188,180,214,180,208,208,189,248,214,198,215,170,187,187,"\r"
000380  d0d0bdf8
000384  d6c6d7aa
000388  bbbb0d  
00038b  0a0a00            DCB      "\n\n",0
00038e  00                DCB      0
00038f  00                DCB      0
                  |L10.912|
000390  6465633a          DCB      "dec:    ",178,206,202,253,"10",189,248,214,198,207,212,202
000394  20202020
000398  b2cecafd
00039c  3130bdf8
0003a0  d6c6cfd4
0003a4  ca      
0003a5  be2cbaf3          DCB      190,",",186,243,184,250,191,213,184,241,"+",202,253,215,214
0003a9  b8fabfd5
0003ad  b8f12bca
0003b1  fdd7d6  
0003b4  bcb4d6b4          DCB      188,180,214,180,208,208,189,248,214,198,215,170,187,187,"\r"
0003b8  d0d0bdf8
0003bc  d6c6d7aa
0003c0  bbbb0d  
0003c3  0a0a00            DCB      "\n\n",0
0003c6  00                DCB      0
0003c7  00                DCB      0
                  |L10.968|
0003c8  72756e74          DCB      "runtime:1,",191,170,198,244,186,175,202,253,212,203,208
0003cc  696d653a
0003d0  312cbfaa
0003d4  c6f4baaf
0003d8  cafdd4cb
0003dc  d0      
0003dd  d0bcc6ca          DCB      208,188,198,202,177,";0,",185,216,177,213,186,175,202,253
0003e1  b13b302c
0003e5  b9d8b1d5
0003e9  baafcafd
0003ed  d4cbd0d0          DCB      212,203,208,208,188,198,202,177,";\r\n\n",0
0003f1  bcc6cab1
0003f5  3b0d0a0a
0003f9  00      
0003fa  00                DCB      0
0003fb  00                DCB      0
                  |L10.1020|
0003fc  c7ebb0b4          DCB      199,235,176,180,213,213,179,204,208,242,177,224,208,180,184
000400  d5d5b3cc
000404  d0f2b1e0
000408  d0b4b8  
00040b  f1cabdca          DCB      241,202,189,202,228,200,235,186,175,202,253,195,251,188,176
00040f  e4c8ebba
000413  afcafdc3
000417  fbbcb0  
00041a  b2cecafd          DCB      178,206,202,253,178,162,210,212,187,216,179,181,188,252,189
00041e  b2a2d2d4
000422  bbd8b3b5
000426  bcfcbd  
000429  e1caf82e          DCB      225,202,248,".\r\n",0
00042d  0d0a00  
                  |L10.1072|
000430  2d2d2d2d          DCB      "--------------------------ALIENTEK---------------------"
000434  2d2d2d2d
000438  2d2d2d2d
00043c  2d2d2d2d
000440  2d2d2d2d
000444  2d2d2d2d
000448  2d2d414c
00044c  49454e54
000450  454b2d2d
000454  2d2d2d2d
000458  2d2d2d2d
00045c  2d2d2d2d
000460  2d2d2d2d
000464  2d2d2d  
000467  2d2d2d2d          DCB      "---- \r\n",0
00046b  200d0a00
00046f  00                DCB      0
                  |L10.1136|
000470  2d2d2d2d          DCB      "-------------------------",186,175,202,253,199,229,181,165
000474  2d2d2d2d
000478  2d2d2d2d
00047c  2d2d2d2d
000480  2d2d2d2d
000484  2d2d2d2d
000488  2dbaafca
00048c  fdc7e5b5
000490  a5      
000491  2d2d2d2d          DCB      "--------------------------- \r\n",0
000495  2d2d2d2d
000499  2d2d2d2d
00049d  2d2d2d2d
0004a1  2d2d2d2d
0004a5  2d2d2d2d
0004a9  2d2d2d20
0004ad  0d0a00  
                  |L10.1200|
                          DCD      usmart_dev
                  |L10.1204|
0004b4  25730d0a          DCB      "%s\r\n",0
0004b8  00      
0004b9  00                DCB      0
0004ba  00                DCB      0
0004bb  00                DCB      0
                  |L10.1212|
0004bc  a059              ADR      r0,|L10.1572|
0004be  f7fffffe          BL       __2printf
0004c2  2000              MOVS     r0,#0                 ;131
0004c4  900b              STR      r0,[sp,#0x2c]         ;131
0004c6  e01a              B        |L10.1278|
                  |L10.1224|
0004c8  4966              LDR      r1,|L10.1636|
0004ca  6809              LDR      r1,[r1,#0]            ;133  ; usmart_dev
0004cc  f89d202c          LDRB     r2,[sp,#0x2c]         ;133
0004d0  eb0101c2          ADD      r1,r1,r2,LSL #3       ;133
0004d4  ab01              ADD      r3,sp,#4              ;133
0004d6  aa02              ADD      r2,sp,#8              ;133
0004d8  6848              LDR      r0,[r1,#4]            ;133
0004da  a903              ADD      r1,sp,#0xc            ;133
0004dc  f7fffffe          BL       usmart_get_fname
0004e0  4860              LDR      r0,|L10.1636|
0004e2  6800              LDR      r0,[r0,#0]            ;134  ; usmart_dev
0004e4  f89d102c          LDRB     r1,[sp,#0x2c]         ;134
0004e8  f8502031          LDR      r2,[r0,r1,LSL #3]     ;134
0004ec  a903              ADD      r1,sp,#0xc            ;134
0004ee  a05e              ADR      r0,|L10.1640|
0004f0  f7fffffe          BL       __2printf
0004f4  f89d002c          LDRB     r0,[sp,#0x2c]         ;131
0004f8  1c40              ADDS     r0,r0,#1              ;131
0004fa  b2c0              UXTB     r0,r0                 ;131
0004fc  900b              STR      r0,[sp,#0x2c]         ;131
                  |L10.1278|
0004fe  4859              LDR      r0,|L10.1636|
000500  7d00              LDRB     r0,[r0,#0x14]         ;131  ; usmart_dev
000502  f89d102c          LDRB     r1,[sp,#0x2c]         ;131
000506  4288              CMP      r0,r1                 ;131
000508  dcde              BGT      |L10.1224|
00050a  f2af30dc          ADR      r0,|L10.304|
00050e  f7fffffe          BL       __2printf
000512  e083              B        |L10.1564|
                  |L10.1300|
000514  f2af30e8          ADR      r0,|L10.304|
000518  f7fffffe          BL       __2printf
00051c  aa0b              ADD      r2,sp,#0x2c           ;140
00051e  a903              ADD      r1,sp,#0xc            ;140
000520  4620              MOV      r0,r4                 ;140
000522  f7fffffe          BL       usmart_get_aparm
000526  f89d002c          LDRB     r0,[sp,#0x2c]         ;141
00052a  b9c8              CBNZ     r0,|L10.1376|
00052c  4669              MOV      r1,sp                 ;143
00052e  a803              ADD      r0,sp,#0xc            ;143
000530  f7fffffe          BL       usmart_str2num
000534  900b              STR      r0,[sp,#0x2c]         ;143
000536  f89d002c          LDRB     r0,[sp,#0x2c]         ;144
00053a  b920              CBNZ     r0,|L10.1350|
00053c  a04f              ADR      r0,|L10.1660|
00053e  9900              LDR      r1,[sp,#0]            ;146
000540  f7fffffe          BL       __2printf
000544  e00e              B        |L10.1380|
                  |L10.1350|
000546  f89d002c          LDRB     r0,[sp,#0x2c]         ;147
00054a  2804              CMP      r0,#4                 ;147
00054c  d001              BEQ      |L10.1362|
00054e  2002              MOVS     r0,#2                 ;147
000550  e563              B        |L10.26|
                  |L10.1362|
000552  a04d              ADR      r0,|L10.1672|
000554  f7fffffe          BL       __2printf
000558  2001              MOVS     r0,#1                 ;151
00055a  4942              LDR      r1,|L10.1636|
00055c  75c8              STRB     r0,[r1,#0x17]         ;151
00055e  e001              B        |L10.1380|
                  |L10.1376|
000560  2002              MOVS     r0,#2                 ;154
000562  e55a              B        |L10.26|
                  |L10.1380|
000564  a047              ADR      r0,|L10.1668|
000566  f7fffffe          BL       __2printf
00056a  e057              B        |L10.1564|
                  |L10.1388|
00056c  a045              ADR      r0,|L10.1668|
00056e  f7fffffe          BL       __2printf
000572  aa0b              ADD      r2,sp,#0x2c           ;159
000574  a903              ADD      r1,sp,#0xc            ;159
000576  4620              MOV      r0,r4                 ;159
000578  f7fffffe          BL       usmart_get_aparm
00057c  f89d002c          LDRB     r0,[sp,#0x2c]         ;160
000580  b9c8              CBNZ     r0,|L10.1462|
000582  4669              MOV      r1,sp                 ;162
000584  a803              ADD      r0,sp,#0xc            ;162
000586  f7fffffe          BL       usmart_str2num
00058a  900b              STR      r0,[sp,#0x2c]         ;162
00058c  f89d002c          LDRB     r0,[sp,#0x2c]         ;163
000590  b920              CBNZ     r0,|L10.1436|
000592  a042              ADR      r0,|L10.1692|
000594  9900              LDR      r1,[sp,#0]            ;165
000596  f7fffffe          BL       __2printf
00059a  e00e              B        |L10.1466|
                  |L10.1436|
00059c  f89d002c          LDRB     r0,[sp,#0x2c]         ;166
0005a0  2804              CMP      r0,#4                 ;166
0005a2  d001              BEQ      |L10.1448|
0005a4  2002              MOVS     r0,#2                 ;166
0005a6  e538              B        |L10.26|
                  |L10.1448|
0005a8  a03f              ADR      r0,|L10.1704|
0005aa  f7fffffe          BL       __2printf
0005ae  2000              MOVS     r0,#0                 ;170
0005b0  492c              LDR      r1,|L10.1636|
0005b2  75c8              STRB     r0,[r1,#0x17]         ;170
0005b4  e001              B        |L10.1466|
                  |L10.1462|
0005b6  2002              MOVS     r0,#2                 ;173
0005b8  e52f              B        |L10.26|
                  |L10.1466|
0005ba  a032              ADR      r0,|L10.1668|
0005bc  f7fffffe          BL       __2printf
0005c0  e02c              B        |L10.1564|
                  |L10.1474|
0005c2  a030              ADR      r0,|L10.1668|
0005c4  f7fffffe          BL       __2printf
0005c8  aa0b              ADD      r2,sp,#0x2c           ;178
0005ca  a903              ADD      r1,sp,#0xc            ;178
0005cc  4620              MOV      r0,r4                 ;178
0005ce  f7fffffe          BL       usmart_get_aparm
0005d2  f89d002c          LDRB     r0,[sp,#0x2c]         ;179
0005d6  b9c8              CBNZ     r0,|L10.1548|
0005d8  4669              MOV      r1,sp                 ;181
0005da  a803              ADD      r0,sp,#0xc            ;181
0005dc  f7fffffe          BL       usmart_str2num
0005e0  900b              STR      r0,[sp,#0x2c]         ;181
0005e2  f89d002c          LDRB     r0,[sp,#0x2c]         ;182
0005e6  b978              CBNZ     r0,|L10.1544|
0005e8  491e              LDR      r1,|L10.1636|
0005ea  9800              LDR      r0,[sp,#0]            ;187
0005ec  f88100ec          STRB     r0,[r1,#0xec]         ;187
0005f0  4608              MOV      r0,r1                 ;188
0005f2  f89000ec          LDRB     r0,[r0,#0xec]         ;188  ; usmart_dev
0005f6  b118              CBZ      r0,|L10.1536|
0005f8  a030              ADR      r0,|L10.1724|
0005fa  f7fffffe          BL       __2printf
0005fe  e007              B        |L10.1552|
                  |L10.1536|
000600  a035              ADR      r0,|L10.1752|
000602  f7fffffe          BL       __2printf
000606  e003              B        |L10.1552|
                  |L10.1544|
000608  2002              MOVS     r0,#2                 ;191
00060a  e506              B        |L10.26|
                  |L10.1548|
00060c  2002              MOVS     r0,#2                 ;192
00060e  e504              B        |L10.26|
                  |L10.1552|
000610  a01c              ADR      r0,|L10.1668|
000612  f7fffffe          BL       __2printf
000616  e001              B        |L10.1564|
                  |L10.1560|
000618  2001              MOVS     r0,#1                 ;196
00061a  e4fe              B        |L10.26|
                  |L10.1564|
00061c  bf00              NOP                            ;121
00061e  2000              MOVS     r0,#0                 ;198
000620  e4fb              B        |L10.26|
;;;200    ////////////////////////////////////////////////////////////////////////////////////////
                          ENDP

000622  0000              DCW      0x0000
                  |L10.1572|
000624  2d2d2d2d          DCB      "-------------------------",186,175,202,253," ID -------"
000628  2d2d2d2d
00062c  2d2d2d2d
000630  2d2d2d2d
000634  2d2d2d2d
000638  2d2d2d2d
00063c  2dbaafca
000640  fd204944
000644  202d2d2d
000648  2d2d2d2d
00064c  2d2d2d2d          DCB      "-------------------- \r\n",0
000650  2d2d2d2d
000654  2d2d2d2d
000658  2d2d2d2d
00065c  2d2d2d2d
000660  200d0a00
                  |L10.1636|
                          DCD      usmart_dev
                  |L10.1640|
000668  25732069          DCB      "%s id is:\r\n0X%08X\r\n",0
00066c  64206973
000670  3a0d0a30
000674  58253038
000678  580d0a00
                  |L10.1660|
00067c  4845583a          DCB      "HEX:0X%X"
000680  30582558
                  |L10.1668|
000684  0d0a00            DCB      "\r\n",0
000687  00                DCB      0
                  |L10.1672|
000688  3136bdf8          DCB      "16",189,248,214,198,178,206,202,253,207,212,202,190,"!\r"
00068c  d6c6b2ce
000690  cafdcfd4
000694  cabe210d
000698  0a00              DCB      "\n",0
00069a  00                DCB      0
00069b  00                DCB      0
                  |L10.1692|
00069c  4445433a          DCB      "DEC:%lu\r\n",0
0006a0  256c750d
0006a4  0a00    
0006a6  00                DCB      0
0006a7  00                DCB      0
                  |L10.1704|
0006a8  3130bdf8          DCB      "10",189,248,214,198,178,206,202,253,207,212,202,190,"!\r"
0006ac  d6c6b2ce
0006b0  cafdcfd4
0006b4  cabe210d
0006b8  0a00              DCB      "\n",0
0006ba  00                DCB      0
0006bb  00                DCB      0
                  |L10.1724|
0006bc  52756e20          DCB      "Run Time Calculation ON\r\n",0
0006c0  54696d65
0006c4  2043616c
0006c8  63756c61
0006cc  74696f6e
0006d0  204f4e0d
0006d4  0a00    
0006d6  00                DCB      0
0006d7  00                DCB      0
                  |L10.1752|
0006d8  52756e20          DCB      "Run Time Calculation OFF\r\n",0
0006dc  54696d65
0006e0  2043616c
0006e4  63756c61
0006e8  74696f6e
0006ec  204f4646
0006f0  0d0a00  
0006f3  00                DCB      0

                          AREA ||i.write_addr||, CODE, READONLY, ALIGN=1

                  write_addr PROC
;;;436    //在指定地址写入指定的值		 
;;;437    void write_addr(u32 addr,u32 val)
000000  6001              STR      r1,[r0,#0]
;;;438    {
;;;439    	*(u32*)addr=val; 	
;;;440    }
000002  4770              BX       lr
;;;441    #endif
                          ENDP


                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  TIM4_Handler
                          %        60

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

000000  3f00              DCB      "?",0
000002  00                DCB      0
000003  00                DCB      0
000004  68656c70          DCB      "help",0
000008  00      
000009  00                DCB      0
00000a  00                DCB      0
00000b  00                DCB      0
00000c  6c697374          DCB      "list",0
000010  00      
000011  00                DCB      0
000012  00                DCB      0
000013  00                DCB      0
000014  696400            DCB      "id",0
000017  00                DCB      0
000018  68657800          DCB      "hex",0
00001c  64656300          DCB      "dec",0
000020  72756e74          DCB      "runtime",0
000024  696d6500

                          AREA ||.data||, DATA, ALIGN=2

                  sys_cmd_tab
                          DCD      ||.conststring||
                          DCD      ||.conststring||+0x4
                          DCD      ||.conststring||+0xc
                          DCD      ||.conststring||+0x14
                          DCD      ||.conststring||+0x18
                          DCD      ||.conststring||+0x1c
                          DCD      ||.conststring||+0x20

;*** Start embedded assembler ***

#line 1 "..\\USMART\\usmart.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___8_usmart_c_3e792bad____REV16|
#line 388 "..\\CORE\\cmsis_armcc.h"
|__asm___8_usmart_c_3e792bad____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___8_usmart_c_3e792bad____REVSH|
#line 402
|__asm___8_usmart_c_3e792bad____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___8_usmart_c_3e792bad____RRX|
#line 587
|__asm___8_usmart_c_3e792bad____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
